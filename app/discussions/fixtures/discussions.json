[
{
  "model": "discussions.message",
  "pk": 420,
  "fields": {
    "created": "2018-01-24T00:29:58.714Z",
    "modified": "2018-01-24T00:29:58.714Z",
    "text": "hey <@U8F2Q2P7B> how\u2019s this going? Any follow-ups for Will or Vikas? If not, let us know so we can flag this topic as answered :muscle:",
    "session": 23,
    "author": 76,
    "time": "2017-12-19T09:16:08Z",
    "origin_slack_event": 426
  }
},
{
  "model": "discussions.message",
  "pk": 421,
  "fields": {
    "created": "2018-01-24T00:29:58.718Z",
    "modified": "2018-01-24T00:29:58.718Z",
    "text": "Try that when you have a sec. It fixes an IndexError, removes StringIO which is unneeded and flushes on finishing. If that doesn\u2019t do it, then it\u2019s likely something with the server which is difficult to debug without access",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T20:02:20Z",
    "origin_slack_event": 427
  }
},
{
  "model": "discussions.message",
  "pk": 422,
  "fields": {
    "created": "2018-01-24T00:29:58.721Z",
    "modified": "2018-01-24T00:29:58.722Z",
    "text": "```#!/usr/bin/python3\n\nimport itertools\nimport csv\nimport sys\nimport re\nimport cgi\n\n\ndef get_config_data(config, output, keys):\n    if keys is None:\n        return\n\n    for key, value in config.items():\n        row = \"\"\n        for col in keys:\n            if col in value:\n                row = row + value[col] + \",\"\n            else:\n                row = row + \",\"\n        output = output + \"\\n\" + row[:-1]\n    return output\n\n\ndef process_upload(csv_file):\n    output = \"\"\n\n    reader = csv.reader(csv_file, delimiter=\",\")\n\n    sec_name = ''\n    first_row = 0\n    in_section = 0\n    row_num = 0\n\n    columns = {\n        'HuntGroup_Info': [0, 0, {'GR_Name': 0, 'GR_Extension': 0}],\n        'IncallRoute_Info': [0, 0, {'ICR_Destination': 0, 'ICR_Number': 0, 'ICR_CLI': 0}],\n        'User_Info': [0, 0, {'US_Extension': 0, 'US_Fullname': 0, 'US_ForwardNumber': 0, 'US_ForwardBusyNumber': 0,\n                             'US_TwinMobileNumber': 0, 'US_TwinningType': 0, 'US_ForwardUnconditional': 0}],\n    }\n\n    for row in reader:\n        if first_row:\n            col_num = 0\n            for item in row:\n                if item in columns[sec_name][2]:\n                    columns[sec_name][2][item] = col_num\n                col_num = col_num + 1\n            first_row = 0\n        elif in_section:\n            if str(row[0]).endswith(\"_End\"):\n                in_section = 0\n                columns[sec_name][1] = row_num\n        elif row:\n            section = re.match(r'(.*)_Start', str(row[0]), re.M | re.I)\n            if section:\n                if section.group(1) in columns:\n                    first_row = 1\n                    in_section = 1\n                    sec_name = section.group(1)\n                    columns[sec_name][0] = row_num\n        else:\n            pass\n        row_num = row_num + 1\n\n    config = {}\n\n    for sec_name in columns:\n        csv_file.seek(0)\n\n        for row in itertools.islice(reader, columns[sec_name][0] + 2, columns[sec_name][1]):\n            index_col = 1\n            index_name = None\n\n            for col_name in columns[sec_name][2]:\n                if index_col:\n                    if [row[columns[sec_name][2][col_name]]][0] not in config:\n                        config[str([row[columns[sec_name][2][col_name]]][0])] = {}\n\n                    index_name = col_name\n                    config[(row[columns[sec_name][2][index_name]])][col_name] = row[columns[sec_name][2][col_name]]\n                    index_col = 0\n                else:\n                    config[(row[columns[sec_name][2][index_name]])][col_name] = row[columns[sec_name][2][col_name]]\n\n    output = output + \"DID,Extension,Full Name,Forwarding Number,Forwarding Enabled,Twinning Number,Twinning Enabled\"\n\n    output = get_config_data(config, output, ['ICR_Number', 'US_Extension', 'US_Fullname', 'US_ForwardNumber',\n                                              'US_ForwardUnconditional', 'US_TwinMobileNumber', 'US_TwinningType'])\n    csv_file.close()\n\n    print(\"Content-Type: text/plain\\n\\n\")\n    print(output)\n\n\nform = cgi.FieldStorage()\nif 'configuration_file' in form and form['configuration_file'].file:\n    csv_upload = form['configuration_file'].file\n    process_upload(csv_upload)\n    sys.stdout.flush()\nelse:\n    sys.exit()```",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T20:01:45Z",
    "origin_slack_event": 428
  }
},
{
  "model": "discussions.message",
  "pk": 423,
  "fields": {
    "created": "2018-01-24T00:29:58.726Z",
    "modified": "2018-01-24T00:29:58.726Z",
    "text": "Is this a static website? Trying to reproduce your set up locally. Also, is the pastebin script the current version? I refactored to make more pythonic but wasn\u2019t able to test with the input. Now that I have the input it doesn\u2019t seem to work.",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T19:39:51Z",
    "origin_slack_event": 429
  }
},
{
  "model": "discussions.message",
  "pk": 424,
  "fields": {
    "created": "2018-01-24T00:29:58.730Z",
    "modified": "2018-01-24T00:29:58.730Z",
    "text": "Yeah I haven't been able to find a whole lot on how to load something like this in memory from the web, reading and writing local files works and I even thought about storing a temporary file I'm just worried if two people try to do this at the same time they're going to wipe each other's file, or I'll have a ton of temporary files that weren't cleaned out properly",
    "session": 23,
    "author": 119,
    "time": "2017-12-16T18:59:46Z",
    "origin_slack_event": 430
  }
},
{
  "model": "discussions.message",
  "pk": 425,
  "fields": {
    "created": "2018-01-24T00:29:58.734Z",
    "modified": "2018-01-24T00:29:58.734Z",
    "text": "That's the configuration file it's trying to parse",
    "session": 23,
    "author": 119,
    "time": "2017-12-16T18:58:28Z",
    "origin_slack_event": 431
  }
},
{
  "model": "discussions.message",
  "pk": 426,
  "fields": {
    "created": "2018-01-24T00:29:58.738Z",
    "modified": "2018-01-24T00:29:58.738Z",
    "text": "<http://apt.jmaug.com/Configuration.txt>",
    "session": 23,
    "author": 119,
    "time": "2017-12-16T18:58:22Z",
    "origin_slack_event": 432
  }
},
{
  "model": "discussions.message",
  "pk": 427,
  "fields": {
    "created": "2018-01-24T00:29:58.743Z",
    "modified": "2018-01-24T00:29:58.743Z",
    "text": "`sys.stdout.flush()` should also flush out the buffer python uses in case anything is being stored in the buffer in between requests",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T18:41:13Z",
    "origin_slack_event": 433
  }
},
{
  "model": "discussions.message",
  "pk": 428,
  "fields": {
    "created": "2018-01-24T00:29:58.747Z",
    "modified": "2018-01-24T00:29:58.748Z",
    "text": "I\u2019m worried that it\u2019s something on the web server side. But if you could shoot over a file I can make sure to rule out the Python script",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T18:34:55Z",
    "origin_slack_event": 434
  }
},
{
  "model": "discussions.message",
  "pk": 429,
  "fields": {
    "created": "2018-01-24T00:29:58.751Z",
    "modified": "2018-01-24T00:29:58.751Z",
    "text": "I don\u2019t think isslice would do it and seek should clear. One cadidate is CGI library which I\u2019m not familiar with at all. But we could try deleting by adding `del form['configuration_file']` after `process_upload(csv_upload)`",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T18:33:00Z",
    "origin_slack_event": 435
  }
},
{
  "model": "discussions.message",
  "pk": 430,
  "fields": {
    "created": "2018-01-24T00:29:58.754Z",
    "modified": "2018-01-24T00:29:58.754Z",
    "text": "Gotcha, do you have a sample file I can test on?",
    "session": 23,
    "author": 117,
    "time": "2017-12-16T18:24:56Z",
    "origin_slack_event": 436
  }
},
{
  "model": "discussions.message",
  "pk": 431,
  "fields": {
    "created": "2018-01-24T00:29:58.757Z",
    "modified": "2018-01-24T00:29:58.758Z",
    "text": "Looks to be doing the same thing, I'm wondering if it's the itertools.islice or the seek",
    "session": 23,
    "author": 119,
    "time": "2017-12-16T18:24:00Z",
    "origin_slack_event": 437
  }
},
{
  "model": "discussions.message",
  "pk": 432,
  "fields": {
    "created": "2018-01-24T00:29:58.761Z",
    "modified": "2018-01-24T00:29:58.762Z",
    "text": "try that out when you get back online",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:50:37Z",
    "origin_slack_event": 438
  }
},
{
  "model": "discussions.message",
  "pk": 433,
  "fields": {
    "created": "2018-01-24T00:29:58.765Z",
    "modified": "2018-01-24T00:29:58.765Z",
    "text": "```#!/usr/bin/python3\n\nimport itertools\nimport csv\nimport sys\nimport re\nimport cgi\n\nfrom io import StringIO\n\n\ndef get_config_data(config, output, keys):\n    if keys is None:\n        return\n\n    for key, value in config.items():\n        row = \"\"\n        for col in keys:\n            if col in value:\n                row = row + value[col] + \",\"\n            else:\n                row = row + \",\"\n        output = output + \"\\n\" + row[:-1]\n    return output\n\n\ndef process_upload(csv_file):\n    output = \"\"\n\n    file = csv_file.read().decode('utf-8')\n    csv_data = StringIO(file)\n    reader = csv.reader(csv_data, delimiter=\",\")\n\n    sec_name = ''\n    first_row = 0\n    in_section = 0\n    row_num = 0\n\n    columns = {\n        'HuntGroup_Info': [0, 0, {'GR_Name': 0, 'GR_Extension': 0}],\n        'IncallRoute_Info': [0, 0, {'ICR_Destination': 0, 'ICR_Number': 0, 'ICR_CLI': 0}],\n        'User_Info': [0, 0, {'US_Extension': 0, 'US_Fullname': 0, 'US_ForwardNumber': 0, 'US_ForwardBusyNumber': 0,\n                             'US_TwinMobileNumber': 0, 'US_TwinningType': 0, 'US_ForwardUnconditional': 0}],\n    }\n\n    for row in reader:\n        if first_row:\n            col_num = 0\n            for item in row:\n                if item in columns[sec_name][2]:\n                    columns[sec_name][2][item] = col_num\n                col_num = col_num + 1\n            first_row = 0\n        elif in_section:\n            if str(row[0]).endswith(\"_End\"):\n                in_section = 0\n                columns[sec_name][1] = row_num\n        else:\n            section = re.match(r'(.*)_Start', str(row[0]), re.M | re.I)\n            if section:\n                if section.group(1) in columns:\n                    first_row = 1\n                    in_section = 1\n                    sec_name = section.group(1)\n                    columns[sec_name][0] = row_num\n        row_num = row_num + 1\n\n    config = {}\n\n    for sec_name in columns:\n        csv_data.seek(0)\n\n        for row in itertools.islice(reader, columns[sec_name][0] + 2, columns[sec_name][1]):\n            index_col = 1\n            index_name = None\n\n            for col_name in columns[sec_name][2]:\n                if index_col:\n                    if [row[columns[sec_name][2][col_name]]][0] not in config:\n                        config[str([row[columns[sec_name][2][col_name]]][0])] = {}\n\n                    index_name = col_name\n                    config[(row[columns[sec_name][2][index_name]])][col_name] = row[columns[sec_name][2][col_name]]\n                    index_col = 0\n                else:\n                    config[(row[columns[sec_name][2][index_name]])][col_name] = row[columns[sec_name][2][col_name]]\n\n    csv_data.close()\n    csv_file.close()\n\n    output = output + \"DID,Extension,Full Name,Forwarding Number,Forwarding Enabled,Twinning Number,Twinning Enabled\"\n\n    output = get_config_data(config, output, ['ICR_Number', 'US_Extension', 'US_Fullname', 'US_ForwardNumber',\n                                              'US_ForwardUnconditional', 'US_TwinMobileNumber', 'US_TwinningType'])\n    print(\"Content-Type: text/plain\\n\\n\")\n    print(output)\n\nif __name__ == '__main__':\n    form = cgi.FieldStorage()\n    if 'configuration_file' in form and form['configuration_file'].file:\n        csv_upload = form['configuration_file'].file\n        process_upload(csv_upload)\n    else:\n        sys.exit()```",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:50:27Z",
    "origin_slack_event": 439
  }
},
{
  "model": "discussions.message",
  "pk": 434,
  "fields": {
    "created": "2018-01-24T00:29:58.768Z",
    "modified": "2018-01-24T00:29:58.768Z",
    "text": "Awesome, thanks a lot!",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:35:32Z",
    "origin_slack_event": 440
  }
},
{
  "model": "discussions.message",
  "pk": 435,
  "fields": {
    "created": "2018-01-24T00:29:58.771Z",
    "modified": "2018-01-24T00:29:58.771Z",
    "text": "I think I was doing that to debug what was happening, I'll check through it tonight",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:35:29Z",
    "origin_slack_event": 441
  }
},
{
  "model": "discussions.message",
  "pk": 436,
  "fields": {
    "created": "2018-01-24T00:29:58.775Z",
    "modified": "2018-01-24T00:29:58.775Z",
    "text": "I\u2019ll jot down some suggestions and you can ping me if you\u2019re still having problems",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:35:25Z",
    "origin_slack_event": 442
  }
},
{
  "model": "discussions.message",
  "pk": 437,
  "fields": {
    "created": "2018-01-24T00:29:58.778Z",
    "modified": "2018-01-24T00:29:58.778Z",
    "text": "You can stay here!",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:35:13Z",
    "origin_slack_event": 443
  }
},
{
  "model": "discussions.message",
  "pk": 438,
  "fields": {
    "created": "2018-01-24T00:29:58.783Z",
    "modified": "2018-01-24T00:29:58.783Z",
    "text": "Awesome, I gotta run though our office is closing up but I'll be back on later tonight, should I stay in <#C8FK5JR0C|session-10> or just create a new topic?",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:35:01Z",
    "origin_slack_event": 444
  }
},
{
  "model": "discussions.message",
  "pk": 439,
  "fields": {
    "created": "2018-01-24T00:29:58.787Z",
    "modified": "2018-01-24T00:29:58.787Z",
    "text": "Just making sure you know that `getConfigData` is not being called",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:34:57Z",
    "origin_slack_event": 445
  }
},
{
  "model": "discussions.message",
  "pk": 440,
  "fields": {
    "created": "2018-01-24T00:29:58.790Z",
    "modified": "2018-01-24T00:29:58.791Z",
    "text": "Got it. Reading through the code right now",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:34:25Z",
    "origin_slack_event": 446
  }
},
{
  "model": "discussions.message",
  "pk": 441,
  "fields": {
    "created": "2018-01-24T00:29:58.795Z",
    "modified": "2018-01-24T00:29:58.795Z",
    "text": "I do this at the end\n\ncsv_data.close()\ncsvUpload.close()\n\nbut I'm not sure if that's closing what it should be",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:30:17Z",
    "origin_slack_event": 447
  }
},
{
  "model": "discussions.message",
  "pk": 442,
  "fields": {
    "created": "2018-01-24T00:29:58.798Z",
    "modified": "2018-01-24T00:29:58.799Z",
    "text": "It looks like it\u2019s one of the I/O objects",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:28:55Z",
    "origin_slack_event": 448
  }
},
{
  "model": "discussions.message",
  "pk": 443,
  "fields": {
    "created": "2018-01-24T00:29:58.803Z",
    "modified": "2018-01-24T00:29:58.803Z",
    "text": "Are you closing `file`",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:28:11Z",
    "origin_slack_event": 449
  }
},
{
  "model": "discussions.message",
  "pk": 444,
  "fields": {
    "created": "2018-01-24T00:29:58.807Z",
    "modified": "2018-01-24T00:29:58.808Z",
    "text": "I have another script to read an excel file that works fine using similar code, I had to tweak a lot with this one since it reads the file multiple times for each _start _end section (since they could be anywhere), then it defines the line that the _start and _end are on for each section and pulls the data from just that section",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:26:34Z",
    "origin_slack_event": 450
  }
},
{
  "model": "discussions.message",
  "pk": 445,
  "fields": {
    "created": "2018-01-24T00:29:58.812Z",
    "modified": "2018-01-24T00:29:58.812Z",
    "text": "My form submits the data to a .py file on my web server &lt;form action=\"excelFromCsv.py\" method=\"post\" enctype=\"multipart/form-data\"&gt;\n        Configuration CSV File: &lt;input type=\"file\" name=\"configuration_file\"&gt;\n        &lt;br&gt;&lt;br&gt;\n        &lt;input type=\"submit\"&gt;\n      &lt;/form&gt;",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:25:10Z",
    "origin_slack_event": 451
  }
},
{
  "model": "discussions.message",
  "pk": 446,
  "fields": {
    "created": "2018-01-24T00:29:58.815Z",
    "modified": "2018-01-24T00:29:58.815Z",
    "text": "Those look like the most likely candidates (e.g. `output` `columns`)",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:24:54Z",
    "origin_slack_event": 452
  }
},
{
  "model": "discussions.message",
  "pk": 447,
  "fields": {
    "created": "2018-01-24T00:29:58.818Z",
    "modified": "2018-01-24T00:29:58.818Z",
    "text": "If so, you have a number of globals which will not be reset on next submission",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:24:38Z",
    "origin_slack_event": 453
  }
},
{
  "model": "discussions.message",
  "pk": 448,
  "fields": {
    "created": "2018-01-24T00:29:58.822Z",
    "modified": "2018-01-24T00:29:58.822Z",
    "text": "Are you importing it to another script?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:24:28Z",
    "origin_slack_event": 454
  }
},
{
  "model": "discussions.message",
  "pk": 449,
  "fields": {
    "created": "2018-01-24T00:29:58.826Z",
    "modified": "2018-01-24T00:29:58.826Z",
    "text": "And how is the script you posted on pastebin being called?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:24:02Z",
    "origin_slack_event": 455
  }
},
{
  "model": "discussions.message",
  "pk": 450,
  "fields": {
    "created": "2018-01-24T00:29:58.830Z",
    "modified": "2018-01-24T00:29:58.830Z",
    "text": "Exactly",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:23:47Z",
    "origin_slack_event": 456
  }
},
{
  "model": "discussions.message",
  "pk": 451,
  "fields": {
    "created": "2018-01-24T00:29:58.833Z",
    "modified": "2018-01-24T00:29:58.833Z",
    "text": "Ok got it, so it\u2019s the same file from your POV but you keep getting different output on the server",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:23:42Z",
    "origin_slack_event": 457
  }
},
{
  "model": "discussions.message",
  "pk": 452,
  "fields": {
    "created": "2018-01-24T00:29:58.836Z",
    "modified": "2018-01-24T00:29:58.836Z",
    "text": "It stores the CSV in memory and it seems like whatever it's storing isn't getting flushed, so I submit once I get one output, submit again different output, submit a third time different output, the fourth time I get the output from the first time",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:22:54Z",
    "origin_slack_event": 458
  }
},
{
  "model": "discussions.message",
  "pk": 453,
  "fields": {
    "created": "2018-01-24T00:29:58.840Z",
    "modified": "2018-01-24T00:29:58.840Z",
    "text": "Well, the csv file that it's reading is always different when I reload the page",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:21:53Z",
    "origin_slack_event": 459
  }
},
{
  "model": "discussions.message",
  "pk": 454,
  "fields": {
    "created": "2018-01-24T00:29:58.844Z",
    "modified": "2018-01-24T00:29:58.845Z",
    "text": "Ok, and you\u2019re saying the script is generating different dictionaries for the same file?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:21:38Z",
    "origin_slack_event": 460
  }
},
{
  "model": "discussions.message",
  "pk": 455,
  "fields": {
    "created": "2018-01-24T00:29:58.848Z",
    "modified": "2018-01-24T00:29:58.848Z",
    "text": "The CSV file has different sections like\n\nuser_info_start\n[csv stuff]\nuser_info_end\n\nmy code just defines which sections I want to pull data from and then parses through the file to see where the _start and _end are then it reads through that and puts that into a dictionary with the name of the section",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:20:59Z",
    "origin_slack_event": 461
  }
},
{
  "model": "discussions.message",
  "pk": 456,
  "fields": {
    "created": "2018-01-24T00:29:58.852Z",
    "modified": "2018-01-24T00:29:58.852Z",
    "text": "Ok and how are you handling the file when it gets submitted?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:20:35Z",
    "origin_slack_event": 462
  }
},
{
  "model": "discussions.message",
  "pk": 457,
  "fields": {
    "created": "2018-01-24T00:29:58.857Z",
    "modified": "2018-01-24T00:29:58.858Z",
    "text": "I have a web form with a file upload box and it posts to my server",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:19:13Z",
    "origin_slack_event": 463
  }
},
{
  "model": "discussions.message",
  "pk": 458,
  "fields": {
    "created": "2018-01-24T00:29:58.862Z",
    "modified": "2018-01-24T00:29:58.863Z",
    "text": "When you say you\u2019re submitting and reading the file, where are you submitting/reading from?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:18:34Z",
    "origin_slack_event": 464
  }
},
{
  "model": "discussions.message",
  "pk": 459,
  "fields": {
    "created": "2018-01-24T00:29:58.866Z",
    "modified": "2018-01-24T00:29:58.866Z",
    "text": "Thanks! I wasn't expecting such a quick response, I hope it's just something stupid that I overlooked, I am not that experienced with Python",
    "session": 23,
    "author": 119,
    "time": "2017-12-15T22:17:59Z",
    "origin_slack_event": 465
  }
},
{
  "model": "discussions.message",
  "pk": 460,
  "fields": {
    "created": "2018-01-24T00:29:58.869Z",
    "modified": "2018-01-24T00:29:58.869Z",
    "text": "Do you mind briefly walking me through the code on a high level?",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:17:54Z",
    "origin_slack_event": 466
  }
},
{
  "model": "discussions.message",
  "pk": 461,
  "fields": {
    "created": "2018-01-24T00:29:58.872Z",
    "modified": "2018-01-24T00:29:58.873Z",
    "text": "hey John, taking a look now",
    "session": 23,
    "author": 117,
    "time": "2017-12-15T22:15:48Z",
    "origin_slack_event": 467
  }
},
{
  "model": "discussions.message",
  "pk": 462,
  "fields": {
    "created": "2018-01-24T00:29:58.876Z",
    "modified": "2018-01-24T00:29:58.877Z",
    "text": "*Title:* Having an issue reading a text file that was submitted via a web form using POST...\n*Tags:* Python, Apache\n*Github link:* <https://pastebin.ca/3948583>\n*Description:* Originally posted this on reddit, \n\nSo I wrote some code to parse through a CSV file in Jupyter, it works great but it's reading a local static file. I thought it would be simple to transition to the web (since I'm trying to make this into something my coworkers can easily access), but so far it has proved to be quite difficult. I finally got to the point where I'm submitting and reading the file, but now I realize every time I submit the same csv file, the script gets different data. Anyone know what's happening here? It sounds like a buffer issue but I don't know the proper way to upload and parse a text file via POST.\n\n<https://www.reddit.com/r/learnpython/comments/7k22zs/having_an_issue_with_reading_a_text_file_that_was/>",
    "session": 23,
    "author": 71,
    "time": "2017-12-15T22:14:42Z",
    "origin_slack_event": 468
  }
},
{
  "model": "discussions.message",
  "pk": 463,
  "fields": {
    "created": "2018-01-24T00:29:59.070Z",
    "modified": "2018-01-24T00:29:59.071Z",
    "text": "yes",
    "session": 24,
    "author": 101,
    "time": "2017-12-21T10:28:14Z",
    "origin_slack_event": 469
  }
},
{
  "model": "discussions.message",
  "pk": 464,
  "fields": {
    "created": "2018-01-24T00:29:59.074Z",
    "modified": "2018-01-24T00:29:59.074Z",
    "text": "but, will the sequence and position of matching rows be always same?",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T10:24:38Z",
    "origin_slack_event": 470
  }
},
{
  "model": "discussions.message",
  "pk": 465,
  "fields": {
    "created": "2018-01-24T00:29:59.077Z",
    "modified": "2018-01-24T00:29:59.077Z",
    "text": "yes... depends one merging which join( outer or inner) im using .. if i use outer my output frame will give the rows same as my one of input frame. then ill use isin to find the non matched rows as new df",
    "session": 24,
    "author": 101,
    "time": "2017-12-21T10:23:10Z",
    "origin_slack_event": 471
  }
},
{
  "model": "discussions.message",
  "pk": 466,
  "fields": {
    "created": "2018-01-24T00:29:59.080Z",
    "modified": "2018-01-24T00:29:59.081Z",
    "text": "&gt; see, for isin to work the similar rows will always have to be at same index\n&gt; so, are you sure that this will always be the scenario in your assignment?",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T10:20:43Z",
    "origin_slack_event": 472
  }
},
{
  "model": "discussions.message",
  "pk": 467,
  "fields": {
    "created": "2018-01-24T00:29:59.084Z",
    "modified": "2018-01-24T00:29:59.084Z",
    "text": "ok. Thanks .. ill use the first approch",
    "session": 24,
    "author": 101,
    "time": "2017-12-21T10:20:19Z",
    "origin_slack_event": 473
  }
},
{
  "model": "discussions.message",
  "pk": 468,
  "fields": {
    "created": "2018-01-24T00:29:59.087Z",
    "modified": "2018-01-24T00:29:59.087Z",
    "text": "it wasnt an approach towards solution",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T10:18:36Z",
    "origin_slack_event": 474
  }
},
{
  "model": "discussions.message",
  "pk": 469,
  "fields": {
    "created": "2018-01-24T00:29:59.090Z",
    "modified": "2018-01-24T00:29:59.091Z",
    "text": "the one above using isin that I sent was to tell that this approach wont work",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T10:18:25Z",
    "origin_slack_event": 475
  }
},
{
  "model": "discussions.message",
  "pk": 470,
  "fields": {
    "created": "2018-01-24T00:29:59.094Z",
    "modified": "2018-01-24T00:29:59.094Z",
    "text": "the above is only say TRUE or false ( is available in original frame or not).. but i'm trying to generate a new DF with non matching rows.\nbelow is wt 'im trying.. but it's not giving proper result\nEx1:\n # df3 = pd.merge(df1, df2, on='x')\n        # df4 = df1(~df1.isin(df3) \nEx2:\n # df3 = pd.merge(df1, df2, on='x')\n        # df4 = df1(~df1.isin(df3.(Columnname)\n\nin both ways im not getting unmatched data frame.",
    "session": 24,
    "author": 101,
    "time": "2017-12-21T10:17:15Z",
    "origin_slack_event": 476
  }
},
{
  "model": "discussions.message",
  "pk": 471,
  "fields": {
    "created": "2018-01-24T00:29:59.098Z",
    "modified": "2018-01-24T00:29:59.098Z",
    "text": "```&gt;&gt;&gt; df = DataFrame({'A': [1, 2, 3], 'B': ['a', 'b', 'f']})\n&gt;&gt;&gt; other = DataFrame({'A': [1, 3, 3, 2], 'B': ['e', 'f', 'f', 'e']})\n&gt;&gt;&gt; df.isin(other)\n       A      B\n0   True  False\n1  False  False  # Column A in `other` has a 3, but not at index 1.\n2   True   True```",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T08:14:11Z",
    "origin_slack_event": 477
  }
},
{
  "model": "discussions.message",
  "pk": 472,
  "fields": {
    "created": "2018-01-24T00:29:59.103Z",
    "modified": "2018-01-24T00:29:59.103Z",
    "text": "so, are you sure that this will always be the scenario in your assignment?",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T08:14:00Z",
    "origin_slack_event": 478
  }
},
{
  "model": "discussions.message",
  "pk": 473,
  "fields": {
    "created": "2018-01-24T00:29:59.106Z",
    "modified": "2018-01-24T00:29:59.107Z",
    "text": "see, for isin to work the similar rows will always have to be at same index",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T08:13:42Z",
    "origin_slack_event": 479
  }
},
{
  "model": "discussions.message",
  "pk": 474,
  "fields": {
    "created": "2018-01-24T00:29:59.113Z",
    "modified": "2018-01-24T00:29:59.113Z",
    "text": "ok",
    "session": 24,
    "author": 96,
    "time": "2017-12-21T08:13:25Z",
    "origin_slack_event": 480
  }
},
{
  "model": "discussions.message",
  "pk": 475,
  "fields": {
    "created": "2018-01-24T00:29:59.117Z",
    "modified": "2018-01-24T00:29:59.117Z",
    "text": "Hi Vikas.. its working fine.. but trying with isin() feature",
    "session": 24,
    "author": 101,
    "time": "2017-12-21T08:09:15Z",
    "origin_slack_event": 481
  }
},
{
  "model": "discussions.message",
  "pk": 476,
  "fields": {
    "created": "2018-01-24T00:29:59.121Z",
    "modified": "2018-01-24T00:29:59.121Z",
    "text": "please let us know if it worked",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:45:48Z",
    "origin_slack_event": 482
  }
},
{
  "model": "discussions.message",
  "pk": 477,
  "fields": {
    "created": "2018-01-24T00:29:59.125Z",
    "modified": "2018-01-24T00:29:59.125Z",
    "text": "look at this stackoverflow thread for explanation - <https://stackoverflow.com/topics/28901683/pandas-get-rows-which-are-not-in-other-dataframe>",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:09:52Z",
    "origin_slack_event": 483
  }
},
{
  "model": "discussions.message",
  "pk": 478,
  "fields": {
    "created": "2018-01-24T00:29:59.129Z",
    "modified": "2018-01-24T00:29:59.129Z",
    "text": "`isin` has its own limitations due to which it could not be applied to this scenario",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:09:35Z",
    "origin_slack_event": 484
  }
},
{
  "model": "discussions.message",
  "pk": 479,
  "fields": {
    "created": "2018-01-24T00:29:59.132Z",
    "modified": "2018-01-24T00:29:59.132Z",
    "text": "i.e., df2 in this case",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:08:23Z",
    "origin_slack_event": 485
  }
},
{
  "model": "discussions.message",
  "pk": 480,
  "fields": {
    "created": "2018-01-24T00:29:59.135Z",
    "modified": "2018-01-24T00:29:59.136Z",
    "text": "this gives us only those rows which are in the df at the right",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:08:19Z",
    "origin_slack_event": 486
  }
},
{
  "model": "discussions.message",
  "pk": 481,
  "fields": {
    "created": "2018-01-24T00:29:59.139Z",
    "modified": "2018-01-24T00:29:59.139Z",
    "text": "then filter the rows,using \"right_only\"",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:08:03Z",
    "origin_slack_event": 487
  }
},
{
  "model": "discussions.message",
  "pk": 482,
  "fields": {
    "created": "2018-01-24T00:29:59.143Z",
    "modified": "2018-01-24T00:29:59.143Z",
    "text": "we simply merge the two dataframes using Outer join and then mark the rows using indicator as True",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:07:53Z",
    "origin_slack_event": 488
  }
},
{
  "model": "discussions.message",
  "pk": 483,
  "fields": {
    "created": "2018-01-24T00:29:59.146Z",
    "modified": "2018-01-24T00:29:59.146Z",
    "text": "<@U8BMNJCAD> uploaded a file: <https://codeclippy.slack.com/files/U8BMNJCAD/F8GP2LTQ8/full_working_code.py|Full working code>",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:07:16Z",
    "origin_slack_event": 489
  }
},
{
  "model": "discussions.message",
  "pk": 484,
  "fields": {
    "created": "2018-01-24T00:29:59.150Z",
    "modified": "2018-01-24T00:29:59.150Z",
    "text": "```df_all = pd.merge(df1, df2, how='outer', indicator=True)\ndf_right = df_all.loc[df_all['_merge'] == 'right_only']```",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:06:40Z",
    "origin_slack_event": 490
  }
},
{
  "model": "discussions.message",
  "pk": 485,
  "fields": {
    "created": "2018-01-24T00:29:59.154Z",
    "modified": "2018-01-24T00:29:59.154Z",
    "text": "the following solution seems to gve us the desired results:",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T14:06:36Z",
    "origin_slack_event": 491
  }
},
{
  "model": "discussions.message",
  "pk": 486,
  "fields": {
    "created": "2018-01-24T00:29:59.159Z",
    "modified": "2018-01-24T00:29:59.159Z",
    "text": "we want all rows in df2 to be filtered to new data frame . we need to use \"isin \" feature",
    "session": 24,
    "author": 101,
    "time": "2017-12-20T13:58:50Z",
    "origin_slack_event": 492
  }
},
{
  "model": "discussions.message",
  "pk": 487,
  "fields": {
    "created": "2018-01-24T00:29:59.163Z",
    "modified": "2018-01-24T00:29:59.163Z",
    "text": "do we need to print any row in df2 which has NaN in one or more columns?\nor, do we want to print all extra rows in df2?",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T13:34:04Z",
    "origin_slack_event": 493
  }
},
{
  "model": "discussions.message",
  "pk": 488,
  "fields": {
    "created": "2018-01-24T00:29:59.166Z",
    "modified": "2018-01-24T00:29:59.166Z",
    "text": "I have some topics for you",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T13:33:35Z",
    "origin_slack_event": 494
  }
},
{
  "model": "discussions.message",
  "pk": 489,
  "fields": {
    "created": "2018-01-24T00:29:59.170Z",
    "modified": "2018-01-24T00:29:59.170Z",
    "text": "<@U8C44TQ75> difference is not a valid way to achieve this",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T13:30:36Z",
    "origin_slack_event": 495
  }
},
{
  "model": "discussions.message",
  "pk": 490,
  "fields": {
    "created": "2018-01-24T00:29:59.174Z",
    "modified": "2018-01-24T00:29:59.174Z",
    "text": "<@U8C44TQ75> uploaded a file: <https://codeclippy.slack.com/files/U8C44TQ75/F8GS0MDCH/data_events.xlsx|data_frames_subtraction.xlsx> and commented: pandas data frame subtraction",
    "session": 24,
    "author": 101,
    "time": "2017-12-20T12:31:52Z",
    "origin_slack_event": 496
  }
},
{
  "model": "discussions.message",
  "pk": 491,
  "fields": {
    "created": "2018-01-24T00:29:59.178Z",
    "modified": "2018-01-24T00:29:59.178Z",
    "text": "Examp1e: \ndf2[Activation] -df1[Activation]\n\nExample2:\ndf2.set_index(['Activation']).sub(df1.set_index(['Activation']), fill_value=0)",
    "session": 24,
    "author": 101,
    "time": "2017-12-20T12:30:44Z",
    "origin_slack_event": 497
  }
},
{
  "model": "discussions.message",
  "pk": 492,
  "fields": {
    "created": "2018-01-24T00:29:59.182Z",
    "modified": "2018-01-24T00:29:59.182Z",
    "text": "Hi Vikas Tried below 2 examples",
    "session": 24,
    "author": 101,
    "time": "2017-12-20T12:30:41Z",
    "origin_slack_event": 498
  }
},
{
  "model": "discussions.message",
  "pk": 493,
  "fields": {
    "created": "2018-01-24T00:29:59.185Z",
    "modified": "2018-01-24T00:29:59.186Z",
    "text": "<@U8C44TQ75> could you also post the code which you have used so far? the one which is throwing the error",
    "session": 24,
    "author": 96,
    "time": "2017-12-20T11:42:24Z",
    "origin_slack_event": 499
  }
},
{
  "model": "discussions.message",
  "pk": 494,
  "fields": {
    "created": "2018-01-24T00:29:59.188Z",
    "modified": "2018-01-24T00:29:59.189Z",
    "text": "*Title:* Having an issue Pandas Data frame subtraction\n*Tags:* Python, Pandas.\n*Github link:* \n*Description:* TypeError: unsupported operand type(s) for -: 'str' and 'str'\n\nI'm using the operation like below\noutput = df1.subract(df2, axis=0, fill_value=0)\nRequirement:  have 2 DF's , 1st DF contains all data with correct values and 2nd DF is similar to first DF\nand contains extra rows in which some column values are NaN. here i need to subtract DF1 from DF2 and the result DF should contain only error(column contains NaN) rows",
    "session": 24,
    "author": 71,
    "time": "2017-12-20T11:39:27Z",
    "origin_slack_event": 500
  }
},
{
  "model": "discussions.message",
  "pk": 495,
  "fields": {
    "created": "2018-01-24T00:29:59.378Z",
    "modified": "2018-01-24T00:29:59.378Z",
    "text": "does it work?",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T14:31:34Z",
    "origin_slack_event": 501
  }
},
{
  "model": "discussions.message",
  "pk": 496,
  "fields": {
    "created": "2018-01-24T00:29:59.382Z",
    "modified": "2018-01-24T00:29:59.382Z",
    "text": "thanks <@U8BMNJCAD> !",
    "session": 25,
    "author": 62,
    "time": "2017-12-27T14:25:10Z",
    "origin_slack_event": 502
  }
},
{
  "model": "discussions.message",
  "pk": 497,
  "fields": {
    "created": "2018-01-24T00:29:59.385Z",
    "modified": "2018-01-24T00:29:59.386Z",
    "text": "this should solve the problem",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:28:20Z",
    "origin_slack_event": 503
  }
},
{
  "model": "discussions.message",
  "pk": 498,
  "fields": {
    "created": "2018-01-24T00:29:59.389Z",
    "modified": "2018-01-24T00:29:59.389Z",
    "text": "make sure to change the data types of columns in temporary table `t`",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:28:11Z",
    "origin_slack_event": 504
  }
},
{
  "model": "discussions.message",
  "pk": 499,
  "fields": {
    "created": "2018-01-24T00:29:59.392Z",
    "modified": "2018-01-24T00:29:59.393Z",
    "text": "```INSERT INTO departments (name, description, department_number, slug)\n(SELECT name description department_number slug FROM \n    dblink('hostaddr=127.0.0.1 port=5432 dbname=banquesansfrais user=postgres password=pass1234', 'SELECT name description department_number slug FROM banquesansfrais.departments') \n    AS t(name int, description varchar, department_number int, slug varchar) \n);```",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:27:56Z",
    "origin_slack_event": 505
  }
},
{
  "model": "discussions.message",
  "pk": 500,
  "fields": {
    "created": "2018-01-24T00:29:59.396Z",
    "modified": "2018-01-24T00:29:59.396Z",
    "text": "and then execute the following query (modify it according to your needs) -",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:27:48Z",
    "origin_slack_event": 506
  }
},
{
  "model": "discussions.message",
  "pk": 501,
  "fields": {
    "created": "2018-01-24T00:29:59.399Z",
    "modified": "2018-01-24T00:29:59.399Z",
    "text": "you just need to run this query and it will install the dblink extension in postgres",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:25:07Z",
    "origin_slack_event": 507
  }
},
{
  "model": "discussions.message",
  "pk": 502,
  "fields": {
    "created": "2018-01-24T00:29:59.402Z",
    "modified": "2018-01-24T00:29:59.403Z",
    "text": "`CREATE EXTENSION dblink;`",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:24:26Z",
    "origin_slack_event": 508
  }
},
{
  "model": "discussions.message",
  "pk": 503,
  "fields": {
    "created": "2018-01-24T00:29:59.406Z",
    "modified": "2018-01-24T00:29:59.406Z",
    "text": "Step1: Install DB Link",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:24:07Z",
    "origin_slack_event": 509
  }
},
{
  "model": "discussions.message",
  "pk": 504,
  "fields": {
    "created": "2018-01-24T00:29:59.411Z",
    "modified": "2018-01-24T00:29:59.412Z",
    "text": "<https://www.postgresql.org/docs/current/static/contrib-dblink-connect.html>",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:24:05Z",
    "origin_slack_event": 510
  }
},
{
  "model": "discussions.message",
  "pk": 505,
  "fields": {
    "created": "2018-01-24T00:29:59.415Z",
    "modified": "2018-01-24T00:29:59.415Z",
    "text": "we will need to use `dblink`",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:23:59Z",
    "origin_slack_event": 511
  }
},
{
  "model": "discussions.message",
  "pk": 506,
  "fields": {
    "created": "2018-01-24T00:29:59.418Z",
    "modified": "2018-01-24T00:29:59.419Z",
    "text": "so, here is the soution",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:23:52Z",
    "origin_slack_event": 512
  }
},
{
  "model": "discussions.message",
  "pk": 507,
  "fields": {
    "created": "2018-01-24T00:29:59.424Z",
    "modified": "2018-01-24T00:29:59.424Z",
    "text": "we can use only tablename",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:07:58Z",
    "origin_slack_event": 513
  }
},
{
  "model": "discussions.message",
  "pk": 508,
  "fields": {
    "created": "2018-01-24T00:29:59.428Z",
    "modified": "2018-01-24T00:29:59.428Z",
    "text": "so it doesnt allow us to specify dbname.tablename",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:07:53Z",
    "origin_slack_event": 514
  }
},
{
  "model": "discussions.message",
  "pk": 509,
  "fields": {
    "created": "2018-01-24T00:29:59.431Z",
    "modified": "2018-01-24T00:29:59.432Z",
    "text": "it is not allowed to move data between databases this way",
    "session": 25,
    "author": 96,
    "time": "2017-12-27T13:07:40Z",
    "origin_slack_event": 515
  }
},
{
  "model": "discussions.message",
  "pk": 510,
  "fields": {
    "created": "2018-01-24T00:29:59.435Z",
    "modified": "2018-01-24T00:29:59.435Z",
    "text": "Merry Christmas everybody, \n*Title*: transfering table data from one psql db to other  psql table in different db\n*Tags*: postgrsql\n*Description:* \nI am stuck, trying to do that. I have tried a lot of different queries in psql console such as :\n```INSERT INTO \"pro-greffe_development\".departments\nSELECT name description department_number slug FROM banquesansfrais.departments;```\nSo more precisely I am trying to transfer the data in fields ```ame description department_number slug``` from the db ```banquesansfrais``` table ```departments``` into the db ```pro-greffe_development``` table departments. \nBoth these tables have schema set to ```public```.\nHere's what I get after I launch my query in psql console :\n```ERROR:  relation \"pro-greffe_development.departments\" does not exist\nLINE 1: INSERT INTO \"pro-greffe_development\".departments```",
    "session": 25,
    "author": 71,
    "time": "2017-12-27T12:52:44Z",
    "origin_slack_event": 516
  }
},
{
  "model": "discussions.message",
  "pk": 511,
  "fields": {
    "created": "2018-01-24T00:29:59.636Z",
    "modified": "2018-01-24T00:29:59.636Z",
    "text": "Title: What are your commands?\nTags: iPhone\nGitHub link:\nDescription: I want to know all of Clippy\u2019s commands.",
    "session": 26,
    "author": 71,
    "time": "2017-12-27T17:58:13Z",
    "origin_slack_event": 517
  }
},
{
  "model": "discussions.message",
  "pk": 512,
  "fields": {
    "created": "2018-01-24T00:29:59.842Z",
    "modified": "2018-01-24T00:29:59.842Z",
    "text": "sure",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T15:12:19Z",
    "origin_slack_event": 518
  }
},
{
  "model": "discussions.message",
  "pk": 513,
  "fields": {
    "created": "2018-01-24T00:29:59.846Z",
    "modified": "2018-01-24T00:29:59.846Z",
    "text": "closing down the session now",
    "session": 27,
    "author": 76,
    "time": "2018-01-04T15:12:12Z",
    "origin_slack_event": 519
  }
},
{
  "model": "discussions.message",
  "pk": 514,
  "fields": {
    "created": "2018-01-24T00:29:59.849Z",
    "modified": "2018-01-24T00:29:59.849Z",
    "text": "haha",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T15:11:54Z",
    "origin_slack_event": 520
  }
},
{
  "model": "discussions.message",
  "pk": 515,
  "fields": {
    "created": "2018-01-24T00:29:59.852Z",
    "modified": "2018-01-24T00:29:59.852Z",
    "text": "Awesome, thanks for letting me know Vikas. And thanks for the first blockchain post, I think that makes the community roughly 30,000x cooler just by having been mentioned :wink:",
    "session": 27,
    "author": 76,
    "time": "2018-01-04T15:11:39Z",
    "origin_slack_event": 521
  }
},
{
  "model": "discussions.message",
  "pk": 516,
  "fields": {
    "created": "2018-01-24T00:29:59.855Z",
    "modified": "2018-01-24T00:29:59.855Z",
    "text": "<@U8F0WTEKG> <@U8CSK1KBQ> you can mark this one as resolved",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T15:10:55Z",
    "origin_slack_event": 522
  }
},
{
  "model": "discussions.message",
  "pk": 517,
  "fields": {
    "created": "2018-01-24T00:29:59.859Z",
    "modified": "2018-01-24T00:29:59.859Z",
    "text": "thanks a lot",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T15:10:44Z",
    "origin_slack_event": 523
  }
},
{
  "model": "discussions.message",
  "pk": 518,
  "fields": {
    "created": "2018-01-24T00:29:59.863Z",
    "modified": "2018-01-24T00:29:59.863Z",
    "text": "well, it works perfectly",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T15:10:41Z",
    "origin_slack_event": 524
  }
},
{
  "model": "discussions.message",
  "pk": 519,
  "fields": {
    "created": "2018-01-24T00:29:59.866Z",
    "modified": "2018-01-24T00:29:59.866Z",
    "text": "So this gives you the option of manually resolving via 2 requests or creating an adapter to resolve automatically (more work but best practices)",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T15:04:29Z",
    "origin_slack_event": 525
  }
},
{
  "model": "discussions.message",
  "pk": 520,
  "fields": {
    "created": "2018-01-24T00:29:59.870Z",
    "modified": "2018-01-24T00:29:59.870Z",
    "text": "which resolves to the following:\n```185.61.137.164\n185.61.137.177\n190.115.24.114\n190.115.24.126```",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T15:03:49Z",
    "origin_slack_event": 526
  }
},
{
  "model": "discussions.message",
  "pk": 521,
  "fields": {
    "created": "2018-01-24T00:29:59.876Z",
    "modified": "2018-01-24T00:29:59.876Z",
    "text": "Sample for Jstash.bazar is: <https://bdns.at/r/jstash.bazar>",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T15:03:28Z",
    "origin_slack_event": 527
  }
},
{
  "model": "discussions.message",
  "pk": 522,
  "fields": {
    "created": "2018-01-24T00:29:59.879Z",
    "modified": "2018-01-24T00:29:59.879Z",
    "text": "API docs here: <https://github.com/B-DNS/Resolver/tree/63996e17f4f422b322792164ebf88a4e5f2fbebd>",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T15:03:15Z",
    "origin_slack_event": 528
  }
},
{
  "model": "discussions.message",
  "pk": 523,
  "fields": {
    "created": "2018-01-24T00:29:59.883Z",
    "modified": "2018-01-24T00:29:59.883Z",
    "text": "Actually, it looks like you don\u2019t need the HTTPAdapter. Rather, you can resolve using <http://Blockchain-DNS.info|Blockchain-DNS.info>\u2019s API",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T15:01:41Z",
    "origin_slack_event": 529
  }
},
{
  "model": "discussions.message",
  "pk": 524,
  "fields": {
    "created": "2018-01-24T00:29:59.887Z",
    "modified": "2018-01-24T00:29:59.887Z",
    "text": "thanks for looking into it so quickly",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T14:57:19Z",
    "origin_slack_event": 530
  }
},
{
  "model": "discussions.message",
  "pk": 525,
  "fields": {
    "created": "2018-01-24T00:29:59.891Z",
    "modified": "2018-01-24T00:29:59.891Z",
    "text": "okay",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T14:57:06Z",
    "origin_slack_event": 531
  }
},
{
  "model": "discussions.message",
  "pk": 526,
  "fields": {
    "created": "2018-01-24T00:29:59.895Z",
    "modified": "2018-01-24T00:29:59.895Z",
    "text": "Looking into how the blockchain dns resolvers work",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T14:56:54Z",
    "origin_slack_event": 532
  }
},
{
  "model": "discussions.message",
  "pk": 527,
  "fields": {
    "created": "2018-01-24T00:29:59.898Z",
    "modified": "2018-01-24T00:29:59.898Z",
    "text": "on the requests side of things",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T14:56:42Z",
    "origin_slack_event": 533
  }
},
{
  "model": "discussions.message",
  "pk": 528,
  "fields": {
    "created": "2018-01-24T00:29:59.902Z",
    "modified": "2018-01-24T00:29:59.903Z",
    "text": "It looks like you\u2019ll need to create an HTTPAdapter and mount it on your requests session",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T14:56:18Z",
    "origin_slack_event": 534
  }
},
{
  "model": "discussions.message",
  "pk": 529,
  "fields": {
    "created": "2018-01-24T00:29:59.906Z",
    "modified": "2018-01-24T00:29:59.906Z",
    "text": "thanks",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T14:54:28Z",
    "origin_slack_event": 535
  }
},
{
  "model": "discussions.message",
  "pk": 530,
  "fields": {
    "created": "2018-01-24T00:29:59.910Z",
    "modified": "2018-01-24T00:29:59.910Z",
    "text": "Checking out the browser plugin, one sec",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T14:54:12Z",
    "origin_slack_event": 536
  }
},
{
  "model": "discussions.message",
  "pk": 531,
  "fields": {
    "created": "2018-01-24T00:29:59.913Z",
    "modified": "2018-01-24T00:29:59.913Z",
    "text": "Hi Will",
    "session": 27,
    "author": 96,
    "time": "2018-01-04T14:53:55Z",
    "origin_slack_event": 537
  }
},
{
  "model": "discussions.message",
  "pk": 532,
  "fields": {
    "created": "2018-01-24T00:29:59.916Z",
    "modified": "2018-01-24T00:29:59.916Z",
    "text": "Hey Vikas!",
    "session": 27,
    "author": 117,
    "time": "2018-01-04T14:53:44Z",
    "origin_slack_event": 538
  }
},
{
  "model": "discussions.message",
  "pk": 533,
  "fields": {
    "created": "2018-01-24T00:29:59.920Z",
    "modified": "2018-01-24T00:29:59.920Z",
    "text": "*Title:* How to resolve blockchain dns using Python Requests\n*Tags:* Python, Requests, Blockchain DNS\n*Description:* There are certain blockchain domains that are resolved only by blockchain dns resolvers. \nFor ex: <http://Jstash.bazar>\nIf you try to open this link in a browser, it wont get resolved. But, just install the browser plugin from <https://blockchain-dns.info/>\nand then try to open the site again, it will open up smoothly.\nI want to scrap some data from this site using Python Requests (browserless) and have no idea as to how to resolve such blockchain domains.\nAny help would be highly appreciated.",
    "session": 27,
    "author": 71,
    "time": "2018-01-04T14:52:53Z",
    "origin_slack_event": 539
  }
},
{
  "model": "discussions.message",
  "pk": 534,
  "fields": {
    "created": "2018-01-24T00:30:00.121Z",
    "modified": "2018-01-24T00:30:00.121Z",
    "text": "Gonna close this, think I've mostly answered my q",
    "session": 28,
    "author": 112,
    "time": "2018-01-05T15:42:35Z",
    "origin_slack_event": 540
  }
},
{
  "model": "discussions.message",
  "pk": 535,
  "fields": {
    "created": "2018-01-24T00:30:00.136Z",
    "modified": "2018-01-24T00:30:00.136Z",
    "text": "I'm forming the impression that the paradigm I'm using is useful from a layout (e.g. grids), sizing (e.g. font sizes), &amp; behavior (e.g. show/hide) perspective, and the tradeoff is it introduces complexity in the management of style (e.g. font usage) &amp; potentially behavior (e.g. feature addition/removal). I think appropriately leveraging React's component paradigm + extract other style commonalities into reusable constants overcomes the limitations",
    "session": 28,
    "author": 112,
    "time": "2018-01-05T15:42:23Z",
    "origin_slack_event": 541
  }
},
{
  "model": "discussions.message",
  "pk": 536,
  "fields": {
    "created": "2018-01-24T00:30:00.157Z",
    "modified": "2018-01-24T00:30:00.158Z",
    "text": "Cool - seems like the ability to change desktop / mobile sizes independently would be convenient",
    "session": 28,
    "author": 76,
    "time": "2018-01-04T20:07:36Z",
    "origin_slack_event": 542
  }
},
{
  "model": "discussions.message",
  "pk": 537,
  "fields": {
    "created": "2018-01-24T00:30:00.162Z",
    "modified": "2018-01-24T00:30:00.162Z",
    "text": "Still rolling with my original approach, feel pretty good about it, haven't stumbled upon any new insights beyond the above yet",
    "session": 28,
    "author": 112,
    "time": "2018-01-04T20:06:40Z",
    "origin_slack_event": 543
  }
},
{
  "model": "discussions.message",
  "pk": 538,
  "fields": {
    "created": "2018-01-24T00:30:00.165Z",
    "modified": "2018-01-24T00:30:00.165Z",
    "text": "How\u2019d you end up going about it?",
    "session": 28,
    "author": 76,
    "time": "2018-01-04T20:01:58Z",
    "origin_slack_event": 544
  }
},
{
  "model": "discussions.message",
  "pk": 539,
  "fields": {
    "created": "2018-01-24T00:30:00.181Z",
    "modified": "2018-01-24T00:30:00.181Z",
    "text": "(this is my topic :)) I\u2019m finding that the (limited) code duplication is somewhat frustrating, in that if I make a decision like \u201call the text on this page should be center aligned\u201d and then go and add an alignment prop to every text component on that view (e.g. `AppDashboardDesktop`), I then have to also do it for every text component within every variant\u2026 but then this code duplication is nice when I decide I want to use a different font size in mobile vs. desktop, because I can change the mobile ones without changing the desktop ones. Trying to squeeze this all into one component with ternaries doesn't seem like a reasonable alternative",
    "session": 28,
    "author": 112,
    "time": "2018-01-04T15:33:06Z",
    "origin_slack_event": 545
  }
},
{
  "model": "discussions.message",
  "pk": 540,
  "fields": {
    "created": "2018-01-24T00:30:00.197Z",
    "modified": "2018-01-24T00:30:00.197Z",
    "text": "*Title:* Responsive web design with React, best practices\n*Tags:* React, material-ui\n*Github link:*\n*Description:* Diving into responsive web design with React for the first time. Wondering if my approach is an anti-pattern in any way, since it doesn\u2019t seem super common: for each view in my app, I\u2019m creating a \u201ccontainer\u201d component (e.g. `AppDashboard`) that uses a series of material-ui\u2019s `&lt;Hidden&gt;` component to basically do a switch statement across a bunch of child components that each lay out a different screen size, e.g. `AppDashboardDesktop` vs. `AppDashboardMobile`. I\u2019m separately extracting out all common children-of-children components, strings of text, etc so there\u2019s little code duplication between those two child components. I think this makes it a lot easier to manage the different layouts that end up pieced together with material-ui `&lt;Grid&gt;` components - you don\u2019t mess up the mobile view if you make changes to the desktop view. But it seems the more common approach would be to use just one file, and do e.g. `&lt;Grid sm={8} md={4} xl={3}&gt;`. Is this just the old webdev non-React way of thinking, or am I missing something?",
    "session": 28,
    "author": 71,
    "time": "2018-01-04T15:01:19Z",
    "origin_slack_event": 546
  }
},
{
  "model": "discussions.message",
  "pk": 541,
  "fields": {
    "created": "2018-01-24T00:30:00.427Z",
    "modified": "2018-01-24T00:30:00.427Z",
    "text": "- <https://discuss.circleci.com/t/useful-ecs-deploy-script/12496>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:18:14Z",
    "origin_slack_event": 547
  }
},
{
  "model": "discussions.message",
  "pk": 542,
  "fields": {
    "created": "2018-01-24T00:30:00.431Z",
    "modified": "2018-01-24T00:30:00.431Z",
    "text": "<@U8C2LGL7N> shared a file: <https://codeclippy.slack.com/files/U8C2LGL7N/F8NSLK11S/gistfile1.txt|gistfile1.txt>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:17:23Z",
    "origin_slack_event": 548
  }
},
{
  "model": "discussions.message",
  "pk": 543,
  "fields": {
    "created": "2018-01-24T00:30:00.434Z",
    "modified": "2018-01-24T00:30:00.434Z",
    "text": "- <https://gist.github.com/felicianotech/56ad8f63156e233e6a16df50fe6d4791>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:17:15Z",
    "origin_slack_event": 549
  }
},
{
  "model": "discussions.message",
  "pk": 544,
  "fields": {
    "created": "2018-01-24T00:30:00.437Z",
    "modified": "2018-01-24T00:30:00.438Z",
    "text": "- <https://circleci.com/docs/1.0/continuous-deployment-with-aws-ec2-container-service/>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:16:52Z",
    "origin_slack_event": 550
  }
},
{
  "model": "discussions.message",
  "pk": 545,
  "fields": {
    "created": "2018-01-24T00:30:00.443Z",
    "modified": "2018-01-24T00:30:00.443Z",
    "text": "- <https://circleci.com/docs/2.0/workflows/>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:15:50Z",
    "origin_slack_event": 551
  }
},
{
  "model": "discussions.message",
  "pk": 546,
  "fields": {
    "created": "2018-01-24T00:30:00.446Z",
    "modified": "2018-01-24T00:30:00.446Z",
    "text": "Here are some of the useful resources I found",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:15:48Z",
    "origin_slack_event": 552
  }
},
{
  "model": "discussions.message",
  "pk": 547,
  "fields": {
    "created": "2018-01-24T00:30:00.449Z",
    "modified": "2018-01-24T00:30:00.449Z",
    "text": "The tricky part was nailing down the build, login, push, deploy logic in the deploy jobs. This required A) including a setup_remote_docker step to be able to build, B) installing the AWSCLI with sudo so that we can login, which requires ENV variables w/ AWS creds, C) tagging and pushing, D) check if a task in the family is already running. if so, kill it. and run a task with the fresh docker image (tagged as \u201clatest\u201d)",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:09:59Z",
    "origin_slack_event": 553
  }
},
{
  "model": "discussions.message",
  "pk": 548,
  "fields": {
    "created": "2018-01-24T00:30:00.453Z",
    "modified": "2018-01-24T00:30:00.453Z",
    "text": "Unfortunately CircleCI (e.g. via Github\u2019s exposed functionality) cannot differentiate between a regular branch and one with a Pull Request. So, we landed on the following logic until the feature requests make their way through.\n- Any commit to a branch &gt; Run Tests &gt; Hold for approval (Optional) &gt; Deploy to Staging\n- Any commit to master &gt; Run Tests &gt; Hold for approval for either Staging or Production (Optional) &gt; Deploy to Staging or Production",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:08:28Z",
    "origin_slack_event": 554
  }
},
{
  "model": "discussions.message",
  "pk": 549,
  "fields": {
    "created": "2018-01-24T00:30:00.457Z",
    "modified": "2018-01-24T00:30:00.457Z",
    "text": "Ideally we would follow this logic:\n- Any commit to a branch &gt; Run Tests\n- Any commit to a PR\u2019d branch &gt; Run Tests &gt; Deploy to Staging\n- Any commit to master / merged branch &gt; Run Tests &gt; Deploy to Staging &gt; Hold for approval &gt; Deploy to production",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:06:51Z",
    "origin_slack_event": 555
  }
},
{
  "model": "discussions.message",
  "pk": 550,
  "fields": {
    "created": "2018-01-24T00:30:00.462Z",
    "modified": "2018-01-24T00:30:00.462Z",
    "text": "One area that ended up being a bit tricky was the workflow logic upon successful build.",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:05:46Z",
    "origin_slack_event": 556
  }
},
{
  "model": "discussions.message",
  "pk": 551,
  "fields": {
    "created": "2018-01-24T00:30:00.467Z",
    "modified": "2018-01-24T00:30:00.467Z",
    "text": "As you can see, each deploy job follows a similar routine with the major difference being which ECR repository and ECS task definition to use.",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:05:31Z",
    "origin_slack_event": 557
  }
},
{
  "model": "discussions.message",
  "pk": 552,
  "fields": {
    "created": "2018-01-24T00:30:00.470Z",
    "modified": "2018-01-24T00:30:00.470Z",
    "text": "<@U8C2LGL7N> uploaded a file: <https://codeclippy.slack.com/files/U8C2LGL7N/F8NSE3C92/config.yml|config.yml>",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:04:54Z",
    "origin_slack_event": 558
  }
},
{
  "model": "discussions.message",
  "pk": 553,
  "fields": {
    "created": "2018-01-24T00:30:00.477Z",
    "modified": "2018-01-24T00:30:00.477Z",
    "text": "This was my topic! After reading through the latest CircleCI docs and blog posts, I landed on a solution that uses two jobs and one workflow. The jobs contain the relevant bash commands for building, logging into ECR, tagging and pushing the image, and running the task on ECS. Uploading the config.yml here.",
    "session": 29,
    "author": 117,
    "time": "2018-01-05T20:04:24Z",
    "origin_slack_event": 559
  }
},
{
  "model": "discussions.message",
  "pk": 554,
  "fields": {
    "created": "2018-01-24T00:30:00.480Z",
    "modified": "2018-01-24T00:30:00.481Z",
    "text": "*Title*: Best practice for CD to Staging environment and manual deployment to Production environment using CircleCI\n*Tags*: CircleCI, ECS, CD\n*Description*: Currently using CircleCI to run tests. Would like to further leverage CircleCI to continuously deploy successful builds to a staging environment on AWS ECS with the option to manually deploy to production if staging was successful. In CircleCI v2.0, workflows seem to be the best practice. Working hypothesis is to have a workflow that deploys to staging and holds for approval before deploying to production. The deploy-to-staging and deploy-to-production jobs would each have bash scripts that use AWS\u2019s CLI. If anyone has experience here or if there is a more elegant solution via CircleCI than the bash scripts, would love to hear.",
    "session": 29,
    "author": 71,
    "time": "2018-01-04T23:49:57Z",
    "origin_slack_event": 560
  }
},
{
  "model": "discussions.message",
  "pk": 555,
  "fields": {
    "created": "2018-01-24T00:30:00.697Z",
    "modified": "2018-01-24T00:30:00.697Z",
    "text": "that can take format `\"rgb (56, 94, 125)\"`",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:22:49Z",
    "origin_slack_event": 561
  }
},
{
  "model": "discussions.message",
  "pk": 556,
  "fields": {
    "created": "2018-01-24T00:30:00.701Z",
    "modified": "2018-01-24T00:30:00.701Z",
    "text": "a good rgb to hex converter",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:22:13Z",
    "origin_slack_event": 562
  }
},
{
  "model": "discussions.message",
  "pk": 557,
  "fields": {
    "created": "2018-01-24T00:30:00.704Z",
    "modified": "2018-01-24T00:30:00.705Z",
    "text": "```\nfunction rgbToHex(rgb) {\n        if (rgb.substr(0, 1) === '#') {\n            return rgb;\n        }\n        var digits = /(.*?)rgb\\((\\d+), (\\d+), (\\d+)\\)/.exec(rgb);\n\n        var red = parseInt(digits[2]);\n        var green = parseInt(digits[3]);\n        var blue = parseInt(digits[4]);\n\n        var color = blue | (green &lt;&lt; 8) | (red &lt;&lt; 16);\n        return digits[1] + '#' + color.toString(16);\n```",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:22:05Z",
    "origin_slack_event": 563
  }
},
{
  "model": "discussions.message",
  "pk": 558,
  "fields": {
    "created": "2018-01-24T00:30:00.708Z",
    "modified": "2018-01-24T00:30:00.708Z",
    "text": "Marking it as closed then",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T16:22:02Z",
    "origin_slack_event": 564
  }
},
{
  "model": "discussions.message",
  "pk": 559,
  "fields": {
    "created": "2018-01-24T00:30:00.711Z",
    "modified": "2018-01-24T00:30:00.712Z",
    "text": ":ok_hand:",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T16:21:58Z",
    "origin_slack_event": 565
  }
},
{
  "model": "discussions.message",
  "pk": 560,
  "fields": {
    "created": "2018-01-24T00:30:00.715Z",
    "modified": "2018-01-24T00:30:00.715Z",
    "text": "think this info is enough :smile:",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:21:40Z",
    "origin_slack_event": 566
  }
},
{
  "model": "discussions.message",
  "pk": 561,
  "fields": {
    "created": "2018-01-24T00:30:00.718Z",
    "modified": "2018-01-24T00:30:00.718Z",
    "text": "Cool - any links you want to share here in case anyone else has a similar topic? Posts that helped you figure it out? Since we store these topics afterwards, other users might find them helpful",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T16:20:27Z",
    "origin_slack_event": 567
  }
},
{
  "model": "discussions.message",
  "pk": 562,
  "fields": {
    "created": "2018-01-24T00:30:00.722Z",
    "modified": "2018-01-24T00:30:00.722Z",
    "text": "well I did made it work, not really solved but ye you can mark it as solved, I googled a bit more and found a topic where it said that there is no way to listen a background-color so..",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:20:05Z",
    "origin_slack_event": 568
  }
},
{
  "model": "discussions.message",
  "pk": 563,
  "fields": {
    "created": "2018-01-24T00:30:00.727Z",
    "modified": "2018-01-24T00:30:00.727Z",
    "text": "<@U8NFUSKM0> would you say that the problem you posted has been solved?",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T16:18:12Z",
    "origin_slack_event": 569
  }
},
{
  "model": "discussions.message",
  "pk": 564,
  "fields": {
    "created": "2018-01-24T00:30:00.731Z",
    "modified": "2018-01-24T00:30:00.731Z",
    "text": "<@U8MNJM3TR> ty but yep, it's all over the interwebz ;D",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T16:17:02Z",
    "origin_slack_event": 570
  }
},
{
  "model": "discussions.message",
  "pk": 565,
  "fields": {
    "created": "2018-01-24T00:30:00.735Z",
    "modified": "2018-01-24T00:30:00.735Z",
    "text": "So if you ran `hexToRGB('#aaaaaa',100)` the output would be `170,170,170,1`",
    "session": 30,
    "author": 64,
    "time": "2018-01-05T14:23:27Z",
    "origin_slack_event": 571
  }
},
{
  "model": "discussions.message",
  "pk": 566,
  "fields": {
    "created": "2018-01-24T00:30:00.739Z",
    "modified": "2018-01-24T00:30:00.740Z",
    "text": ":point_up: this would strip the leading `#`, parse each hexadecimal value to a corresponding integer, and return them in a format usable in CSS (including the opacity for full rgba value)",
    "session": 30,
    "author": 64,
    "time": "2018-01-05T14:23:07Z",
    "origin_slack_event": 572
  }
},
{
  "model": "discussions.message",
  "pk": 567,
  "fields": {
    "created": "2018-01-24T00:30:00.744Z",
    "modified": "2018-01-24T00:30:00.744Z",
    "text": "```\nfunction hexToRGB(hex,opacity){\n    hex = hex.replace(\u2018#\u2019,\u2018\u2019);\n    r = parseInt(hex.substring(0,2), 16);\n    g = parseInt(hex.substring(2,4), 16);\n    b = parseInt(hex.substring(4,6), 16);\n\n    rgba = r+\u2018,\u2019+g+\u2018,\u2019+b+\u2018,\u2019+opacity/100;\n    return rgba;\n}\n```",
    "session": 30,
    "author": 64,
    "time": "2018-01-05T14:22:21Z",
    "origin_slack_event": 573
  }
},
{
  "model": "discussions.message",
  "pk": 568,
  "fields": {
    "created": "2018-01-24T00:30:00.748Z",
    "modified": "2018-01-24T00:30:00.748Z",
    "text": "Its quite straight forward just using `parseInt` and parsing each character pair with 16 (hexadecimal)",
    "session": 30,
    "author": 64,
    "time": "2018-01-05T14:20:21Z",
    "origin_slack_event": 574
  }
},
{
  "model": "discussions.message",
  "pk": 569,
  "fields": {
    "created": "2018-01-24T00:30:00.751Z",
    "modified": "2018-01-24T00:30:00.751Z",
    "text": "<@U8NFUSKM0> did you solve the HEX-&gt;RGB conversion, or you still need help?",
    "session": 30,
    "author": 64,
    "time": "2018-01-05T14:11:17Z",
    "origin_slack_event": 575
  }
},
{
  "model": "discussions.message",
  "pk": 570,
  "fields": {
    "created": "2018-01-24T00:30:00.755Z",
    "modified": "2018-01-24T00:30:00.755Z",
    "text": "Now I just have to convert HEX into RGB",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:55:07Z",
    "origin_slack_event": 576
  }
},
{
  "model": "discussions.message",
  "pk": 571,
  "fields": {
    "created": "2018-01-24T00:30:00.758Z",
    "modified": "2018-01-24T00:30:00.758Z",
    "text": "Nice! Want to show us how you did it, in case anyone runs into a similar problem in the future?",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T09:52:21Z",
    "origin_slack_event": 577
  }
},
{
  "model": "discussions.message",
  "pk": 572,
  "fields": {
    "created": "2018-01-24T00:30:00.762Z",
    "modified": "2018-01-24T00:30:00.763Z",
    "text": "I worked around it, the one colorpicker has a div with palette so I used:\n```\n$('.colorpicker_new_color').css(\"background-color\").on(\"change\", function() {\n        $('.colorpicker_new_color').css(\"background-color\", colorPicker.value);\n    });\n$('.colorpicker_color').on('mousedown', function() {\n        $('.colorpicker_color').on('mousemove', function(evt) {\n            if (evt.buttons == 1) {\n                colorPicker.value = $('.colorpicker_new_color').css(\"background-color\");\n              \n            }\n        });\n    });\n\n```",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:49:54Z",
    "origin_slack_event": 578
  }
},
{
  "model": "discussions.message",
  "pk": 573,
  "fields": {
    "created": "2018-01-24T00:30:00.766Z",
    "modified": "2018-01-24T00:30:00.766Z",
    "text": "how do I listen to background-color change of a element",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:26:40Z",
    "origin_slack_event": 579
  }
},
{
  "model": "discussions.message",
  "pk": 574,
  "fields": {
    "created": "2018-01-24T00:30:00.769Z",
    "modified": "2018-01-24T00:30:00.769Z",
    "text": "I have this next problem now",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:26:16Z",
    "origin_slack_event": 580
  }
},
{
  "model": "discussions.message",
  "pk": 575,
  "fields": {
    "created": "2018-01-24T00:30:00.773Z",
    "modified": "2018-01-24T00:30:00.773Z",
    "text": "Well I saw one post with onchange inside html and it worked, then I tried other ways and somehow they work but those 2 do not..",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:26:07Z",
    "origin_slack_event": 581
  }
},
{
  "model": "discussions.message",
  "pk": 576,
  "fields": {
    "created": "2018-01-24T00:30:00.778Z",
    "modified": "2018-01-24T00:30:00.778Z",
    "text": "Could you share some of the sources (docs, StackOverflow posts) that you\u2019re looking at? Might make it easier for someone to help out when they\u2019re logged on :slightly_smiling_face:",
    "session": 30,
    "author": 76,
    "time": "2018-01-05T09:23:59Z",
    "origin_slack_event": 582
  }
},
{
  "model": "discussions.message",
  "pk": 577,
  "fields": {
    "created": "2018-01-24T00:30:00.782Z",
    "modified": "2018-01-24T00:30:00.783Z",
    "text": "How do I execute something when background-color of a div changes?",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:23:01Z",
    "origin_slack_event": 583
  }
},
{
  "model": "discussions.message",
  "pk": 578,
  "fields": {
    "created": "2018-01-24T00:30:00.786Z",
    "modified": "2018-01-24T00:30:00.786Z",
    "text": "So after some testing, looks like \n:x: `.change(function() {})` won't work \n:x: `.onchange = function() {};` won't work \n:white_check_mark: `.on(\"change\", function() {})` works\n:white_check_mark: `.addEventListener.(\"change\", function() {})` works\n:white_check_mark: `&lt;input type=\"color\" onchange=\"func (this)\"&gt;` works\n\nBut why?\nIt legit even says that `.change(` is equivalent of `on.(\"change\", `",
    "session": 30,
    "author": 46,
    "time": "2018-01-05T09:11:22Z",
    "origin_slack_event": 584
  }
},
{
  "model": "discussions.message",
  "pk": 579,
  "fields": {
    "created": "2018-01-24T00:30:00.789Z",
    "modified": "2018-01-24T00:30:00.790Z",
    "text": "*Title:* Change background-color of an element when value of input type color changes\n\n*Tags:* Event Handler, Javascript, Js, Css, HTML\n\n*Description:* I have a `&lt;div class=\"colorpicker_new_color\"&gt;&lt;/div&gt;` and `&lt;input type=\"color\" id=\"colorPicker\"&gt;&lt;/input&gt;` how do I make an event handler when `$('#colorPicker').val()` changes to put `$('.colorpicker_new_color').css(\"backgroundColor\") = $('#colorPicker').val()` and vice versa but I'll have to convert RGB into hex.",
    "session": 30,
    "author": 71,
    "time": "2018-01-05T08:34:21Z",
    "origin_slack_event": 585
  }
},
{
  "model": "discussions.message",
  "pk": 580,
  "fields": {
    "created": "2018-01-24T00:30:01.015Z",
    "modified": "2018-01-24T00:30:01.015Z",
    "text": "I think I'm going to table this in my app for now (sticking with PNGs) -- optimizing performance this granularly isn't high priority yet. But if I were to continue working on this, I think I'd 1) figure out what `&lt;svg&gt;` attributes I should set to make the underlying image expand to fill the container of the `&lt;svg&gt;` (e.g. a `&lt;span&gt;`) 2) set them either manually in all my SVG's or use simple library above to do it programmatically 3) leverage react-inlinesvg to use its import/wrapping functionality (by default it wraps the imported SVG with `&lt;span&gt;`), and apply CSS-in-JS as-needed to the wrappers to get the sizing right",
    "session": 31,
    "author": 112,
    "time": "2018-01-05T21:16:33Z",
    "origin_slack_event": 591
  }
},
{
  "model": "discussions.message",
  "pk": 581,
  "fields": {
    "created": "2018-01-24T00:30:01.019Z",
    "modified": "2018-01-24T00:30:01.019Z",
    "text": "Here's a simple npm library someone made (fork of react-inlinesvg) to make it easy to add/remove those attributes <https://github.com/mindaugas-jacionis/react-inlinesvg-extended>",
    "session": 31,
    "author": 112,
    "time": "2018-01-05T21:11:41Z",
    "origin_slack_event": 592
  }
},
{
  "model": "discussions.message",
  "pk": 582,
  "fields": {
    "created": "2018-01-24T00:30:01.023Z",
    "modified": "2018-01-24T00:30:01.023Z",
    "text": "Seems like to do this effectively, it's worth understanding the SVG attributes <https://css-tricks.com/scale-svg/>",
    "session": 31,
    "author": 112,
    "time": "2018-01-05T21:10:58Z",
    "origin_slack_event": 593
  }
},
{
  "model": "discussions.message",
  "pk": 583,
  "fields": {
    "created": "2018-01-24T00:30:01.027Z",
    "modified": "2018-01-24T00:30:01.027Z",
    "text": "(this is my topic)",
    "session": 31,
    "author": 112,
    "time": "2018-01-05T21:10:31Z",
    "origin_slack_event": 594
  }
},
{
  "model": "discussions.message",
  "pk": 584,
  "fields": {
    "created": "2018-01-24T00:30:01.031Z",
    "modified": "2018-01-24T00:30:01.031Z",
    "text": "*Title:* SVGs in React\n*Tags:* React, svg, react-scripts\n*Github link:*\n*Description:* I'm trying to replace a bunch of png's in my app with svg's. Proving to be a lot more difficult than I expected. I'm trying out libraries like react-inlinesvg so I can render the SVG's with supplemental CSS-in-JS to get the size scaling right. Turning out to be a mess of wrappers &amp; editing the SVG's parameters. Probably lacking some basic understanding of how SVG's are supposed to work, or maybe missing some React library that abstracts this all out - any ideas?",
    "session": 31,
    "author": 71,
    "time": "2018-01-05T20:57:27Z",
    "origin_slack_event": 595
  }
},
{
  "model": "discussions.message",
  "pk": 585,
  "fields": {
    "created": "2018-01-24T00:30:01.271Z",
    "modified": "2018-01-24T00:30:01.271Z",
    "text": "Thanks :slightly_smiling_face:",
    "session": 32,
    "author": 76,
    "time": "2018-01-09T20:55:57Z",
    "origin_slack_event": 596
  }
},
{
  "model": "discussions.message",
  "pk": 586,
  "fields": {
    "created": "2018-01-24T00:30:01.275Z",
    "modified": "2018-01-24T00:30:01.275Z",
    "text": "sure, please",
    "session": 32,
    "author": 96,
    "time": "2018-01-09T20:55:51Z",
    "origin_slack_event": 597
  }
},
{
  "model": "discussions.message",
  "pk": 587,
  "fields": {
    "created": "2018-01-24T00:30:01.278Z",
    "modified": "2018-01-24T00:30:01.279Z",
    "text": "All right. Mind if we close this session?",
    "session": 32,
    "author": 76,
    "time": "2018-01-09T20:49:02Z",
    "origin_slack_event": 598
  }
},
{
  "model": "discussions.message",
  "pk": 588,
  "fields": {
    "created": "2018-01-24T00:30:01.282Z",
    "modified": "2018-01-24T00:30:01.282Z",
    "text": "yes",
    "session": 32,
    "author": 96,
    "time": "2018-01-09T20:48:39Z",
    "origin_slack_event": 599
  }
},
{
  "model": "discussions.message",
  "pk": 589,
  "fields": {
    "created": "2018-01-24T00:30:01.285Z",
    "modified": "2018-01-24T00:30:01.285Z",
    "text": "Eugh, that sounds less than ideal. But at least it\u2019s working?",
    "session": 32,
    "author": 76,
    "time": "2018-01-09T20:48:27Z",
    "origin_slack_event": 600
  }
},
{
  "model": "discussions.message",
  "pk": 590,
  "fields": {
    "created": "2018-01-24T00:30:01.289Z",
    "modified": "2018-01-24T00:30:01.289Z",
    "text": "and since proxies require authentication, had to use FoxyProxy addon and managing it with Selenium as well",
    "session": 32,
    "author": 96,
    "time": "2018-01-09T19:33:24Z",
    "origin_slack_event": 601
  }
},
{
  "model": "discussions.message",
  "pk": 591,
  "fields": {
    "created": "2018-01-24T00:30:01.292Z",
    "modified": "2018-01-24T00:30:01.293Z",
    "text": "finally I had to use it browser-based with specifically using Firefox with Selenium",
    "session": 32,
    "author": 96,
    "time": "2018-01-09T19:32:58Z",
    "origin_slack_event": 602
  }
},
{
  "model": "discussions.message",
  "pk": 592,
  "fields": {
    "created": "2018-01-24T00:30:01.296Z",
    "modified": "2018-01-24T00:30:01.296Z",
    "text": "what happens when you use same proxy with FF?",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T18:59:38Z",
    "origin_slack_event": 603
  }
},
{
  "model": "discussions.message",
  "pk": 593,
  "fields": {
    "created": "2018-01-24T00:30:01.301Z",
    "modified": "2018-01-24T00:30:01.301Z",
    "text": "many IPs are blocked by Ticketmaster",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T18:58:00Z",
    "origin_slack_event": 604
  }
},
{
  "model": "discussions.message",
  "pk": 594,
  "fields": {
    "created": "2018-01-24T00:30:01.305Z",
    "modified": "2018-01-24T00:30:01.305Z",
    "text": "this must be with some particular proxy",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T18:57:45Z",
    "origin_slack_event": 605
  }
},
{
  "model": "discussions.message",
  "pk": 595,
  "fields": {
    "created": "2018-01-24T00:30:01.309Z",
    "modified": "2018-01-24T00:30:01.309Z",
    "text": "But it\u2019s fine without proxies",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T16:29:01Z",
    "origin_slack_event": 606
  }
},
{
  "model": "discussions.message",
  "pk": 596,
  "fields": {
    "created": "2018-01-24T00:30:01.312Z",
    "modified": "2018-01-24T00:30:01.313Z",
    "text": "I get this when accessing via Chrome w/ proxies",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T16:28:55Z",
    "origin_slack_event": 607
  }
},
{
  "model": "discussions.message",
  "pk": 597,
  "fields": {
    "created": "2018-01-24T00:30:01.317Z",
    "modified": "2018-01-24T00:30:01.317Z",
    "text": "<@U8C2LGL7N> uploaded a file: <https://codeclippy.slack.com/files/U8C2LGL7N/F8PND21LM/screen_shot_2018-01-08_at_11.28.27_am.png|Screen Shot 2018-01-08 at 11.28.27 AM.png>",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T16:28:49Z",
    "origin_slack_event": 608
  }
},
{
  "model": "discussions.message",
  "pk": 598,
  "fields": {
    "created": "2018-01-24T00:30:01.321Z",
    "modified": "2018-01-24T00:30:01.321Z",
    "text": "It looks like this is Ticketmaster\u2019s anti-proxy measures, which Firefox spoofs better than Chrome",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T15:23:49Z",
    "origin_slack_event": 609
  }
},
{
  "model": "discussions.message",
  "pk": 599,
  "fields": {
    "created": "2018-01-24T00:30:01.324Z",
    "modified": "2018-01-24T00:30:01.325Z",
    "text": "yes",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:24:02Z",
    "origin_slack_event": 610
  }
},
{
  "model": "discussions.message",
  "pk": 600,
  "fields": {
    "created": "2018-01-24T00:30:01.328Z",
    "modified": "2018-01-24T00:30:01.328Z",
    "text": "this is manual?",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:23:59Z",
    "origin_slack_event": 611
  }
},
{
  "model": "discussions.message",
  "pk": 601,
  "fields": {
    "created": "2018-01-24T00:30:01.332Z",
    "modified": "2018-01-24T00:30:01.332Z",
    "text": "you\u2019re not controlling either via selenium right?",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:23:57Z",
    "origin_slack_event": 612
  }
},
{
  "model": "discussions.message",
  "pk": 602,
  "fields": {
    "created": "2018-01-24T00:30:01.335Z",
    "modified": "2018-01-24T00:30:01.335Z",
    "text": "yeah that\u2019s bizarre",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:23:26Z",
    "origin_slack_event": 613
  }
},
{
  "model": "discussions.message",
  "pk": 603,
  "fields": {
    "created": "2018-01-24T00:30:01.339Z",
    "modified": "2018-01-24T00:30:01.339Z",
    "text": "with proxies",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:23:20Z",
    "origin_slack_event": 614
  }
},
{
  "model": "discussions.message",
  "pk": 604,
  "fields": {
    "created": "2018-01-24T00:30:01.344Z",
    "modified": "2018-01-24T00:30:01.344Z",
    "text": "my only mindblow is that FF works and Chrome doesnt",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:23:15Z",
    "origin_slack_event": 615
  }
},
{
  "model": "discussions.message",
  "pk": 605,
  "fields": {
    "created": "2018-01-24T00:30:01.347Z",
    "modified": "2018-01-24T00:30:01.347Z",
    "text": "yes",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:22:14Z",
    "origin_slack_event": 616
  }
},
{
  "model": "discussions.message",
  "pk": 606,
  "fields": {
    "created": "2018-01-24T00:30:01.350Z",
    "modified": "2018-01-24T00:30:01.350Z",
    "text": "But it works fine without proxies via requests",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:22:09Z",
    "origin_slack_event": 617
  }
},
{
  "model": "discussions.message",
  "pk": 607,
  "fields": {
    "created": "2018-01-24T00:30:01.354Z",
    "modified": "2018-01-24T00:30:01.354Z",
    "text": "Via requests",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:22:02Z",
    "origin_slack_event": 618
  }
},
{
  "model": "discussions.message",
  "pk": 608,
  "fields": {
    "created": "2018-01-24T00:30:01.359Z",
    "modified": "2018-01-24T00:30:01.359Z",
    "text": "But works fine without them, which makes me think that Ticketmaster is picking up on proxy use and flagging as robot",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:21:59Z",
    "origin_slack_event": 619
  }
},
{
  "model": "discussions.message",
  "pk": 609,
  "fields": {
    "created": "2018-01-24T00:30:01.363Z",
    "modified": "2018-01-24T00:30:01.363Z",
    "text": "firefox works and chrome doesnt?",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:21:38Z",
    "origin_slack_event": 620
  }
},
{
  "model": "discussions.message",
  "pk": 610,
  "fields": {
    "created": "2018-01-24T00:30:01.367Z",
    "modified": "2018-01-24T00:30:01.367Z",
    "text": "Having same issue with our proxies",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:21:12Z",
    "origin_slack_event": 621
  }
},
{
  "model": "discussions.message",
  "pk": 611,
  "fields": {
    "created": "2018-01-24T00:30:01.371Z",
    "modified": "2018-01-24T00:30:01.371Z",
    "text": "yes",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:16:47Z",
    "origin_slack_event": 622
  }
},
{
  "model": "discussions.message",
  "pk": 612,
  "fields": {
    "created": "2018-01-24T00:30:01.375Z",
    "modified": "2018-01-24T00:30:01.375Z",
    "text": "Ok cool",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:16:45Z",
    "origin_slack_event": 623
  }
},
{
  "model": "discussions.message",
  "pk": 613,
  "fields": {
    "created": "2018-01-24T00:30:01.378Z",
    "modified": "2018-01-24T00:30:01.379Z",
    "text": "because before opening the actual site, I always open <http://geoip.hidemyass.com> first",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:16:42Z",
    "origin_slack_event": 624
  }
},
{
  "model": "discussions.message",
  "pk": 614,
  "fields": {
    "created": "2018-01-24T00:30:01.383Z",
    "modified": "2018-01-24T00:30:01.383Z",
    "text": "Did you visit something like <http://checkip.dynsdns.org|checkip.dynsdns.org>",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:16:39Z",
    "origin_slack_event": 625
  }
},
{
  "model": "discussions.message",
  "pk": 615,
  "fields": {
    "created": "2018-01-24T00:30:01.387Z",
    "modified": "2018-01-24T00:30:01.387Z",
    "text": "yes",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:16:20Z",
    "origin_slack_event": 626
  }
},
{
  "model": "discussions.message",
  "pk": 616,
  "fields": {
    "created": "2018-01-24T00:30:01.390Z",
    "modified": "2018-01-24T00:30:01.391Z",
    "text": "Are you sure Firefox was using the proxies?",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:16:15Z",
    "origin_slack_event": 627
  }
},
{
  "model": "discussions.message",
  "pk": 617,
  "fields": {
    "created": "2018-01-24T00:30:01.394Z",
    "modified": "2018-01-24T00:30:01.395Z",
    "text": "so this could be ruled out easily",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:16:08Z",
    "origin_slack_event": 628
  }
},
{
  "model": "discussions.message",
  "pk": 618,
  "fields": {
    "created": "2018-01-24T00:30:01.398Z",
    "modified": "2018-01-24T00:30:01.398Z",
    "text": "because it is working with Firefox",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:16:01Z",
    "origin_slack_event": 629
  }
},
{
  "model": "discussions.message",
  "pk": 619,
  "fields": {
    "created": "2018-01-24T00:30:01.402Z",
    "modified": "2018-01-24T00:30:01.402Z",
    "text": "I\u2019ve seen that across a number of services where high profile sites like Google, Amazon, etc",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:15:51Z",
    "origin_slack_event": 630
  }
},
{
  "model": "discussions.message",
  "pk": 620,
  "fields": {
    "created": "2018-01-24T00:30:01.405Z",
    "modified": "2018-01-24T00:30:01.406Z",
    "text": "no",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T14:15:48Z",
    "origin_slack_event": 631
  }
},
{
  "model": "discussions.message",
  "pk": 621,
  "fields": {
    "created": "2018-01-24T00:30:01.410Z",
    "modified": "2018-01-24T00:30:01.410Z",
    "text": "Does the proxy service you use require enabling access to certain sites?",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T14:15:32Z",
    "origin_slack_event": 632
  }
},
{
  "model": "discussions.message",
  "pk": 622,
  "fields": {
    "created": "2018-01-24T00:30:01.416Z",
    "modified": "2018-01-24T00:30:01.416Z",
    "text": "What type of authentication do the proxies require?",
    "session": 32,
    "author": 117,
    "time": "2018-01-08T13:56:41Z",
    "origin_slack_event": 633
  }
},
{
  "model": "discussions.message",
  "pk": 623,
  "fields": {
    "created": "2018-01-24T00:30:01.420Z",
    "modified": "2018-01-24T00:30:01.421Z",
    "text": "I can send the proxy details in private chat",
    "session": 32,
    "author": 96,
    "time": "2018-01-08T12:57:53Z",
    "origin_slack_event": 634
  }
},
{
  "model": "discussions.message",
  "pk": 624,
  "fields": {
    "created": "2018-01-24T00:30:01.425Z",
    "modified": "2018-01-24T00:30:01.426Z",
    "text": "*Title:* https website does not open with Chrome and Requests but works with firefox when using Proxy\n*Tags:* Chrome, Proxy, SSL, TLS v1.2, Python, Requests\n*Github link:*\n*Description:* I admit in advance that this is a very weird problem. I am still posting it hoping someone could figure out whats wrong.\nI am trying to access a webpage, url - <https://www.ticketmaster.com/member/payment_options>. I can open it using Google Chrome, Firefox and Python Requests as well.\nNow, I want to access the same page using a dedicated proxy from stormproxies. I follow the proxy setup on Firefox and Chrome, as well as use those in Requests code. The webpage opens up well in Firefox, but not in Chrome. It just keeps on waiting for the sever to respond. Same thing happens with Requests code. It times out if I use a timeout parameter.\n\nHere is the Requests code I am using:\n```import requests\n\nproxy = '&lt;proxy&gt;'\nproxies = {'http': 'http://{}'.format(proxy), 'https': 'http://{}'.format(proxy)}\n\n\nheaders = {\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n    'Accept-Encoding': 'gzip, deflate, br',\n    'Accept-Language': 'en-US,en;q=0.9',\n    'Cache-Control': 'max-age=0',\n    'Connection': 'keep-alive',\n    'Host': '<http://www.ticketmaster.com|www.ticketmaster.com>',\n    'Upgrade-Insecure-Requests': '1',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.84 Safari/537.36'\n}\n\ns = requests.session()\ns.headers.update(headers)\n# s.proxies.update(proxies)\nurl = '<https://www.ticketmaster.com/member/payment_options>'\nr = s.get(url, timeout=30)\nprint(r.content.decode())```\n\nThis code would work fine, but as soon as you uncomment the line `s.proxies.update(proxies)`, it would throw TimeoutException.\n\nThe bigger issue here is that even Google Chrome isnt working.\nThe only reasons I could figure out is that Firefox has its own Proxy setup, but Google Chrome rather uses Windows Internet Explorer proxy settings and security settings.\n\nLet me know if any of you have come across this or if know a solution.",
    "session": 32,
    "author": 71,
    "time": "2018-01-08T12:48:08Z",
    "origin_slack_event": 635
  }
},
{
  "model": "discussions.message",
  "pk": 625,
  "fields": {
    "created": "2018-01-24T00:30:01.683Z",
    "modified": "2018-01-24T00:30:01.683Z",
    "text": "so fix:\n```\n@pytest.fixture(scope='session')\ndef test_router(test_slack_client_factory, test_send_grid_client, test_twilio_client, test_solutionloft_client,\n                test_bot_client, tmpdir_factory):\n    tmpdir = tmpdir_factory.getbasetemp()\n    database_wrapper = DatabaseClientWrapper()\n    return Router(\n        bot=Bot(\n            bot_client=test_bot_client,\n            bot_id=0,\n            admin_user_ids=[0],\n            admin_group_id=None,\n            help_channel_id=None,\n            slack_client=test_slack_client_factory,\n            database_wrapper=database_wrapper,\n            log_file=f'{tmpdir}/bot.log'\n        ),\n        slack_client=test_slack_client_factory,\n        sendgrid_client=SendGridClientWrapper(test_send_grid_client, f'{tmpdir}/sendgrid.log'),\n        twilio_client=TwilioClientWrapper(test_twilio_client, f'{tmpdir}/twilio.log'),\n        solutionloft_client=SolutionLoftClientWrapper(test_solutionloft_client, f'{tmpdir}/solutionloft.log'),\n        database_wrapper=database_wrapper,\n        log_file=f'{tmpdir}/router.log'\n    )\n```",
    "session": 33,
    "author": 112,
    "time": "2018-01-09T16:54:46Z",
    "origin_slack_event": 636
  }
},
{
  "model": "discussions.message",
  "pk": 626,
  "fields": {
    "created": "2018-01-24T00:30:01.686Z",
    "modified": "2018-01-24T00:30:01.687Z",
    "text": "figured it out: appears that `tmpdir_factory` doesn't wipe the tmpdir (from previous runs) until it is invoked. this only became a problem in my unorthodox use of tmpdir: i've overridden the dir with the `--basetemp=pytest-tmp` cli option, and i'm hardcoding the presence of an in-file database (during tests) in my app setup in that same directory",
    "session": 33,
    "author": 112,
    "time": "2018-01-09T16:54:23Z",
    "origin_slack_event": 637
  }
},
{
  "model": "discussions.message",
  "pk": 627,
  "fields": {
    "created": "2018-01-24T00:30:01.690Z",
    "modified": "2018-01-24T00:30:01.690Z",
    "text": "```\n@pytest.fixture(scope='session')\ndef test_router(test_slack_client_factory, test_send_grid_client, test_twilio_client, test_solutionloft_client,\n                test_bot_client, tmpdir_factory):\n    database_wrapper = DatabaseClientWrapper()\n    return Router(\n        bot=Bot(\n            bot_client=test_bot_client,\n            bot_id=0,\n            admin_user_ids=[0],\n            admin_group_id=None,\n            help_channel_id=None,\n            slack_client=test_slack_client_factory,\n            database_wrapper=database_wrapper,\n            log_file=f'{tmpdir_factory.getbasetemp()}/bot.log'\n        ),\n        slack_client=test_slack_client_factory,\n        sendgrid_client=SendGridClientWrapper(test_send_grid_client, f'{tmpdir_factory.getbasetemp()}/sendgrid.log'),\n        twilio_client=TwilioClientWrapper(test_twilio_client, f'{tmpdir_factory.getbasetemp()}/twilio.log'),\n        solutionloft_client=SolutionLoftClientWrapper(test_solutionloft_client, f'{tmpdir_factory.getbasetemp()}/solutionloft.log'),\n        database_wrapper=database_wrapper,\n        log_file=f'{tmpdir_factory.getbasetemp()}/router.log'\n    )\n```",
    "session": 33,
    "author": 112,
    "time": "2018-01-09T16:48:06Z",
    "origin_slack_event": 638
  }
},
{
  "model": "discussions.message",
  "pk": 628,
  "fields": {
    "created": "2018-01-24T00:30:01.694Z",
    "modified": "2018-01-24T00:30:01.694Z",
    "text": "update on my topic here... bizarre behavior in that when the test initializes this DatabaseClientWrapper i'm using, the db file is created, and when it returns to the caller, the file gets deleted. thinking it's related to pytest fixtures, maybe tmpdir_factory\n```\nfrom peewee import DoesNotExist\n\nfrom src.models import database, Channel\n\n\nclass DatabaseClientWrapper(object):\n    def __init__(self):\n        self.create_tables_safely()\n\n    def create_tables_safely(self):\n        database.create_tables([Channel], safe=True)\n```",
    "session": 33,
    "author": 112,
    "time": "2018-01-09T16:47:21Z",
    "origin_slack_event": 639
  }
},
{
  "model": "discussions.message",
  "pk": 629,
  "fields": {
    "created": "2018-01-24T00:30:01.698Z",
    "modified": "2018-01-24T00:30:01.698Z",
    "text": "*Title:* SqliteDatabase showing up empty (no tables) during pytest session, even though peewee's create_tables appears to run\n*Tags:* python, pytest, peewee, sqlite\n*Github link:*\n*Description:* I have a branch where this is not a problem, and a branch where this is a problem, can't figure out what in the diff is causing it... Maybe something to do with SqliteDatabase and how it works with threads?",
    "session": 33,
    "author": 71,
    "time": "2018-01-09T14:32:05Z",
    "origin_slack_event": 640
  }
},
{
  "model": "discussions.message",
  "pk": 630,
  "fields": {
    "created": "2018-01-24T00:30:01.970Z",
    "modified": "2018-01-24T00:30:01.970Z",
    "text": "Perfect! :slightly_smiling_face:",
    "session": 34,
    "author": 76,
    "time": "2018-01-09T15:30:42Z",
    "origin_slack_event": 641
  }
},
{
  "model": "discussions.message",
  "pk": 631,
  "fields": {
    "created": "2018-01-24T00:30:01.973Z",
    "modified": "2018-01-24T00:30:01.974Z",
    "text": "everything works fine! thead solved, thank for your help and time <@U8C281TT6>",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:30:22Z",
    "origin_slack_event": 642
  }
},
{
  "model": "discussions.message",
  "pk": 632,
  "fields": {
    "created": "2018-01-24T00:30:01.977Z",
    "modified": "2018-01-24T00:30:01.978Z",
    "text": "nvm I am drunk",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:30:03Z",
    "origin_slack_event": 643
  }
},
{
  "model": "discussions.message",
  "pk": 633,
  "fields": {
    "created": "2018-01-24T00:30:01.982Z",
    "modified": "2018-01-24T00:30:01.982Z",
    "text": "of the whole width, why that",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:29:26Z",
    "origin_slack_event": 644
  }
},
{
  "model": "discussions.message",
  "pk": 634,
  "fields": {
    "created": "2018-01-24T00:30:01.985Z",
    "modified": "2018-01-24T00:30:01.985Z",
    "text": "but if I put 0 10%, it wont be 10% on each side",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:29:19Z",
    "origin_slack_event": 645
  }
},
{
  "model": "discussions.message",
  "pk": 635,
  "fields": {
    "created": "2018-01-24T00:30:01.988Z",
    "modified": "2018-01-24T00:30:01.989Z",
    "text": "I add margin: 0 10px; and this works",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:29:06Z",
    "origin_slack_event": 646
  }
},
{
  "model": "discussions.message",
  "pk": 636,
  "fields": {
    "created": "2018-01-24T00:30:01.992Z",
    "modified": "2018-01-24T00:30:01.993Z",
    "text": "one more if u'd know",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:28:42Z",
    "origin_slack_event": 647
  }
},
{
  "model": "discussions.message",
  "pk": 637,
  "fields": {
    "created": "2018-01-24T00:30:01.996Z",
    "modified": "2018-01-24T00:30:01.996Z",
    "text": "I want to struggle now, will make me understand it better :smile:",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:28:23Z",
    "origin_slack_event": 648
  }
},
{
  "model": "discussions.message",
  "pk": 638,
  "fields": {
    "created": "2018-01-24T00:30:02Z",
    "modified": "2018-01-24T00:30:02Z",
    "text": "```\nbody {\n    display: flex;\n    margin: 0;\n    text-align: center;\n    background: #424242;\n    flex-flow: row wrap;\n}\n\nheader {\n    font-family: Monoton, sans-serif;\n    font-size: 70px;\n    border-bottom: 2px solid black;\n    border-left: 2px solid black;\n    border-right: 2px solid black;\n    flex: 0 1 100%;\n}\n``` for anyone reading this in the future",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:28:22Z",
    "origin_slack_event": 649
  }
},
{
  "model": "discussions.message",
  "pk": 639,
  "fields": {
    "created": "2018-01-24T00:30:02.004Z",
    "modified": "2018-01-24T00:30:02.005Z",
    "text": "ah nope i think that makes sense. i don't usually mess with raw CSS like this, more used to using react libraries built on top of flexbox :slightly_smiling_face:",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:27:56Z",
    "origin_slack_event": 650
  }
},
{
  "model": "discussions.message",
  "pk": 640,
  "fields": {
    "created": "2018-01-24T00:30:02.009Z",
    "modified": "2018-01-24T00:30:02.010Z",
    "text": "I saw them doing this on the standard flexbox layout",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:27:47Z",
    "origin_slack_event": 651
  }
},
{
  "model": "discussions.message",
  "pk": 641,
  "fields": {
    "created": "2018-01-24T00:30:02.014Z",
    "modified": "2018-01-24T00:30:02.014Z",
    "text": "and margin would get me the spacing on header, is there a better way?",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:26:57Z",
    "origin_slack_event": 652
  }
},
{
  "model": "discussions.message",
  "pk": 642,
  "fields": {
    "created": "2018-01-24T00:30:02.018Z",
    "modified": "2018-01-24T00:30:02.019Z",
    "text": "and wrap should push other elemnts into next row",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:26:40Z",
    "origin_slack_event": 653
  }
},
{
  "model": "discussions.message",
  "pk": 643,
  "fields": {
    "created": "2018-01-24T00:30:02.022Z",
    "modified": "2018-01-24T00:30:02.023Z",
    "text": "flex: 0 1 100%;",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:26:26Z",
    "origin_slack_event": 654
  }
},
{
  "model": "discussions.message",
  "pk": 644,
  "fields": {
    "created": "2018-01-24T00:30:02.026Z",
    "modified": "2018-01-24T00:30:02.027Z",
    "text": "you said you wanted to position the header in the middle top",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:26:06Z",
    "origin_slack_event": 655
  }
},
{
  "model": "discussions.message",
  "pk": 645,
  "fields": {
    "created": "2018-01-24T00:30:02.032Z",
    "modified": "2018-01-24T00:30:02.032Z",
    "text": "centering what?",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:25:50Z",
    "origin_slack_event": 656
  }
},
{
  "model": "discussions.message",
  "pk": 646,
  "fields": {
    "created": "2018-01-24T00:30:02.036Z",
    "modified": "2018-01-24T00:30:02.036Z",
    "text": "what was your solution for centering it? or still working on that",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:25:32Z",
    "origin_slack_event": 657
  }
},
{
  "model": "discussions.message",
  "pk": 647,
  "fields": {
    "created": "2018-01-24T00:30:02.039Z",
    "modified": "2018-01-24T00:30:02.039Z",
    "text": "gotcha makes sense",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:25:08Z",
    "origin_slack_event": 658
  }
},
{
  "model": "discussions.message",
  "pk": 648,
  "fields": {
    "created": "2018-01-24T00:30:02.043Z",
    "modified": "2018-01-24T00:30:02.043Z",
    "text": "had to make it for udacity, but like 1% of what you see here, I just continued to build more and more just to test and learn",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:24:59Z",
    "origin_slack_event": 659
  }
},
{
  "model": "discussions.message",
  "pk": 649,
  "fields": {
    "created": "2018-01-24T00:30:02.046Z",
    "modified": "2018-01-24T00:30:02.046Z",
    "text": "i guess you're using flex, there's just lots of stuff that's been built on top of it as well",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:24:57Z",
    "origin_slack_event": 660
  }
},
{
  "model": "discussions.message",
  "pk": 650,
  "fields": {
    "created": "2018-01-24T00:30:02.050Z",
    "modified": "2018-01-24T00:30:02.050Z",
    "text": "what's your goal with building this app? if you're trying to learn web development, your time might be better spent learning the Bootstrap grid system (popular ~2011-2016, still today) or flex-box (popular 2016+)",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:24:09Z",
    "origin_slack_event": 661
  }
},
{
  "model": "discussions.message",
  "pk": 651,
  "fields": {
    "created": "2018-01-24T00:30:02.054Z",
    "modified": "2018-01-24T00:30:02.054Z",
    "text": "dammit ;D thanks",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:24:01Z",
    "origin_slack_event": 662
  }
},
{
  "model": "discussions.message",
  "pk": 652,
  "fields": {
    "created": "2018-01-24T00:30:02.058Z",
    "modified": "2018-01-24T00:30:02.058Z",
    "text": "<https://www.w3schools.com/cssref/css3_pr_order.asp>",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:22:35Z",
    "origin_slack_event": 663
  }
},
{
  "model": "discussions.message",
  "pk": 653,
  "fields": {
    "created": "2018-01-24T00:30:02.063Z",
    "modified": "2018-01-24T00:30:02.064Z",
    "text": "by default elements will go top to bottom, left to right",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:22:14Z",
    "origin_slack_event": 664
  }
},
{
  "model": "discussions.message",
  "pk": 654,
  "fields": {
    "created": "2018-01-24T00:30:02.067Z",
    "modified": "2018-01-24T00:30:02.067Z",
    "text": "probably 0",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:22:00Z",
    "origin_slack_event": 665
  }
},
{
  "model": "discussions.message",
  "pk": 655,
  "fields": {
    "created": "2018-01-24T00:30:02.070Z",
    "modified": "2018-01-24T00:30:02.071Z",
    "text": "what's the default of order?",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:21:59Z",
    "origin_slack_event": 666
  }
},
{
  "model": "discussions.message",
  "pk": 656,
  "fields": {
    "created": "2018-01-24T00:30:02.075Z",
    "modified": "2018-01-24T00:30:02.076Z",
    "text": "why? what's the default to make it then the last instead of first?",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:21:31Z",
    "origin_slack_event": 667
  }
},
{
  "model": "discussions.message",
  "pk": 657,
  "fields": {
    "created": "2018-01-24T00:30:02.079Z",
    "modified": "2018-01-24T00:30:02.079Z",
    "text": "yeah that was putting it on the right",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:21:25Z",
    "origin_slack_event": 668
  }
},
{
  "model": "discussions.message",
  "pk": 658,
  "fields": {
    "created": "2018-01-24T00:30:02.083Z",
    "modified": "2018-01-24T00:30:02.083Z",
    "text": "order:1 was it",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:21:13Z",
    "origin_slack_event": 669
  }
},
{
  "model": "discussions.message",
  "pk": 659,
  "fields": {
    "created": "2018-01-24T00:30:02.086Z",
    "modified": "2018-01-24T00:30:02.086Z",
    "text": "ok I think I got it lol",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:21:08Z",
    "origin_slack_event": 670
  }
},
{
  "model": "discussions.message",
  "pk": 660,
  "fields": {
    "created": "2018-01-24T00:30:02.089Z",
    "modified": "2018-01-24T00:30:02.090Z",
    "text": "gotcha let me try a few things",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:19:35Z",
    "origin_slack_event": 671
  }
},
{
  "model": "discussions.message",
  "pk": 661,
  "fields": {
    "created": "2018-01-24T00:30:02.093Z",
    "modified": "2018-01-24T00:30:02.093Z",
    "text": "how do I place the header like I said, and the lamp to still be there on the same place",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:16:46Z",
    "origin_slack_event": 672
  }
},
{
  "model": "discussions.message",
  "pk": 662,
  "fields": {
    "created": "2018-01-24T00:30:02.097Z",
    "modified": "2018-01-24T00:30:02.097Z",
    "text": "I added flex-flow: row wrap; to body",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:16:22Z",
    "origin_slack_event": 673
  }
},
{
  "model": "discussions.message",
  "pk": 663,
  "fields": {
    "created": "2018-01-24T00:30:02.108Z",
    "modified": "2018-01-24T00:30:02.108Z",
    "text": "sry for later answer, guess I switched when the msg came so I didn't get a notification",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:14:22Z",
    "origin_slack_event": 674
  }
},
{
  "model": "discussions.message",
  "pk": 664,
  "fields": {
    "created": "2018-01-24T00:30:02.130Z",
    "modified": "2018-01-24T00:30:02.130Z",
    "text": "no, I want to position the header now in middle top, with margin left/right lets say 300px",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:13:59Z",
    "origin_slack_event": 675
  }
},
{
  "model": "discussions.message",
  "pk": 665,
  "fields": {
    "created": "2018-01-24T00:30:02.141Z",
    "modified": "2018-01-24T00:30:02.141Z",
    "text": "are you trying to center the lamp?",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:09:20Z",
    "origin_slack_event": 676
  }
},
{
  "model": "discussions.message",
  "pk": 666,
  "fields": {
    "created": "2018-01-24T00:30:02.145Z",
    "modified": "2018-01-24T00:30:02.145Z",
    "text": "because the body is full screen: you've set the background-color of body to be grey, and grey fills the whole screen",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:08:54Z",
    "origin_slack_event": 677
  }
},
{
  "model": "discussions.message",
  "pk": 667,
  "fields": {
    "created": "2018-01-24T00:30:02.148Z",
    "modified": "2018-01-24T00:30:02.149Z",
    "text": "what are you referring to when you say \"body\"?",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:08:33Z",
    "origin_slack_event": 678
  }
},
{
  "model": "discussions.message",
  "pk": 668,
  "fields": {
    "created": "2018-01-24T00:30:02.152Z",
    "modified": "2018-01-24T00:30:02.152Z",
    "text": "I am guessing position of other elements affecting it?",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:04:17Z",
    "origin_slack_event": 679
  }
},
{
  "model": "discussions.message",
  "pk": 669,
  "fields": {
    "created": "2018-01-24T00:30:02.156Z",
    "modified": "2018-01-24T00:30:02.156Z",
    "text": "what is restricting it?",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:04:03Z",
    "origin_slack_event": 680
  }
},
{
  "model": "discussions.message",
  "pk": 670,
  "fields": {
    "created": "2018-01-24T00:30:02.166Z",
    "modified": "2018-01-24T00:30:02.166Z",
    "text": "I am learning css and how to position elements around, why is the body not full screen",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:03:59Z",
    "origin_slack_event": 681
  }
},
{
  "model": "discussions.message",
  "pk": 671,
  "fields": {
    "created": "2018-01-24T00:30:02.182Z",
    "modified": "2018-01-24T00:30:02.182Z",
    "text": "I didn't put the js so some parts are missing",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:03:28Z",
    "origin_slack_event": 682
  }
},
{
  "model": "discussions.message",
  "pk": 672,
  "fields": {
    "created": "2018-01-24T00:30:02.190Z",
    "modified": "2018-01-24T00:30:02.191Z",
    "text": "not sure why the lines at the \"lamp\" go outside, it's normal on ff/chrome for me",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:03:18Z",
    "origin_slack_event": 683
  }
},
{
  "model": "discussions.message",
  "pk": 673,
  "fields": {
    "created": "2018-01-24T00:30:02.194Z",
    "modified": "2018-01-24T00:30:02.195Z",
    "text": "<https://jsfiddle.net/jfkg6o0y/2/>",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T15:02:57Z",
    "origin_slack_event": 684
  }
},
{
  "model": "discussions.message",
  "pk": 674,
  "fields": {
    "created": "2018-01-24T00:30:02.198Z",
    "modified": "2018-01-24T00:30:02.198Z",
    "text": "updated <https://jsfiddle.net/jfkg6o0y/1/>, still looks \"full screen\" to me? the background color is the entire screen. are you expecting some kind of different alignment?",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T15:02:17Z",
    "origin_slack_event": 685
  }
},
{
  "model": "discussions.message",
  "pk": 675,
  "fields": {
    "created": "2018-01-24T00:30:02.201Z",
    "modified": "2018-01-24T00:30:02.202Z",
    "text": "<https://gist.github.com/adkuca/8a8bbef1949b0d7edb2c153067c37e25>",
    "session": 34,
    "author": 46,
    "time": "2018-01-09T14:59:06Z",
    "origin_slack_event": 686
  }
},
{
  "model": "discussions.message",
  "pk": 676,
  "fields": {
    "created": "2018-01-24T00:30:02.205Z",
    "modified": "2018-01-24T00:30:02.205Z",
    "text": "<https://jsfiddle.net/jfkg6o0y/>",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T14:57:34Z",
    "origin_slack_event": 687
  }
},
{
  "model": "discussions.message",
  "pk": 677,
  "fields": {
    "created": "2018-01-24T00:30:02.209Z",
    "modified": "2018-01-24T00:30:02.209Z",
    "text": "hmm, could you elaborate what you mean by full screen? if i put that code on this jsfiddle, it looks full screen",
    "session": 34,
    "author": 112,
    "time": "2018-01-09T14:57:33Z",
    "origin_slack_event": 688
  }
},
{
  "model": "discussions.message",
  "pk": 678,
  "fields": {
    "created": "2018-01-24T00:30:02.212Z",
    "modified": "2018-01-24T00:30:02.212Z",
    "text": "Title: Css basic, what affects the &lt;body&gt; to act this way?\nTags: css\nDescription: \nbody {\n    display: flex;\n    margin: 0;\n    text-align: center;\n    background: #424242;\n}\nthat's the css, and the dimensions are 1580\u00d7222, what could be affecting it to not be full screen",
    "session": 34,
    "author": 71,
    "time": "2018-01-09T14:55:42Z",
    "origin_slack_event": 689
  }
},
{
  "model": "discussions.message",
  "pk": 679,
  "fields": {
    "created": "2018-01-24T00:30:02.667Z",
    "modified": "2018-01-24T00:30:02.667Z",
    "text": "Going to close this one for now. Will reopen if we run into it again!",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T20:57:25Z",
    "origin_slack_event": 690
  }
},
{
  "model": "discussions.message",
  "pk": 680,
  "fields": {
    "created": "2018-01-24T00:30:02.671Z",
    "modified": "2018-01-24T00:30:02.671Z",
    "text": "okay",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T20:26:01Z",
    "origin_slack_event": 691
  }
},
{
  "model": "discussions.message",
  "pk": 681,
  "fields": {
    "created": "2018-01-24T00:30:02.674Z",
    "modified": "2018-01-24T00:30:02.674Z",
    "text": "Yeah we\u2019ve been testing it there. I\u2019ll try to see if we can replicate the issue we had here!",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T20:25:46Z",
    "origin_slack_event": 692
  }
},
{
  "model": "discussions.message",
  "pk": 682,
  "fields": {
    "created": "2018-01-24T00:30:02.678Z",
    "modified": "2018-01-24T00:30:02.678Z",
    "text": "could we test there?",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:59:35Z",
    "origin_slack_event": 693
  }
},
{
  "model": "discussions.message",
  "pk": 683,
  "fields": {
    "created": "2018-01-24T00:30:02.682Z",
    "modified": "2018-01-24T00:30:02.682Z",
    "text": "We have a staging environment that runs on a separate slack",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:58:51Z",
    "origin_slack_event": 694
  }
},
{
  "model": "discussions.message",
  "pk": 684,
  "fields": {
    "created": "2018-01-24T00:30:02.685Z",
    "modified": "2018-01-24T00:30:02.685Z",
    "text": "I dont think we have a sandbox?",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:58:37Z",
    "origin_slack_event": 695
  }
},
{
  "model": "discussions.message",
  "pk": 685,
  "fields": {
    "created": "2018-01-24T00:30:02.689Z",
    "modified": "2018-01-24T00:30:02.689Z",
    "text": "Yeah that\u2019s a good idea",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:58:21Z",
    "origin_slack_event": 696
  }
},
{
  "model": "discussions.message",
  "pk": 686,
  "fields": {
    "created": "2018-01-24T00:30:02.693Z",
    "modified": "2018-01-24T00:30:02.694Z",
    "text": "for the moment at least",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:58:13Z",
    "origin_slack_event": 697
  }
},
{
  "model": "discussions.message",
  "pk": 687,
  "fields": {
    "created": "2018-01-24T00:30:02.698Z",
    "modified": "2018-01-24T00:30:02.698Z",
    "text": "I think you should just add another log.debug line to also record all self.* variables values",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:58:01Z",
    "origin_slack_event": 698
  }
},
{
  "model": "discussions.message",
  "pk": 688,
  "fields": {
    "created": "2018-01-24T00:30:02.703Z",
    "modified": "2018-01-24T00:30:02.703Z",
    "text": "doesnt make sense at all",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:57:35Z",
    "origin_slack_event": 699
  }
},
{
  "model": "discussions.message",
  "pk": 689,
  "fields": {
    "created": "2018-01-24T00:30:02.709Z",
    "modified": "2018-01-24T00:30:02.709Z",
    "text": "and then it failed ~40m later with <#C8R15HXSS|session-22>",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:48:58Z",
    "origin_slack_event": 700
  }
},
{
  "model": "discussions.message",
  "pk": 690,
  "fields": {
    "created": "2018-01-24T00:30:02.715Z",
    "modified": "2018-01-24T00:30:02.715Z",
    "text": "this morning",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:48:50Z",
    "origin_slack_event": 701
  }
},
{
  "model": "discussions.message",
  "pk": 691,
  "fields": {
    "created": "2018-01-24T00:30:02.718Z",
    "modified": "2018-01-24T00:30:02.719Z",
    "text": "the original successful post was <#C8PEFSMAL|session-21>",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:48:47Z",
    "origin_slack_event": 702
  }
},
{
  "model": "discussions.message",
  "pk": 692,
  "fields": {
    "created": "2018-01-24T00:30:02.722Z",
    "modified": "2018-01-24T00:30:02.722Z",
    "text": "you mean this one?",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:48:11Z",
    "origin_slack_event": 703
  }
},
{
  "model": "discussions.message",
  "pk": 693,
  "fields": {
    "created": "2018-01-24T00:30:02.727Z",
    "modified": "2018-01-24T00:30:02.727Z",
    "text": "&gt; They\u2019re hardcoded in a JSON config file and confirmed that they are correct because of the original successful post",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:48:07Z",
    "origin_slack_event": 704
  }
},
{
  "model": "discussions.message",
  "pk": 694,
  "fields": {
    "created": "2018-01-24T00:30:02.731Z",
    "modified": "2018-01-24T00:30:02.731Z",
    "text": "the hell it is",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:43:15Z",
    "origin_slack_event": 705
  }
},
{
  "model": "discussions.message",
  "pk": 695,
  "fields": {
    "created": "2018-01-24T00:30:02.740Z",
    "modified": "2018-01-24T00:30:02.741Z",
    "text": "But this issue is so strange",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:42:34Z",
    "origin_slack_event": 706
  }
},
{
  "model": "discussions.message",
  "pk": 696,
  "fields": {
    "created": "2018-01-24T00:30:02.756Z",
    "modified": "2018-01-24T00:30:02.756Z",
    "text": "I think it was offline then. If it happens again moving forward, then it\u2019s definitely a bug.",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:42:26Z",
    "origin_slack_event": 707
  }
},
{
  "model": "discussions.message",
  "pk": 697,
  "fields": {
    "created": "2018-01-24T00:30:02.765Z",
    "modified": "2018-01-24T00:30:02.765Z",
    "text": "Ah, was that when the bot was down <@U8CSK1KBQ>?",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:41:42Z",
    "origin_slack_event": 708
  }
},
{
  "model": "discussions.message",
  "pk": 698,
  "fields": {
    "created": "2018-01-24T00:30:02.769Z",
    "modified": "2018-01-24T00:30:02.770Z",
    "text": "it was done by <@U8CSK1KBQ> manually",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:41:11Z",
    "origin_slack_event": 709
  }
},
{
  "model": "discussions.message",
  "pk": 699,
  "fields": {
    "created": "2018-01-24T00:30:02.773Z",
    "modified": "2018-01-24T00:30:02.773Z",
    "text": "ok, so I just see that the issue I posted yesterday was also not picked by clippy for automatic session creation",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:41:04Z",
    "origin_slack_event": 710
  }
},
{
  "model": "discussions.message",
  "pk": 700,
  "fields": {
    "created": "2018-01-24T00:30:02.777Z",
    "modified": "2018-01-24T00:30:02.777Z",
    "text": "It should be me, tadas, jacob and clippy",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:40:45Z",
    "origin_slack_event": 711
  }
},
{
  "model": "discussions.message",
  "pk": 701,
  "fields": {
    "created": "2018-01-24T00:30:02.782Z",
    "modified": "2018-01-24T00:30:02.782Z",
    "text": "No I don\u2019t believe so",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:40:31Z",
    "origin_slack_event": 712
  }
},
{
  "model": "discussions.message",
  "pk": 702,
  "fields": {
    "created": "2018-01-24T00:30:02.785Z",
    "modified": "2018-01-24T00:30:02.786Z",
    "text": "am I an admin user?",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:40:09Z",
    "origin_slack_event": 713
  }
},
{
  "model": "discussions.message",
  "pk": 703,
  "fields": {
    "created": "2018-01-24T00:30:02.789Z",
    "modified": "2018-01-24T00:30:02.789Z",
    "text": "I was worried that they may have been touched elsewhere in the code but confirmed that\u2019s not the case",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:38:23Z",
    "origin_slack_event": 714
  }
},
{
  "model": "discussions.message",
  "pk": 704,
  "fields": {
    "created": "2018-01-24T00:30:02.793Z",
    "modified": "2018-01-24T00:30:02.793Z",
    "text": "There\u2019s one copy running on a container in AWS\u2019s ECS",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:36:55Z",
    "origin_slack_event": 715
  }
},
{
  "model": "discussions.message",
  "pk": 705,
  "fields": {
    "created": "2018-01-24T00:30:02.797Z",
    "modified": "2018-01-24T00:30:02.797Z",
    "text": "They\u2019re hardcoded in a JSON config file and confirmed that they are correct because of the original successful post",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:36:40Z",
    "origin_slack_event": 716
  }
},
{
  "model": "discussions.message",
  "pk": 706,
  "fields": {
    "created": "2018-01-24T00:30:02.801Z",
    "modified": "2018-01-24T00:30:02.801Z",
    "text": "are you sure there arent multiple copies of code? and these values you posted are hardcoded?",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:35:56Z",
    "origin_slack_event": 717
  }
},
{
  "model": "discussions.message",
  "pk": 707,
  "fields": {
    "created": "2018-01-24T00:30:02.805Z",
    "modified": "2018-01-24T00:30:02.805Z",
    "text": "whole coding logic and programming language is at stake",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:27:08Z",
    "origin_slack_event": 718
  }
},
{
  "model": "discussions.message",
  "pk": 708,
  "fields": {
    "created": "2018-01-24T00:30:02.809Z",
    "modified": "2018-01-24T00:30:02.809Z",
    "text": "this doesnt seem right",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:26:55Z",
    "origin_slack_event": 719
  }
},
{
  "model": "discussions.message",
  "pk": 709,
  "fields": {
    "created": "2018-01-24T00:30:02.813Z",
    "modified": "2018-01-24T00:30:02.813Z",
    "text": "`self.HELP_CHANNEL = \"C8BHN5A81\"`",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:19:14Z",
    "origin_slack_event": 720
  }
},
{
  "model": "discussions.message",
  "pk": 710,
  "fields": {
    "created": "2018-01-24T00:30:02.817Z",
    "modified": "2018-01-24T00:30:02.817Z",
    "text": "`self.ADMIN_USERS = [\"U8C2LGL7N\", \"U8C281TT6\", \"U8CSK1KBQ\", \"U8F0WTEKG\"]`",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:18:58Z",
    "origin_slack_event": 721
  }
},
{
  "model": "discussions.message",
  "pk": 711,
  "fields": {
    "created": "2018-01-24T00:30:02.822Z",
    "modified": "2018-01-24T00:30:02.822Z",
    "text": "Sure",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T19:18:28Z",
    "origin_slack_event": 722
  }
},
{
  "model": "discussions.message",
  "pk": 712,
  "fields": {
    "created": "2018-01-24T00:30:02.827Z",
    "modified": "2018-01-24T00:30:02.827Z",
    "text": "<@U8C2LGL7N> I know it may sound stupid, but could you post the values of `self.HELP_CHANNEL` and `self.ADMIN_USERS`",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:18:16Z",
    "origin_slack_event": 723
  }
},
{
  "model": "discussions.message",
  "pk": 713,
  "fields": {
    "created": "2018-01-24T00:30:02.830Z",
    "modified": "2018-01-24T00:30:02.831Z",
    "text": "okay",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:10:55Z",
    "origin_slack_event": 724
  }
},
{
  "model": "discussions.message",
  "pk": 714,
  "fields": {
    "created": "2018-01-24T00:30:02.834Z",
    "modified": "2018-01-24T00:30:02.834Z",
    "text": "i couldn't reproduce in a local interpreter",
    "session": 35,
    "author": 112,
    "time": "2018-01-09T19:10:48Z",
    "origin_slack_event": 725
  }
},
{
  "model": "discussions.message",
  "pk": 715,
  "fields": {
    "created": "2018-01-24T00:30:02.837Z",
    "modified": "2018-01-24T00:30:02.837Z",
    "text": "his topic was why was that evaluating to False",
    "session": 35,
    "author": 112,
    "time": "2018-01-09T19:10:41Z",
    "origin_slack_event": 726
  }
},
{
  "model": "discussions.message",
  "pk": 716,
  "fields": {
    "created": "2018-01-24T00:30:02.841Z",
    "modified": "2018-01-24T00:30:02.841Z",
    "text": "yeah indeed, but that's not what the error was in Will's post",
    "session": 35,
    "author": 112,
    "time": "2018-01-09T19:10:31Z",
    "origin_slack_event": 727
  }
},
{
  "model": "discussions.message",
  "pk": 717,
  "fields": {
    "created": "2018-01-24T00:30:02.845Z",
    "modified": "2018-01-24T00:30:02.845Z",
    "text": "True and True and True and True",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:10:19Z",
    "origin_slack_event": 728
  }
},
{
  "model": "discussions.message",
  "pk": 718,
  "fields": {
    "created": "2018-01-24T00:30:02.848Z",
    "modified": "2018-01-24T00:30:02.848Z",
    "text": "<@U8C281TT6> your code seems to be outputting correct result",
    "session": 35,
    "author": 96,
    "time": "2018-01-09T19:10:09Z",
    "origin_slack_event": 729
  }
},
{
  "model": "discussions.message",
  "pk": 719,
  "fields": {
    "created": "2018-01-24T00:30:02.851Z",
    "modified": "2018-01-24T00:30:02.852Z",
    "text": "Makes no sense:\n```\n&gt;&gt;&gt; class obj:\n...     pass\n... \n&gt;&gt;&gt; self = obj()\n&gt;&gt;&gt; self.BOT_ID = 'some'\n&gt;&gt;&gt; self.HELP_CHANNEL = 'U8NFUSKM0'\n&gt;&gt;&gt; output = {'type': 'message', 'channel': 'C8BHN5A81', 'user': 'U8NFUSKM0', 'text': 'Title: Css &amp;lt;hr&amp;gt; inside elements, loading displacement?\\nTags: css &amp;lt;hr&amp;gt; line\\nDescription:\\nWhen I load it in chrome/firefox it looks normal, but while loading you can see the lines of the \"grid\"/\"lamp\" load for a sec outside on the left\\nWhen you look at this snipped and run it, it\\'s outside\\ngoing into dev tools, recheck any code that gives it some position and it goes back to normal, why? how to fix this?\\n&lt;https://jsfiddle.net/jfkg6o0y/2/&gt;', 'ts': '1515512356.000208', 'source_team': 'T8C26RNPN', 'team': 'T8C26RNPN'}\n&gt;&gt;&gt; print(output and 'text' in output and 'user' in output and output['user'] != 'user-id')\nTrue\n``` :disappointed:",
    "session": 35,
    "author": 112,
    "time": "2018-01-09T16:40:07Z",
    "origin_slack_event": 730
  }
},
{
  "model": "discussions.message",
  "pk": 720,
  "fields": {
    "created": "2018-01-24T00:30:02.855Z",
    "modified": "2018-01-24T00:30:02.855Z",
    "text": "some more of the relevant code, right?: ```\n    def route_event(self, output):\n        \"\"\"\n        This handles the logic for determining whether or not to react to an event.\n        If the event is not a message or has no user, we ignore it. If the event is\n        a message in the help channel and not from an admin, we determine whether\n        to delete it or create a new help session. If the event is an IM to the bot,\n        we route it to the route_bot_im function. Otherwise, we ignore the message.\n        \"\"\"\n        if output and 'text' in output and 'user' in output and output['user'] != self.BOT_ID:\n            if output['channel'] == self.HELP_CHANNEL and output['user'] not in self.ADMIN_USERS:\n                if self.is_valid_help_message(output):\n                    <http://self.logger.info|self.logger.info>('Valid help message. Sending message to new session handler.')\n                    self.create_new_session(output['text'], output['user'], output['channel'], output['ts'])\n                else:\n                    <http://self.logger.info|self.logger.info>('Invalid help message. Deleting message and notifying sender.')\n                    self.delete_and_notify(output['text'], output['user'], output['channel'], output['ts'],\n                                           self.HELP_CHANNEL_ERROR)\n            else:\n                conversation_info = self.client.api_call('<http://conversations.info|conversations.info>', channel=output['channel'])\n                if conversation_info['channel']['is_im']:\n                    self.logger.debug('Valid message. Sending message to IM handler.')\n                    self.route_bot_im(output['text'], output['user'], output['channel'], output['ts'])\n                elif ('thread_ts' not in output and self.database_wrapper.is_channel_closed(output['channel']) and\n                      output['user'] not in self.ADMIN_USERS):\n                    self.logger.debug('Invalid message. Channel is closed. Sending error message.')\n                    self.delete_and_notify(output['text'], output['user'], output['channel'], output['ts'],\n                                           self.CLOSED_CHANNEL_ERROR)\n                else:\n                    self.logger.debug('Invalid message. Ignoring message.')\n                    self.logger.debug(output)\n        elif output and 'type' in output and 'reaction_added' == output['type'] and \\\n                'slack_call' == output['reaction'] and 'item_user' in output and self.BOT_ID == output['item_user']:\n            # When someone reacts to one of the bot's message with :slack_call:\n            self.initiate_referral(output['user'])\n        elif output and 'type' in output and 'team_join' == output['type']:\n            # When someone joins the team for the first time\n            self.onboard_user(output['user']['id'])\n        else:\n            self.logger.debug('Ignoring event')\n```",
    "session": 35,
    "author": 112,
    "time": "2018-01-09T16:20:09Z",
    "origin_slack_event": 731
  }
},
{
  "model": "discussions.message",
  "pk": 721,
  "fields": {
    "created": "2018-01-24T00:30:02.859Z",
    "modified": "2018-01-24T00:30:02.860Z",
    "text": "Line 10 and Lines 29-30*",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T16:13:02Z",
    "origin_slack_event": 732
  }
},
{
  "model": "discussions.message",
  "pk": 722,
  "fields": {
    "created": "2018-01-24T00:30:02.864Z",
    "modified": "2018-01-24T00:30:02.864Z",
    "text": "<@U8C2LGL7N> uploaded a file: <https://codeclippy.slack.com/files/U8C2LGL7N/F8PL30D5F/snippet.py|snippet>",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T16:12:27Z",
    "origin_slack_event": 733
  }
},
{
  "model": "discussions.message",
  "pk": 723,
  "fields": {
    "created": "2018-01-24T00:30:02.868Z",
    "modified": "2018-01-24T00:30:02.868Z",
    "text": "<@U8C2LGL7N> uploaded a file: <https://codeclippy.slack.com/files/U8C2LGL7N/F8Q3P7ZDZ/screen_shot_2018-01-09_at_10.48.42_am.png|Logs>",
    "session": 35,
    "author": 117,
    "time": "2018-01-09T16:10:12Z",
    "origin_slack_event": 734
  }
},
{
  "model": "discussions.message",
  "pk": 724,
  "fields": {
    "created": "2018-01-24T00:30:02.871Z",
    "modified": "2018-01-24T00:30:02.872Z",
    "text": "*Title*: Error when using the Slack API\n*Tags*: slack, python\n*Description*: This is an error on my end (not Slack\u2019s). We\u2019re monitoring messages through the Slack event firehose. Attaching two screenshots. One is of the logs and one is of the relevant source code. It seems that the if statement on line 218 was not true, which resulted in the logging statements on lines 237-238. However, the channel ID of the message equals the HELP_CHANNEL and the user is not in ADMIN_USERS. Any help here would be much appreciated.",
    "session": 35,
    "author": 71,
    "time": "2018-01-09T16:09:47Z",
    "origin_slack_event": 735
  }
},
{
  "model": "discussions.message",
  "pk": 725,
  "fields": {
    "created": "2018-01-24T00:30:03.140Z",
    "modified": "2018-01-24T00:30:03.140Z",
    "text": "<@U8CSK1KBQ> uploaded a file: <https://codeclippy.slack.com/files/U8CSK1KBQ/F8RV68V9U/-.txt|Untitled>",
    "session": 36,
    "author": 76,
    "time": "2018-01-11T00:27:40Z",
    "origin_slack_event": 737
  }
},
{
  "model": "discussions.message",
  "pk": 726,
  "fields": {
    "created": "2018-01-24T00:30:03.144Z",
    "modified": "2018-01-24T00:30:03.144Z",
    "text": "OP found a solution, check it out:",
    "session": 36,
    "author": 76,
    "time": "2018-01-11T00:27:29Z",
    "origin_slack_event": 738
  }
},
{
  "model": "discussions.message",
  "pk": 727,
  "fields": {
    "created": "2018-01-24T00:30:03.147Z",
    "modified": "2018-01-24T00:30:03.147Z",
    "text": "Title: Selecting DOM elements\nTags: DOM, js\nDescription: \nThe 5th line is not finished in js.",
    "session": 36,
    "author": 71,
    "time": "2018-01-10T22:43:15Z",
    "origin_slack_event": 739
  }
},
{
  "model": "discussions.message",
  "pk": 728,
  "fields": {
    "created": "2018-01-24T00:30:03.605Z",
    "modified": "2018-01-24T00:30:03.605Z",
    "text": "Talked about this a little offline -- general conclusion is that the concept of \"settings\" likely belongs in the model as neither a whole entity nor value object. e.g. If you have a setting like `administrator_id` or `is_public`, `administrator_id` should be an association (relationship) between your `group` and `user` entities, and `is_public` is an attribute (value) on `group`",
    "session": 37,
    "author": 112,
    "time": "2018-01-15T17:58:39Z",
    "origin_slack_event": 740
  }
},
{
  "model": "discussions.message",
  "pk": 729,
  "fields": {
    "created": "2018-01-24T00:30:03.610Z",
    "modified": "2018-01-24T00:30:03.610Z",
    "text": "*Title*: Domain design of settings\n*Tags*: DDD, design\n*Description*: We have a domain that includes an entity called team. What\u2019s the best way to model the concept of settings for a team? We currently have a team_settings table. Issues with this our two-fold. 1) What\u2019s the plural of settings? 2) It doesn\u2019t have an inherent identity - so should it be an entity?",
    "session": 37,
    "author": 71,
    "time": "2018-01-12T20:39:53Z",
    "origin_slack_event": 741
  }
},
{
  "model": "discussions.message",
  "pk": 730,
  "fields": {
    "created": "2018-01-24T00:30:03.856Z",
    "modified": "2018-01-24T00:30:03.856Z",
    "text": "nice :thumbsup:",
    "session": 38,
    "author": 112,
    "time": "2018-01-16T17:59:15Z",
    "origin_slack_event": 743
  }
},
{
  "model": "discussions.message",
  "pk": 731,
  "fields": {
    "created": "2018-01-24T00:30:03.861Z",
    "modified": "2018-01-24T00:30:03.861Z",
    "text": "and now I can build it as I want",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:59:07Z",
    "origin_slack_event": 744
  }
},
{
  "model": "discussions.message",
  "pk": 732,
  "fields": {
    "created": "2018-01-24T00:30:03.864Z",
    "modified": "2018-01-24T00:30:03.864Z",
    "text": "so I know see everything in the object",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:58:55Z",
    "origin_slack_event": 745
  }
},
{
  "model": "discussions.message",
  "pk": 733,
  "fields": {
    "created": "2018-01-24T00:30:03.868Z",
    "modified": "2018-01-24T00:30:03.868Z",
    "text": "I finally did field.__dict__",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:58:43Z",
    "origin_slack_event": 746
  }
},
{
  "model": "discussions.message",
  "pk": 734,
  "fields": {
    "created": "2018-01-24T00:30:03.871Z",
    "modified": "2018-01-24T00:30:03.872Z",
    "text": "ah",
    "session": 38,
    "author": 112,
    "time": "2018-01-16T17:58:17Z",
    "origin_slack_event": 747
  }
},
{
  "model": "discussions.message",
  "pk": 735,
  "fields": {
    "created": "2018-01-24T00:30:03.876Z",
    "modified": "2018-01-24T00:30:03.876Z",
    "text": "it's a string, so i assume it's not supposed to go in `&lt;input value={field.label.text}&gt;`",
    "session": 38,
    "author": 112,
    "time": "2018-01-16T17:58:16Z",
    "origin_slack_event": 748
  }
},
{
  "model": "discussions.message",
  "pk": 736,
  "fields": {
    "created": "2018-01-24T00:30:03.879Z",
    "modified": "2018-01-24T00:30:03.880Z",
    "text": "ok actually theres's a data attrivute",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:58:08Z",
    "origin_slack_event": 749
  }
},
{
  "model": "discussions.message",
  "pk": 737,
  "fields": {
    "created": "2018-01-24T00:30:03.883Z",
    "modified": "2018-01-24T00:30:03.884Z",
    "text": "to clarify, where are you putting field.label.text?",
    "session": 38,
    "author": 112,
    "time": "2018-01-16T17:57:53Z",
    "origin_slack_event": 750
  }
},
{
  "model": "discussions.message",
  "pk": 738,
  "fields": {
    "created": "2018-01-24T00:30:03.887Z",
    "modified": "2018-01-24T00:30:03.887Z",
    "text": "you should be able to do field.value ...",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:54:48Z",
    "origin_slack_event": 751
  }
},
{
  "model": "discussions.message",
  "pk": 739,
  "fields": {
    "created": "2018-01-24T00:30:03.891Z",
    "modified": "2018-01-24T00:30:03.892Z",
    "text": "However I still think there is something quite not right with field.label.text",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:54:05Z",
    "origin_slack_event": 752
  }
},
{
  "model": "discussions.message",
  "pk": 740,
  "fields": {
    "created": "2018-01-24T00:30:03.895Z",
    "modified": "2018-01-24T00:30:03.895Z",
    "text": "<@U8C281TT6>  thanks you are right regarding 1 and regarding 2 there is indeed a checked attribute on the field",
    "session": 38,
    "author": 62,
    "time": "2018-01-16T17:53:35Z",
    "origin_slack_event": 753
  }
},
{
  "model": "discussions.message",
  "pk": 741,
  "fields": {
    "created": "2018-01-24T00:30:03.899Z",
    "modified": "2018-01-24T00:30:03.900Z",
    "text": "regarding #2, i've been looking at their widgets' source code (<https://github.com/wtforms/wtforms/blob/b5dd52d347cfd5c05897c35f0751541956679706/wtforms/widgets/core.py>) to see how they do it. if you look at `RadioInput`, they have an attribute on `field` called checked. i'm a little unclear as to how to manipulate `field`, but maybe check it out in your interpreter and see if the state you need is already being passed around?",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T17:55:53Z",
    "origin_slack_event": 754
  }
},
{
  "model": "discussions.message",
  "pk": 742,
  "fields": {
    "created": "2018-01-24T00:30:03.904Z",
    "modified": "2018-01-24T00:30:03.904Z",
    "text": "regarding #1, you should be able to do `field.label.text` instead",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T17:47:12Z",
    "origin_slack_event": 755
  }
},
{
  "model": "discussions.message",
  "pk": 743,
  "fields": {
    "created": "2018-01-24T00:30:03.908Z",
    "modified": "2018-01-24T00:30:03.908Z",
    "text": "<@U8C281TT6> yes I have seen this one and actually I have managed to go one step further but it is still not quite good :\n```class SettingsForm(FlaskForm):\n    contact_emails = SelectMultipleField(\n        'Contact emails',\n        [validators.Required(\n        message=\"You should specify at least one contact email.\")],\n        choices=[],\n        option_widget= ToggleWidget(),\n        widget=widgets.ListWidget(prefix_label=False)\n    )\n    add_email = EmailField(\n        'Email Address', [validators.optional(), validators.Email()])```\nand this is my customwidget :\n```class ToggleButtonWidget(object):\n    def __call__(self, field):\n        html = '&lt;label class=\"switch\"&gt;&lt;input type=\"checkbox\" id={} name={} value={}&gt;&lt;span class=\"slider round\"&gt;&lt;/span&gt;&lt;/label&gt;'.format(field.id, field.name, field.label.__dict__['text'])\n        return HTMLString(html)```\n\nHowever they are still several problems here :\n1) I use `field.label.__dict__['text']  to set the value of my input checkbox (the field object from wtforms has no attribute value), which is quite dirty.\n2) I have no way to access the state of my input checkbox (meaning if it should be checked or not). This state is contained in the parent form object and I cant figure out how to pass that state to this `option_widget` within `SelectMultipleField`",
    "session": 38,
    "author": 62,
    "time": "2018-01-15T16:41:44Z",
    "origin_slack_event": 756
  }
},
{
  "model": "discussions.message",
  "pk": 744,
  "fields": {
    "created": "2018-01-24T00:30:03.912Z",
    "modified": "2018-01-24T00:30:03.912Z",
    "text": "```\ndef select_multi_checkbox(field, ul_class='', **kwargs):\n    kwargs.setdefault('type', 'checkbox')\n    field_id = kwargs.pop('id', field.id)\n    html = [u'&lt;ul %s&gt;' % html_params(id=field_id, class_=ul_class)]\n    for value, label, checked in field.iter_choices():\n        choice_id = u'%s-%s' % (field_id, value)\n        options = dict(kwargs, name=field.name, value=value, id=choice_id)\n        if checked:\n            options['checked'] = 'checked'\n        html.append(u'&lt;li&gt;&lt;input %s /&gt; ' % html_params(**options))\n        html.append(u'&lt;label for=\"%s\"&gt;%s&lt;/label&gt;&lt;/li&gt;' % (field_id, label))\n    html.append(u'&lt;/ul&gt;')\n    return u''.join(html)\n```",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T15:49:58Z",
    "origin_slack_event": 757
  }
},
{
  "model": "discussions.message",
  "pk": 745,
  "fields": {
    "created": "2018-01-24T00:30:03.916Z",
    "modified": "2018-01-24T00:30:03.916Z",
    "text": "that last code snippet looks not far off from what you're going for",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T15:49:53Z",
    "origin_slack_event": 758
  }
},
{
  "model": "discussions.message",
  "pk": 746,
  "fields": {
    "created": "2018-01-24T00:30:03.919Z",
    "modified": "2018-01-24T00:30:03.919Z",
    "text": "<https://wtforms.readthedocs.io/en/latest/widgets.html#custom-widgets>",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T15:49:19Z",
    "origin_slack_event": 759
  }
},
{
  "model": "discussions.message",
  "pk": 747,
  "fields": {
    "created": "2018-01-24T00:30:03.922Z",
    "modified": "2018-01-24T00:30:03.923Z",
    "text": "Hey have you looked at this?",
    "session": 38,
    "author": 112,
    "time": "2018-01-15T15:49:18Z",
    "origin_slack_event": 760
  }
},
{
  "model": "discussions.message",
  "pk": 748,
  "fields": {
    "created": "2018-01-24T00:30:03.926Z",
    "modified": "2018-01-24T00:30:03.926Z",
    "text": "I edited my mess in the main thread so im posting it again here",
    "session": 38,
    "author": 62,
    "time": "2018-01-15T07:18:27Z",
    "origin_slack_event": 761
  }
},
{
  "model": "discussions.message",
  "pk": 749,
  "fields": {
    "created": "2018-01-24T00:30:03.930Z",
    "modified": "2018-01-24T00:30:03.930Z",
    "text": "*Title*: creating a custom widget with flask wtforms\n*tags*: form, python, wtforms\n*Description*: I am strugling to find resources that explain how to create custom widget with wtforms. I want to display a list of toggle buttons. So far I ve been able to create a list of checkboxes with `SelectMultipleFields`:\n`class PrecisionForm(FlaskForm):`\n`phone_number = StringField('Phone number', [validators.Length(min=4, max=25)])`\n` contact_emails = SelectMultipleField(`\n` 'Contact emails',`\n` [at_least_one],`\n` choices=[],`\n` option_widget=widgets.CheckboxInput(),`\n`widget=widgets.ListWidget(prefix_label=False)`\n` )`\nbut now I want to modify my widget.CheckBoxInput() with my custom widget looking like :\n`&lt;label class='switch'&gt; &lt;input type='checkbox'&gt;&lt;span class='slider round'&gt;&lt;/span&gt;&lt;/label&gt;`\nI would be very grateful if someone could explain step by step how to do that !",
    "session": 38,
    "author": 62,
    "time": "2018-01-15T07:17:49Z",
    "origin_slack_event": 762
  }
},
{
  "model": "discussions.message",
  "pk": 750,
  "fields": {
    "created": "2018-01-24T00:30:03.933Z",
    "modified": "2018-01-24T00:30:03.933Z",
    "text": "*Title*: creating a custom widget with flask wtforms\n*tags*: form, python, wtforms\n*Description*: I am strugling to find resources that explain how to create custom widget with wtforms. I want to display a list of toggle buttons. So far I ve been able to create a list of checkboxes with `SelectMultipleFields`:\n`class PrecisionForm(FlaskForm):\n    phone_number     = StringField('Phone number', [validators.Length(min=4, max=25)])\n    contact_emails = SelectMultipleField(\n            'Contact emails',\n            [at_least_one],\n            choices=[],\n            option_widget=widgets.CheckboxInput(),\n            widget=widgets.ListWidget(prefix_label=False)\n            )\n`",
    "session": 38,
    "author": 71,
    "time": "2018-01-14T12:17:09Z",
    "origin_slack_event": 763
  }
},
{
  "model": "discussions.message",
  "pk": 751,
  "fields": {
    "created": "2018-01-24T00:30:04.184Z",
    "modified": "2018-01-24T00:30:04.185Z",
    "text": "Think this is closable",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:04:51Z",
    "origin_slack_event": 766
  }
},
{
  "model": "discussions.message",
  "pk": 752,
  "fields": {
    "created": "2018-01-24T00:30:04.188Z",
    "modified": "2018-01-24T00:30:04.188Z",
    "text": "Gotcha, thx",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:04:41Z",
    "origin_slack_event": 767
  }
},
{
  "model": "discussions.message",
  "pk": 753,
  "fields": {
    "created": "2018-01-24T00:30:04.192Z",
    "modified": "2018-01-24T00:30:04.192Z",
    "text": "yeah event listening/manipulating the DOM is more straightforward with component-oriented frameworks like React and vue.js",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T19:03:23Z",
    "origin_slack_event": 768
  }
},
{
  "model": "discussions.message",
  "pk": 754,
  "fields": {
    "created": "2018-01-24T00:30:04.195Z",
    "modified": "2018-01-24T00:30:04.195Z",
    "text": "jQuery has 3 ways even, one is the normal way + e.target, second is the extra element parameter, and 3rd way is .delegation but element parameter on first place and event on 2nd (click)",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:03:13Z",
    "origin_slack_event": 769
  }
},
{
  "model": "discussions.message",
  "pk": 755,
  "fields": {
    "created": "2018-01-24T00:30:04.199Z",
    "modified": "2018-01-24T00:30:04.199Z",
    "text": "I should've just made it like this, 1 event listener, not every on each cell",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:01:31Z",
    "origin_slack_event": 770
  }
},
{
  "model": "discussions.message",
  "pk": 756,
  "fields": {
    "created": "2018-01-24T00:30:04.202Z",
    "modified": "2018-01-24T00:30:04.202Z",
    "text": "the reason was probably because I had already the table creation loop that pissed me off trying to get the variable out somehow",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:01:16Z",
    "origin_slack_event": 771
  }
},
{
  "model": "discussions.message",
  "pk": 757,
  "fields": {
    "created": "2018-01-24T00:30:04.207Z",
    "modified": "2018-01-24T00:30:04.208Z",
    "text": "you didn't knew all of the first 3? Well I trolled and put event listener on every cell in my project",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T19:00:41Z",
    "origin_slack_event": 772
  }
},
{
  "model": "discussions.message",
  "pk": 758,
  "fields": {
    "created": "2018-01-24T00:30:04.211Z",
    "modified": "2018-01-24T00:30:04.212Z",
    "text": "gotcha, not that i know of but i would have only known one of those myself without researching it :slightly_smiling_face:",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:59:00Z",
    "origin_slack_event": 773
  }
},
{
  "model": "discussions.message",
  "pk": 759,
  "fields": {
    "created": "2018-01-24T00:30:04.216Z",
    "modified": "2018-01-24T00:30:04.216Z",
    "text": "yep it does, I was just curious if there's more",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T18:58:08Z",
    "origin_slack_event": 774
  }
},
{
  "model": "discussions.message",
  "pk": 760,
  "fields": {
    "created": "2018-01-24T00:30:04.221Z",
    "modified": "2018-01-24T00:30:04.221Z",
    "text": "that works for me",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:55:48Z",
    "origin_slack_event": 775
  }
},
{
  "model": "discussions.message",
  "pk": 761,
  "fields": {
    "created": "2018-01-24T00:30:04.225Z",
    "modified": "2018-01-24T00:30:04.226Z",
    "text": "were you saying this doesn't work for you?\n```\ndocument.getElementById('pixel-canvas').addEventListener(\"click\", function(e) {\n   e.target.style.backgroundColor = \"red\";\n});\n```",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:55:44Z",
    "origin_slack_event": 776
  }
},
{
  "model": "discussions.message",
  "pk": 762,
  "fields": {
    "created": "2018-01-24T00:30:04.230Z",
    "modified": "2018-01-24T00:30:04.230Z",
    "text": "guess Ill drop it",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T18:53:54Z",
    "origin_slack_event": 777
  }
},
{
  "model": "discussions.message",
  "pk": 763,
  "fields": {
    "created": "2018-01-24T00:30:04.234Z",
    "modified": "2018-01-24T00:30:04.234Z",
    "text": "but I tried in the () id's, events, didn't work",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T18:53:49Z",
    "origin_slack_event": 778
  }
},
{
  "model": "discussions.message",
  "pk": 764,
  "fields": {
    "created": "2018-01-24T00:30:04.237Z",
    "modified": "2018-01-24T00:30:04.237Z",
    "text": "makes sense, that's what the doc in the link i sent says as well",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:53:18Z",
    "origin_slack_event": 779
  }
},
{
  "model": "discussions.message",
  "pk": 765,
  "fields": {
    "created": "2018-01-24T00:30:04.240Z",
    "modified": "2018-01-24T00:30:04.241Z",
    "text": "EventHandler is supposed to be the element/document",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T18:52:51Z",
    "origin_slack_event": 780
  }
},
{
  "model": "discussions.message",
  "pk": 766,
  "fields": {
    "created": "2018-01-24T00:30:04.244Z",
    "modified": "2018-01-24T00:30:04.245Z",
    "text": "i've also never written vanilla javascript code like that so maybe there's something similar I'm not aware of, but doesn't seem important to know",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:52:10Z",
    "origin_slack_event": 781
  }
},
{
  "model": "discussions.message",
  "pk": 767,
  "fields": {
    "created": "2018-01-24T00:30:04.248Z",
    "modified": "2018-01-24T00:30:04.248Z",
    "text": "yes, i don't think there's any such thing as an `EventHandler`",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:50:51Z",
    "origin_slack_event": 782
  }
},
{
  "model": "discussions.message",
  "pk": 768,
  "fields": {
    "created": "2018-01-24T00:30:04.252Z",
    "modified": "2018-01-24T00:30:04.252Z",
    "text": "so there's something wrong with the syntax from that link I posted?",
    "session": 39,
    "author": 46,
    "time": "2018-01-15T18:50:23Z",
    "origin_slack_event": 783
  }
},
{
  "model": "discussions.message",
  "pk": 769,
  "fields": {
    "created": "2018-01-24T00:30:04.255Z",
    "modified": "2018-01-24T00:30:04.255Z",
    "text": "generally i wouldn't spend much time thinking about browser cross compatibility, memory leaks, different ways to do things like this in vanilla JS or jquery. at this point in web development you wouldn't write any of this in a real codebase, so when you feel comfortable with the basics you should think about learning a robust framework like React or vue.js",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:37:10Z",
    "origin_slack_event": 784
  }
},
{
  "model": "discussions.message",
  "pk": 770,
  "fields": {
    "created": "2018-01-24T00:30:04.259Z",
    "modified": "2018-01-24T00:30:04.259Z",
    "text": "for vanilla JS, you might be looking for this <https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener>",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:35:33Z",
    "origin_slack_event": 785
  }
},
{
  "model": "discussions.message",
  "pk": 771,
  "fields": {
    "created": "2018-01-24T00:30:04.264Z",
    "modified": "2018-01-24T00:30:04.264Z",
    "text": "the two jquery ones look like they'd do the same thing, yeah",
    "session": 39,
    "author": 112,
    "time": "2018-01-15T18:35:15Z",
    "origin_slack_event": 786
  }
},
{
  "model": "discussions.message",
  "pk": 772,
  "fields": {
    "created": "2018-01-24T00:30:04.268Z",
    "modified": "2018-01-24T00:30:04.268Z",
    "text": "Title: event delegation js\nTags: delegation, js, event\nDescription: \nSo I wrote first 2 in jQuery, seems like it's the same.. just another way to write it right?\nthe 3rd is in vanilla, now I am researching more... and stumbled upon this:\n<https://lists.evolt.org/archive/Week-of-Mon-20090209/127339.html>\nI copy pasted the part that I didn't get to work, it's from 2009, is it too old or what's with the syntax?\n<https://jsfiddle.net/d8ak0edq/1/>",
    "session": 39,
    "author": 71,
    "time": "2018-01-15T18:27:15Z",
    "origin_slack_event": 787
  }
},
{
  "model": "discussions.message",
  "pk": 773,
  "fields": {
    "created": "2018-01-24T00:30:04.653Z",
    "modified": "2018-01-24T00:30:04.654Z",
    "text": "If you have any feedback or thoughts about what could make the experience better, feel free to pop over to <#C8HFH325T|feedback> :slightly_smiling_face:",
    "session": 40,
    "author": 76,
    "time": "2018-01-18T22:55:15Z",
    "origin_slack_event": 788
  }
},
{
  "model": "discussions.message",
  "pk": 774,
  "fields": {
    "created": "2018-01-24T00:30:04.657Z",
    "modified": "2018-01-24T00:30:04.657Z",
    "text": "For sure Adi, feel free to share the Typeform to anyone who might find it useful.",
    "session": 40,
    "author": 76,
    "time": "2018-01-18T22:54:58Z",
    "origin_slack_event": 789
  }
},
{
  "model": "discussions.message",
  "pk": 775,
  "fields": {
    "created": "2018-01-24T00:30:04.661Z",
    "modified": "2018-01-24T00:30:04.662Z",
    "text": "<@U8CSK1KBQ> Yup, will post another session if I have another topic. I'll definitely recommend this to some other developers if its okay with you guys. Really appreciate the dynamic here. I",
    "session": 40,
    "author": 45,
    "time": "2018-01-18T22:54:22Z",
    "origin_slack_event": 790
  }
},
{
  "model": "discussions.message",
  "pk": 776,
  "fields": {
    "created": "2018-01-24T00:30:04.665Z",
    "modified": "2018-01-24T00:30:04.665Z",
    "text": "<@U8W60M0VD> all good to close this session?",
    "session": 40,
    "author": 76,
    "time": "2018-01-18T21:50:09Z",
    "origin_slack_event": 791
  }
},
{
  "model": "discussions.message",
  "pk": 777,
  "fields": {
    "created": "2018-01-24T00:30:04.668Z",
    "modified": "2018-01-24T00:30:04.668Z",
    "text": ":thumbsup: no problem feel free to make more sessions as topics come up",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T21:49:47Z",
    "origin_slack_event": 792
  }
},
{
  "model": "discussions.message",
  "pk": 778,
  "fields": {
    "created": "2018-01-24T00:30:04.671Z",
    "modified": "2018-01-24T00:30:04.671Z",
    "text": "That was really helpful thank you so much!",
    "session": 40,
    "author": 45,
    "time": "2018-01-18T21:49:03Z",
    "origin_slack_event": 793
  }
},
{
  "model": "discussions.message",
  "pk": 779,
  "fields": {
    "created": "2018-01-24T00:30:04.675Z",
    "modified": "2018-01-24T00:30:04.675Z",
    "text": "The only reason I'm saying you probably don't want a PK at all is that my impression is that you're scrapping this together for some one-off type of data analysis, but if you're building some kind of system that needs to maintain data integrity over time (i.e. dozens of experiments &amp; hundreds of thousands of rows over months of time), then you probably do want that `(experiment_id, time_from_start)` PK along with a critical eye towards your data model (i.e. evaluate whether or not your spreadsheet format with its current layout of sheets and columns actually makes sense to represent your data)",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T21:35:34Z",
    "origin_slack_event": 794
  }
},
{
  "model": "discussions.message",
  "pk": 780,
  "fields": {
    "created": "2018-01-24T00:30:04.679Z",
    "modified": "2018-01-24T00:30:04.679Z",
    "text": "That is if I'm understanding this correctly and that each experiment has 1 row of data per 1 second of runtime",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T21:32:20Z",
    "origin_slack_event": 795
  }
},
{
  "model": "discussions.message",
  "pk": 781,
  "fields": {
    "created": "2018-01-24T00:30:04.682Z",
    "modified": "2018-01-24T00:30:04.683Z",
    "text": "Correct, you would not want experiment_id to be a PK -- in your case i don't think you would have a PK at all to keep it simple. A PK (whether it is one column or a composite of multiple columns) represents a piece of data by which you can uniquely identify an instance (row) of the concept (the object represented by the table). So if you *really* want a PK then it'd probably be a composite PK of `(experiment_id, time_from_start)`",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T21:31:45Z",
    "origin_slack_event": 796
  }
},
{
  "model": "discussions.message",
  "pk": 782,
  "fields": {
    "created": "2018-01-24T00:30:04.687Z",
    "modified": "2018-01-24T00:30:04.687Z",
    "text": "Thanks for your reply! My main concern comes from a time-series table wherein each row represents a different time point's worth of data. (All experiments have the same frequency of time points). So each row would have an experiment_id, but this wouldn't be suitable for a PK right? Each experiment can be up to 26,000 seconds long",
    "session": 40,
    "author": 45,
    "time": "2018-01-18T21:22:13Z",
    "origin_slack_event": 797
  }
},
{
  "model": "discussions.message",
  "pk": 783,
  "fields": {
    "created": "2018-01-24T00:30:04.690Z",
    "modified": "2018-01-24T00:30:04.691Z",
    "text": "Let me know if I'm not reading the topic correctly / there's more nuances",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T20:36:33Z",
    "origin_slack_event": 798
  }
},
{
  "model": "discussions.message",
  "pk": 784,
  "fields": {
    "created": "2018-01-24T00:30:04.695Z",
    "modified": "2018-01-24T00:30:04.695Z",
    "text": "If you're purely using this as a convenience for querying tables of data, and assuming they're not huge datasets, you probably don't need to delve into the details of PK's, FK's, etc",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T20:36:05Z",
    "origin_slack_event": 799
  }
},
{
  "model": "discussions.message",
  "pk": 785,
  "fields": {
    "created": "2018-01-24T00:30:04.700Z",
    "modified": "2018-01-24T00:30:04.700Z",
    "text": "Hey - sounds like you could keep 1 DB, 4 Tables, with each table representing one type of sheet, and then when you query the database to look at data from a single experiment, you just always include a `WHERE experiment_id = 1` if you're doing a query on experiment #1",
    "session": 40,
    "author": 112,
    "time": "2018-01-18T20:34:45Z",
    "origin_slack_event": 800
  }
},
{
  "model": "discussions.message",
  "pk": 786,
  "fields": {
    "created": "2018-01-24T00:30:04.704Z",
    "modified": "2018-01-24T00:30:04.704Z",
    "text": "*Title*: RDBMS Schema for a Scientific Experiment Dat aBase\n*tags*: mysql, python, pandas\n*Description*: I work with experimental data (structured into 4 sheets / CSV and 1 CSV / experiment currently). I would like to store this in an RDBMS to allow for some querying as well. Two of the aforementioned sheets are time series / voltage series. I'm unsure if I should avoid creating 4 tables / experiment each time. If I should just keep 4 master tables, I'm not sure what to use as a primary key. Each experiment often involves several sensors (so the fields in one of the time series tables would be experiment_id, sensor_id, raw_time,raw_current_electrode1...electroden. (So I'm unsure what a unique identifier would be)",
    "session": 40,
    "author": 71,
    "time": "2018-01-18T20:17:19Z",
    "origin_slack_event": 801
  }
},
{
  "model": "discussions.message",
  "pk": 788,
  "fields": {
    "created": "2018-01-24T00:30:05.153Z",
    "modified": "2018-01-24T00:30:05.154Z",
    "text": "I think I should be good with this session! Again, really love this slack group",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:53:27Z",
    "origin_slack_event": 803
  }
},
{
  "model": "discussions.message",
  "pk": 789,
  "fields": {
    "created": "2018-01-24T00:30:05.157Z",
    "modified": "2018-01-24T00:30:05.157Z",
    "text": "no problem!",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:53:08Z",
    "origin_slack_event": 804
  }
},
{
  "model": "discussions.message",
  "pk": 790,
  "fields": {
    "created": "2018-01-24T00:30:05.161Z",
    "modified": "2018-01-24T00:30:05.161Z",
    "text": "Haha bit silly of me but really appreciate your help",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:53:02Z",
    "origin_slack_event": 805
  }
},
{
  "model": "discussions.message",
  "pk": 791,
  "fields": {
    "created": "2018-01-24T00:30:05.164Z",
    "modified": "2018-01-24T00:30:05.164Z",
    "text": "yup exactly",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:52:51Z",
    "origin_slack_event": 806
  }
},
{
  "model": "discussions.message",
  "pk": 792,
  "fields": {
    "created": "2018-01-24T00:30:05.168Z",
    "modified": "2018-01-24T00:30:05.168Z",
    "text": "I'm not sure what I got a bit confused, because of the experiment_id column the time column isn't really shared after all",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:52:41Z",
    "origin_slack_event": 807
  }
},
{
  "model": "discussions.message",
  "pk": 793,
  "fields": {
    "created": "2018-01-24T00:30:05.171Z",
    "modified": "2018-01-24T00:30:05.171Z",
    "text": "Ah okay that makes much more sense now",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:52:18Z",
    "origin_slack_event": 808
  }
},
{
  "model": "discussions.message",
  "pk": 794,
  "fields": {
    "created": "2018-01-24T00:30:05.175Z",
    "modified": "2018-01-24T00:30:05.175Z",
    "text": "<@U8C281TT6> uploaded a file: <https://codeclippy.slack.com/files/U8C281TT6/F8W49QR8W/image.png|image.png>",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:51:28Z",
    "origin_slack_event": 809
  }
},
{
  "model": "discussions.message",
  "pk": 795,
  "fields": {
    "created": "2018-01-24T00:30:05.179Z",
    "modified": "2018-01-24T00:30:05.179Z",
    "text": "and if we're looking at a piece of this table of actual data (based on the .txt files you sent):",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:51:22Z",
    "origin_slack_event": 810
  }
},
{
  "model": "discussions.message",
  "pk": 796,
  "fields": {
    "created": "2018-01-24T00:30:05.184Z",
    "modified": "2018-01-24T00:30:05.184Z",
    "text": "ok that makes sense, pretty much similar to what i had in mind",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:50:53Z",
    "origin_slack_event": 811
  }
},
{
  "model": "discussions.message",
  "pk": 797,
  "fields": {
    "created": "2018-01-24T00:30:05.188Z",
    "modified": "2018-01-24T00:30:05.188Z",
    "text": "<@U8C281TT6> uploaded a file: <https://codeclippy.slack.com/files/U8C281TT6/F8UJUKKFS/image.png|image.png>",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:50:29Z",
    "origin_slack_event": 812
  }
},
{
  "model": "discussions.message",
  "pk": 798,
  "fields": {
    "created": "2018-01-24T00:30:05.192Z",
    "modified": "2018-01-24T00:30:05.192Z",
    "text": "not at all thanks going over it now",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:50:27Z",
    "origin_slack_event": 813
  }
},
{
  "model": "discussions.message",
  "pk": 799,
  "fields": {
    "created": "2018-01-24T00:30:05.196Z",
    "modified": "2018-01-24T00:30:05.196Z",
    "text": "mmm sorry that's ugly",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:50:16Z",
    "origin_slack_event": 814
  }
},
{
  "model": "discussions.message",
  "pk": 800,
  "fields": {
    "created": "2018-01-24T00:30:05.200Z",
    "modified": "2018-01-24T00:30:05.200Z",
    "text": "```\nEXPERIMENT_DATA_SHEET_1\t\t\ncolumn name\tcolumn type\texample value\nexperiment_id\tlong\t1\ntime\tdouble\t1.1\ni1_over_A\tdouble\t0.0000005\ni2_over_A\tdouble\t0.0000005\ni3_over_A\tdouble\t0.0000005\ni4_over_A\tdouble\t0.0000005\ni5_over_A\tdouble\t0.0000005\ni6_over_A\tdouble\t0.0000005\ni7_over_A\tdouble\t0.0000005\ni8_over_A\tdouble\t0.0000005\n```",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:50:07Z",
    "origin_slack_event": 815
  }
},
{
  "model": "discussions.message",
  "pk": 801,
  "fields": {
    "created": "2018-01-24T00:30:05.204Z",
    "modified": "2018-01-24T00:30:05.204Z",
    "text": "here's what i would expect the table that represents this type of sheet to look like:",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:50:00Z",
    "origin_slack_event": 816
  }
},
{
  "model": "discussions.message",
  "pk": 802,
  "fields": {
    "created": "2018-01-24T00:30:05.207Z",
    "modified": "2018-01-24T00:30:05.207Z",
    "text": "My concern was that having 4 tables in the DB and having many, many different experiments contained within : I may run into this issue since they would presumbably share the same time column",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:43:47Z",
    "origin_slack_event": 817
  }
},
{
  "model": "discussions.message",
  "pk": 803,
  "fields": {
    "created": "2018-01-24T00:30:05.211Z",
    "modified": "2018-01-24T00:30:05.211Z",
    "text": "Each csv represents one experiment, so what I sent you represents two experiments",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:42:55Z",
    "origin_slack_event": 818
  }
},
{
  "model": "discussions.message",
  "pk": 804,
  "fields": {
    "created": "2018-01-24T00:30:05.215Z",
    "modified": "2018-01-24T00:30:05.215Z",
    "text": "The two images represent the same sheet of two different csvs",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:42:40Z",
    "origin_slack_event": 819
  }
},
{
  "model": "discussions.message",
  "pk": 805,
  "fields": {
    "created": "2018-01-24T00:30:05.219Z",
    "modified": "2018-01-24T00:30:05.219Z",
    "text": "do the two images you sent each represent one sheet of one csv?",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:42:26Z",
    "origin_slack_event": 820
  }
},
{
  "model": "discussions.message",
  "pk": 806,
  "fields": {
    "created": "2018-01-24T00:30:05.223Z",
    "modified": "2018-01-24T00:30:05.223Z",
    "text": "In short: one file starts at 0.4 sec the other at 1.0 sec",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:40:59Z",
    "origin_slack_event": 821
  }
},
{
  "model": "discussions.message",
  "pk": 807,
  "fields": {
    "created": "2018-01-24T00:30:05.226Z",
    "modified": "2018-01-24T00:30:05.227Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8V8FT49G/1-2-3-4-5-6-7-8_glucose_sensitivity_na_0_1.txt|Example 1>",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:40:40Z",
    "origin_slack_event": 822
  }
},
{
  "model": "discussions.message",
  "pk": 808,
  "fields": {
    "created": "2018-01-24T00:30:05.230Z",
    "modified": "2018-01-24T00:30:05.230Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8UJR88FJ/d045_cal.txt|Example 2.txt>",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:40:16Z",
    "origin_slack_event": 823
  }
},
{
  "model": "discussions.message",
  "pk": 809,
  "fields": {
    "created": "2018-01-24T00:30:05.234Z",
    "modified": "2018-01-24T00:30:05.234Z",
    "text": "ll send you the raw data in a sec",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:40:04Z",
    "origin_slack_event": 824
  }
},
{
  "model": "discussions.message",
  "pk": 810,
  "fields": {
    "created": "2018-01-24T00:30:05.238Z",
    "modified": "2018-01-24T00:30:05.238Z",
    "text": "Sorry to send two different pictures( the two comparison files - one is a jupyter notebook dataframe print and the other is a text file) i",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:39:59Z",
    "origin_slack_event": 825
  }
},
{
  "model": "discussions.message",
  "pk": 811,
  "fields": {
    "created": "2018-01-24T00:30:05.242Z",
    "modified": "2018-01-24T00:30:05.243Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8WA6AYRM/image.png|Example 2: time starts at 1.0 sec>",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:39:33Z",
    "origin_slack_event": 826
  }
},
{
  "model": "discussions.message",
  "pk": 812,
  "fields": {
    "created": "2018-01-24T00:30:05.247Z",
    "modified": "2018-01-24T00:30:05.248Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8UJQS4M6/image.png|Example 1: time starts at 0.4 sec>",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:39:04Z",
    "origin_slack_event": 827
  }
},
{
  "model": "discussions.message",
  "pk": 813,
  "fields": {
    "created": "2018-01-24T00:30:05.251Z",
    "modified": "2018-01-24T00:30:05.251Z",
    "text": "Absolutely one sec, thanks for the help",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:36:40Z",
    "origin_slack_event": 828
  }
},
{
  "model": "discussions.message",
  "pk": 814,
  "fields": {
    "created": "2018-01-24T00:30:05.255Z",
    "modified": "2018-01-24T00:30:05.256Z",
    "text": "could you send a sample of a couple CSV's with a few rows of data? i think i'm not quite understanding the data",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:36:32Z",
    "origin_slack_event": 829
  }
},
{
  "model": "discussions.message",
  "pk": 815,
  "fields": {
    "created": "2018-01-24T00:30:05.260Z",
    "modified": "2018-01-24T00:30:05.261Z",
    "text": "Not that two tables have different frequencies, but within the same table different experiments may have different time frequencies",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:35:03Z",
    "origin_slack_event": 830
  }
},
{
  "model": "discussions.message",
  "pk": 816,
  "fields": {
    "created": "2018-01-24T00:30:05.265Z",
    "modified": "2018-01-24T00:30:05.265Z",
    "text": "but in another it could be t=0.5 or a different value",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:34:22Z",
    "origin_slack_event": 831
  }
},
{
  "model": "discussions.message",
  "pk": 817,
  "fields": {
    "created": "2018-01-24T00:30:05.268Z",
    "modified": "2018-01-24T00:30:05.268Z",
    "text": "so in one experiment a given row would be t=0, electrode_1_current .... electrode_n_current",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:34:10Z",
    "origin_slack_event": 832
  }
},
{
  "model": "discussions.message",
  "pk": 818,
  "fields": {
    "created": "2018-01-24T00:30:05.271Z",
    "modified": "2018-01-24T00:30:05.272Z",
    "text": "at each time point i measure a current at 8 electrodes",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:33:50Z",
    "origin_slack_event": 833
  }
},
{
  "model": "discussions.message",
  "pk": 819,
  "fields": {
    "created": "2018-01-24T00:30:05.275Z",
    "modified": "2018-01-24T00:30:05.275Z",
    "text": "but the timestamps for a given experiment may not be constant",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:33:43Z",
    "origin_slack_event": 834
  }
},
{
  "model": "discussions.message",
  "pk": 820,
  "fields": {
    "created": "2018-01-24T00:30:05.278Z",
    "modified": "2018-01-24T00:30:05.279Z",
    "text": "So like we previously discussed I could have a column for experiment_id and a common raw_time column",
    "session": 42,
    "author": 45,
    "time": "2018-01-19T00:33:23Z",
    "origin_slack_event": 835
  }
},
{
  "model": "discussions.message",
  "pk": 821,
  "fields": {
    "created": "2018-01-24T00:30:05.282Z",
    "modified": "2018-01-24T00:30:05.282Z",
    "text": "Not sure I'm quite following the problem -- what's wrong if the two tables have different time frequencies?",
    "session": 42,
    "author": 112,
    "time": "2018-01-19T00:32:34Z",
    "origin_slack_event": 836
  }
},
{
  "model": "discussions.message",
  "pk": 822,
  "fields": {
    "created": "2018-01-24T00:30:05.285Z",
    "modified": "2018-01-24T00:30:05.285Z",
    "text": "*Title*: Time Series DB Handling\n*tags*: mysql, python, pandas\n*Description*: I work with experimental data (structured into 4 sheets / CSV and 1 CSV / experiment currently). I decided to store this data in 4 master tables, and use an experiment_ID and sensor_ID column to help query data. (In doing so, the DB will have no primary key). However, two of these tables are time series and may not have the same frequency of time. Can anyone recommend a good way to handle time series data?",
    "session": 42,
    "author": 71,
    "time": "2018-01-19T00:28:46Z",
    "origin_slack_event": 837
  }
},
{
  "model": "discussions.message",
  "pk": 823,
  "fields": {
    "created": "2018-01-24T00:30:05.742Z",
    "modified": "2018-01-24T00:30:05.742Z",
    "text": "yes",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T18:29:09Z",
    "origin_slack_event": 838
  }
},
{
  "model": "discussions.message",
  "pk": 824,
  "fields": {
    "created": "2018-01-24T00:30:05.745Z",
    "modified": "2018-01-24T00:30:05.746Z",
    "text": "Awesome - good to close here?",
    "session": 43,
    "author": 76,
    "time": "2018-01-19T18:19:56Z",
    "origin_slack_event": 839
  }
},
{
  "model": "discussions.message",
  "pk": 825,
  "fields": {
    "created": "2018-01-24T00:30:05.749Z",
    "modified": "2018-01-24T00:30:05.749Z",
    "text": "thanks!",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T18:10:29Z",
    "origin_slack_event": 840
  }
},
{
  "model": "discussions.message",
  "pk": 826,
  "fields": {
    "created": "2018-01-24T00:30:05.753Z",
    "modified": "2018-01-24T00:30:05.753Z",
    "text": "ok I get it now, I ran multiple console.log's, so by changing the class to green, it's -1html object, so the originally 2nd object becomes first, 3rd the 2nd and so on, removing the objects makes it count to double less and the change of \"new list\" makes it look like it counts every 2nd",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T18:10:22Z",
    "origin_slack_event": 841
  }
},
{
  "model": "discussions.message",
  "pk": 827,
  "fields": {
    "created": "2018-01-24T00:30:05.756Z",
    "modified": "2018-01-24T00:30:05.756Z",
    "text": "so here, since we\u2019re counting by class we need the number of elements of class wasd to remain constant, lmk if that makes sense",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:54:45Z",
    "origin_slack_event": 842
  }
},
{
  "model": "discussions.message",
  "pk": 828,
  "fields": {
    "created": "2018-01-24T00:30:05.760Z",
    "modified": "2018-01-24T00:30:05.760Z",
    "text": "Ill have to look into now how that works, Ill read what you've written, hope I get it ;D",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:54:27Z",
    "origin_slack_event": 843
  }
},
{
  "model": "discussions.message",
  "pk": 829,
  "fields": {
    "created": "2018-01-24T00:30:05.764Z",
    "modified": "2018-01-24T00:30:05.764Z",
    "text": "if during your loop, you\u2019re adding or removing elements (Via class or tag), then the total number of elements will decrease",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:54:11Z",
    "origin_slack_event": 844
  }
},
{
  "model": "discussions.message",
  "pk": 830,
  "fields": {
    "created": "2018-01-24T00:30:05.768Z",
    "modified": "2018-01-24T00:30:05.768Z",
    "text": "you\u2019re calculating it differently in the two fiddles, once by class and once by tag",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:53:53Z",
    "origin_slack_event": 845
  }
},
{
  "model": "discussions.message",
  "pk": 831,
  "fields": {
    "created": "2018-01-24T00:30:05.772Z",
    "modified": "2018-01-24T00:30:05.772Z",
    "text": "Think of your use of `ran.length` as the total number of elements to change",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:53:40Z",
    "origin_slack_event": 846
  }
},
{
  "model": "discussions.message",
  "pk": 832,
  "fields": {
    "created": "2018-01-24T00:30:05.776Z",
    "modified": "2018-01-24T00:30:05.776Z",
    "text": "right because when you\u2019re creating the new td elements, you\u2019re not creating them with the ClassName of \u201cwasd\u201d",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:53:20Z",
    "origin_slack_event": 847
  }
},
{
  "model": "discussions.message",
  "pk": 833,
  "fields": {
    "created": "2018-01-24T00:30:05.781Z",
    "modified": "2018-01-24T00:30:05.782Z",
    "text": "if gathered with ClassName works normally, if gathered with TagName, removed + added new, adds only 3 tds",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:52:48Z",
    "origin_slack_event": 848
  }
},
{
  "model": "discussions.message",
  "pk": 834,
  "fields": {
    "created": "2018-01-24T00:30:05.786Z",
    "modified": "2018-01-24T00:30:05.786Z",
    "text": "<@U8C2LGL7N> great! <https://jsfiddle.net/adkuca/c00fqmts/>",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:52:08Z",
    "origin_slack_event": 849
  }
},
{
  "model": "discussions.message",
  "pk": 835,
  "fields": {
    "created": "2018-01-24T00:30:05.792Z",
    "modified": "2018-01-24T00:30:05.792Z",
    "text": ":thumbsup:",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:47:03Z",
    "origin_slack_event": 850
  }
},
{
  "model": "discussions.message",
  "pk": 836,
  "fields": {
    "created": "2018-01-24T00:30:05.795Z",
    "modified": "2018-01-24T00:30:05.795Z",
    "text": "Ill try that now ;D",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:46:59Z",
    "origin_slack_event": 851
  }
},
{
  "model": "discussions.message",
  "pk": 837,
  "fields": {
    "created": "2018-01-24T00:30:05.799Z",
    "modified": "2018-01-24T00:30:05.799Z",
    "text": "etc",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:51Z",
    "origin_slack_event": 852
  }
},
{
  "model": "discussions.message",
  "pk": 838,
  "fields": {
    "created": "2018-01-24T00:30:05.802Z",
    "modified": "2018-01-24T00:30:05.802Z",
    "text": "or ul to ol",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:49Z",
    "origin_slack_event": 853
  }
},
{
  "model": "discussions.message",
  "pk": 839,
  "fields": {
    "created": "2018-01-24T00:30:05.805Z",
    "modified": "2018-01-24T00:30:05.806Z",
    "text": "so td to div",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:46Z",
    "origin_slack_event": 854
  }
},
{
  "model": "discussions.message",
  "pk": 840,
  "fields": {
    "created": "2018-01-24T00:30:05.815Z",
    "modified": "2018-01-24T00:30:05.815Z",
    "text": "tagname gets affected if you change the tag name",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:42Z",
    "origin_slack_event": 855
  }
},
{
  "model": "discussions.message",
  "pk": 841,
  "fields": {
    "created": "2018-01-24T00:30:05.831Z",
    "modified": "2018-01-24T00:30:05.831Z",
    "text": "they\u2019re selecting by class name and by tagname",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:35Z",
    "origin_slack_event": 856
  }
},
{
  "model": "discussions.message",
  "pk": 842,
  "fields": {
    "created": "2018-01-24T00:30:05.842Z",
    "modified": "2018-01-24T00:30:05.842Z",
    "text": "I mean, td",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:46:30Z",
    "origin_slack_event": 857
  }
},
{
  "model": "discussions.message",
  "pk": 843,
  "fields": {
    "created": "2018-01-24T00:30:05.846Z",
    "modified": "2018-01-24T00:30:05.847Z",
    "text": "yeah exactly",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:46:27Z",
    "origin_slack_event": 858
  }
},
{
  "model": "discussions.message",
  "pk": 844,
  "fields": {
    "created": "2018-01-24T00:30:05.850Z",
    "modified": "2018-01-24T00:30:05.850Z",
    "text": "and TagName only if changing Divs?",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:46:24Z",
    "origin_slack_event": 859
  }
},
{
  "model": "discussions.message",
  "pk": 845,
  "fields": {
    "created": "2018-01-24T00:30:05.854Z",
    "modified": "2018-01-24T00:30:05.854Z",
    "text": "wait, so the ClassName only gets affected if changing classes?",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:46:15Z",
    "origin_slack_event": 860
  }
},
{
  "model": "discussions.message",
  "pk": 846,
  "fields": {
    "created": "2018-01-24T00:30:05.858Z",
    "modified": "2018-01-24T00:30:05.858Z",
    "text": "does it not?",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:45:16Z",
    "origin_slack_event": 861
  }
},
{
  "model": "discussions.message",
  "pk": 847,
  "fields": {
    "created": "2018-01-24T00:30:05.862Z",
    "modified": "2018-01-24T00:30:05.862Z",
    "text": "because you\u2019re never changing the type of the element to a different tag",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:45:14Z",
    "origin_slack_event": 862
  }
},
{
  "model": "discussions.message",
  "pk": 848,
  "fields": {
    "created": "2018-01-24T00:30:05.866Z",
    "modified": "2018-01-24T00:30:05.866Z",
    "text": "ah that should work perfectly",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:45:00Z",
    "origin_slack_event": 863
  }
},
{
  "model": "discussions.message",
  "pk": 849,
  "fields": {
    "created": "2018-01-24T00:30:05.869Z",
    "modified": "2018-01-24T00:30:05.869Z",
    "text": "recomment them",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:44:46Z",
    "origin_slack_event": 864
  }
},
{
  "model": "discussions.message",
  "pk": 850,
  "fields": {
    "created": "2018-01-24T00:30:05.872Z",
    "modified": "2018-01-24T00:30:05.872Z",
    "text": "it's commented out",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:44:41Z",
    "origin_slack_event": 865
  }
},
{
  "model": "discussions.message",
  "pk": 851,
  "fields": {
    "created": "2018-01-24T00:30:05.876Z",
    "modified": "2018-01-24T00:30:05.876Z",
    "text": "Where was that? I\u2019m missing it in the jsfiddles",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:44:34Z",
    "origin_slack_event": 866
  }
},
{
  "model": "discussions.message",
  "pk": 852,
  "fields": {
    "created": "2018-01-24T00:30:05.880Z",
    "modified": "2018-01-24T00:30:05.880Z",
    "text": "but here it works",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:44:17Z",
    "origin_slack_event": 867
  }
},
{
  "model": "discussions.message",
  "pk": 853,
  "fields": {
    "created": "2018-01-24T00:30:05.884Z",
    "modified": "2018-01-24T00:30:05.885Z",
    "text": "it's a HTML Collection and you did the same thing with the class, replaced wasd with green",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:44:14Z",
    "origin_slack_event": 868
  }
},
{
  "model": "discussions.message",
  "pk": 854,
  "fields": {
    "created": "2018-01-24T00:30:05.888Z",
    "modified": "2018-01-24T00:30:05.888Z",
    "text": "this all sounds good but what about the TagName case",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:43:42Z",
    "origin_slack_event": 869
  }
},
{
  "model": "discussions.message",
  "pk": 855,
  "fields": {
    "created": "2018-01-24T00:30:05.893Z",
    "modified": "2018-01-24T00:30:05.893Z",
    "text": "you could interpret overwriting the class as changing it or removing the old class, but yeah as soon as the className is no longer wasd, the element is not longer part of the collection you started with via documents.getElementsByClassName",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:41:45Z",
    "origin_slack_event": 870
  }
},
{
  "model": "discussions.message",
  "pk": 856,
  "fields": {
    "created": "2018-01-24T00:30:05.898Z",
    "modified": "2018-01-24T00:30:05.898Z",
    "text": "So only at removing it's happening?",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:40:36Z",
    "origin_slack_event": 871
  }
},
{
  "model": "discussions.message",
  "pk": 857,
  "fields": {
    "created": "2018-01-24T00:30:05.902Z",
    "modified": "2018-01-24T00:30:05.902Z",
    "text": "Oh, you can add, change anything in HTML Collection and live NodeList, but you can't remove, then this happens?",
    "session": 43,
    "author": 46,
    "time": "2018-01-19T17:40:28Z",
    "origin_slack_event": 872
  }
},
{
  "model": "discussions.message",
  "pk": 858,
  "fields": {
    "created": "2018-01-24T00:30:05.905Z",
    "modified": "2018-01-24T00:30:05.906Z",
    "text": "By appending \u201cgreen\u201d as an additional class, the collection isn\u2019t shrinking as you go through it since there will always be 6 elements of class \u201cwasd\u201d",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:33:21Z",
    "origin_slack_event": 873
  }
},
{
  "model": "discussions.message",
  "pk": 859,
  "fields": {
    "created": "2018-01-24T00:30:05.910Z",
    "modified": "2018-01-24T00:30:05.910Z",
    "text": "The other three had been overwritten to \u201cgreen\u201d",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:32:44Z",
    "origin_slack_event": 874
  }
},
{
  "model": "discussions.message",
  "pk": 860,
  "fields": {
    "created": "2018-01-24T00:30:05.913Z",
    "modified": "2018-01-24T00:30:05.913Z",
    "text": "where i = 3 and length is 3 because there are only 3 elements with class \u201cwasd\u201d",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:32:36Z",
    "origin_slack_event": 875
  }
},
{
  "model": "discussions.message",
  "pk": 861,
  "fields": {
    "created": "2018-01-24T00:30:05.917Z",
    "modified": "2018-01-24T00:30:05.917Z",
    "text": "so it\u2019ll stop at 3 as the pattern progresses",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:32:19Z",
    "origin_slack_event": 876
  }
},
{
  "model": "discussions.message",
  "pk": 862,
  "fields": {
    "created": "2018-01-24T00:30:05.920Z",
    "modified": "2018-01-24T00:30:05.920Z",
    "text": "The length is dynamically changing so as you set one to green, i is 1 and length is 5",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:32:12Z",
    "origin_slack_event": 877
  }
},
{
  "model": "discussions.message",
  "pk": 863,
  "fields": {
    "created": "2018-01-24T00:30:05.923Z",
    "modified": "2018-01-24T00:30:05.924Z",
    "text": "In the one with className change the line from `ran[i].setAttribute(\"class\", \"green\");` to `ran[i].setAttribute(\"class\", \"wasd green\");`",
    "session": 43,
    "author": 117,
    "time": "2018-01-19T17:31:33Z",
    "origin_slack_event": 878
  }
},
{
  "model": "discussions.message",
  "pk": 864,
  "fields": {
    "created": "2018-01-24T00:30:05.927Z",
    "modified": "2018-01-24T00:30:05.928Z",
    "text": "Title: HTMLCollection - adding different attributes affects the live collection differently\nTags: js, html, dom, vanilla, live, collection\nDescription: We all know `document.getElementsByClassName` and `document.getElementsByTagName` are live HTMLCollections.\nSo I made 2 examples, one with adding a class attribute, the other with bgcolor. Why does the first act like expected and the other gets it's job done...\n<https://jsfiddle.net/adkuca/84ryjp7s/2/>\n<https://jsfiddle.net/adkuca/f1o9h7be/>\nHow can I know what will work normally and what wont??",
    "session": 43,
    "author": 71,
    "time": "2018-01-19T17:27:07Z",
    "origin_slack_event": 879
  }
},
{
  "model": "discussions.message",
  "pk": 865,
  "fields": {
    "created": "2018-01-24T00:30:06.154Z",
    "modified": "2018-01-24T00:30:06.154Z",
    "text": "One sec",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:08:42Z",
    "origin_slack_event": 880
  }
},
{
  "model": "discussions.message",
  "pk": 866,
  "fields": {
    "created": "2018-01-24T00:30:06.158Z",
    "modified": "2018-01-24T00:30:06.158Z",
    "text": "Will do",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:08:41Z",
    "origin_slack_event": 881
  }
},
{
  "model": "discussions.message",
  "pk": 867,
  "fields": {
    "created": "2018-01-24T00:30:06.162Z",
    "modified": "2018-01-24T00:30:06.162Z",
    "text": "you probably need to stack and pivot the table but would help to have the actual df",
    "session": 44,
    "author": 117,
    "time": "2018-01-19T22:07:13Z",
    "origin_slack_event": 882
  }
},
{
  "model": "discussions.message",
  "pk": 868,
  "fields": {
    "created": "2018-01-24T00:30:06.165Z",
    "modified": "2018-01-24T00:30:06.165Z",
    "text": "can you dump me the dataframe and send as json?",
    "session": 44,
    "author": 117,
    "time": "2018-01-19T22:06:32Z",
    "origin_slack_event": 883
  }
},
{
  "model": "discussions.message",
  "pk": 869,
  "fields": {
    "created": "2018-01-24T00:30:06.168Z",
    "modified": "2018-01-24T00:30:06.168Z",
    "text": "Hey <@U8W60M0VD> we\u2019re moving this to <#C8VQRGRJQ|session-36> ?",
    "session": 44,
    "author": 117,
    "time": "2018-01-19T22:06:18Z",
    "origin_slack_event": 884
  }
},
{
  "model": "discussions.message",
  "pk": 870,
  "fields": {
    "created": "2018-01-24T00:30:06.172Z",
    "modified": "2018-01-24T00:30:06.172Z",
    "text": "*do",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:03:40Z",
    "origin_slack_event": 885
  }
},
{
  "model": "discussions.message",
  "pk": 871,
  "fields": {
    "created": "2018-01-24T00:30:06.175Z",
    "modified": "2018-01-24T00:30:06.176Z",
    "text": "How to I flatten the index heirarchy such that the calibration_type and calibration_num values are shown in every row",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:03:36Z",
    "origin_slack_event": 886
  }
},
{
  "model": "discussions.message",
  "pk": 872,
  "fields": {
    "created": "2018-01-24T00:30:06.180Z",
    "modified": "2018-01-24T00:30:06.180Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8VN5UH7V/image.png|The idnex:>",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:03:07Z",
    "origin_slack_event": 887
  }
},
{
  "model": "discussions.message",
  "pk": 873,
  "fields": {
    "created": "2018-01-24T00:30:06.184Z",
    "modified": "2018-01-24T00:30:06.184Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8VR42VD0/image.png|Quick follow up: I have a multiindex DF as such>",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T22:02:41Z",
    "origin_slack_event": 888
  }
},
{
  "model": "discussions.message",
  "pk": 874,
  "fields": {
    "created": "2018-01-24T00:30:06.189Z",
    "modified": "2018-01-24T00:30:06.189Z",
    "text": "Let us know if that seemed to solve it <@U8W60M0VD>",
    "session": 44,
    "author": 76,
    "time": "2018-01-19T21:11:41Z",
    "origin_slack_event": 889
  }
},
{
  "model": "discussions.message",
  "pk": 875,
  "fields": {
    "created": "2018-01-24T00:30:06.205Z",
    "modified": "2018-01-24T00:30:06.205Z",
    "text": "Ah, it shouldn\u2019t be a problem per se. If raw_time is a level of columns, you can always use the reset_index method to drop one of them, e.g.  `df.reset_index(level='raw_time')`",
    "session": 44,
    "author": 117,
    "time": "2018-01-19T18:21:11Z",
    "origin_slack_event": 890
  }
},
{
  "model": "discussions.message",
  "pk": 876,
  "fields": {
    "created": "2018-01-24T00:30:06.219Z",
    "modified": "2018-01-24T00:30:06.220Z",
    "text": "Is that a problem?",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T18:17:16Z",
    "origin_slack_event": 891
  }
},
{
  "model": "discussions.message",
  "pk": 877,
  "fields": {
    "created": "2018-01-24T00:30:06.223Z",
    "modified": "2018-01-24T00:30:06.224Z",
    "text": "It seems that raw_time and WE1... are on different levels",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T18:17:13Z",
    "origin_slack_event": 892
  }
},
{
  "model": "discussions.message",
  "pk": 878,
  "fields": {
    "created": "2018-01-24T00:30:06.227Z",
    "modified": "2018-01-24T00:30:06.227Z",
    "text": "Sorry what I mean to say is that if you look at the 'level' of this DF that I sliced from a multiindex",
    "session": 44,
    "author": 45,
    "time": "2018-01-19T18:17:04Z",
    "origin_slack_event": 893
  }
},
{
  "model": "discussions.message",
  "pk": 879,
  "fields": {
    "created": "2018-01-24T00:30:06.230Z",
    "modified": "2018-01-24T00:30:06.231Z",
    "text": "Hey <@U8W60M0VD> , what do you mean by columns \u2018line up\u2019?",
    "session": 44,
    "author": 117,
    "time": "2018-01-19T17:56:10Z",
    "origin_slack_event": 894
  }
},
{
  "model": "discussions.message",
  "pk": 880,
  "fields": {
    "created": "2018-01-24T00:30:06.234Z",
    "modified": "2018-01-24T00:30:06.235Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8V4G0HU1/image.png|image.png> and commented: *Title*: Drop a level from Pandas Multiindex\n*tags*: pandas\n*Description*: I have a Pandas DF, image attached, and want to drop a level so the columns 'line up'. Can anyone advise?",
    "session": 44,
    "author": 71,
    "time": "2018-01-19T17:55:31Z",
    "origin_slack_event": 895
  }
},
{
  "model": "discussions.message",
  "pk": 881,
  "fields": {
    "created": "2018-01-24T00:30:06.467Z",
    "modified": "2018-01-24T00:30:06.467Z",
    "text": "Yeah it\u2019s huge and has a non-trivial learning curve",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:26:44Z",
    "origin_slack_event": 896
  }
},
{
  "model": "discussions.message",
  "pk": 882,
  "fields": {
    "created": "2018-01-24T00:30:06.470Z",
    "modified": "2018-01-24T00:30:06.471Z",
    "text": "It's a great library but lots of nuances",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:26:25Z",
    "origin_slack_event": 897
  }
},
{
  "model": "discussions.message",
  "pk": 883,
  "fields": {
    "created": "2018-01-24T00:30:06.474Z",
    "modified": "2018-01-24T00:30:06.474Z",
    "text": "Feel free to post other q\u2019s as you have them, I love pandas",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:26:17Z",
    "origin_slack_event": 898
  }
},
{
  "model": "discussions.message",
  "pk": 884,
  "fields": {
    "created": "2018-01-24T00:30:06.478Z",
    "modified": "2018-01-24T00:30:06.478Z",
    "text": "Yup all good!",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:26:17Z",
    "origin_slack_event": 899
  }
},
{
  "model": "discussions.message",
  "pk": 885,
  "fields": {
    "created": "2018-01-24T00:30:06.481Z",
    "modified": "2018-01-24T00:30:06.481Z",
    "text": "Man, I hope CodeClippy takes off. This is way more dynamic than stackoverflow",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:26:15Z",
    "origin_slack_event": 900
  }
},
{
  "model": "discussions.message",
  "pk": 886,
  "fields": {
    "created": "2018-01-24T00:30:06.485Z",
    "modified": "2018-01-24T00:30:06.485Z",
    "text": "Sweet, good to close?",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:26:03Z",
    "origin_slack_event": 901
  }
},
{
  "model": "discussions.message",
  "pk": 887,
  "fields": {
    "created": "2018-01-24T00:30:06.488Z",
    "modified": "2018-01-24T00:30:06.488Z",
    "text": "Perfect!!!",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:25:52Z",
    "origin_slack_event": 902
  }
},
{
  "model": "discussions.message",
  "pk": 888,
  "fields": {
    "created": "2018-01-24T00:30:06.492Z",
    "modified": "2018-01-24T00:30:06.492Z",
    "text": "Let me try that out right now! Many thanks fry",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:25:16Z",
    "origin_slack_event": 903
  }
},
{
  "model": "discussions.message",
  "pk": 889,
  "fields": {
    "created": "2018-01-24T00:30:06.496Z",
    "modified": "2018-01-24T00:30:06.496Z",
    "text": "you can use drop=True, inplace=False, etc to move them around",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:17:24Z",
    "origin_slack_event": 904
  }
},
{
  "model": "discussions.message",
  "pk": 890,
  "fields": {
    "created": "2018-01-24T00:30:06.501Z",
    "modified": "2018-01-24T00:30:06.501Z",
    "text": "reset_index is your key for massaging indices",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:17:12Z",
    "origin_slack_event": 905
  }
},
{
  "model": "discussions.message",
  "pk": 891,
  "fields": {
    "created": "2018-01-24T00:30:06.505Z",
    "modified": "2018-01-24T00:30:06.505Z",
    "text": "That should do the trick!",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:17:02Z",
    "origin_slack_event": 906
  }
},
{
  "model": "discussions.message",
  "pk": 892,
  "fields": {
    "created": "2018-01-24T00:30:06.509Z",
    "modified": "2018-01-24T00:30:06.509Z",
    "text": "`df.reset_index(level=['calibration_type', 'calibration_num'])`",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:16:51Z",
    "origin_slack_event": 907
  }
},
{
  "model": "discussions.message",
  "pk": 893,
  "fields": {
    "created": "2018-01-24T00:30:06.514Z",
    "modified": "2018-01-24T00:30:06.514Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8WLY07L6/pickled_df|pickled_df>",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:10:51Z",
    "origin_slack_event": 908
  }
},
{
  "model": "discussions.message",
  "pk": 894,
  "fields": {
    "created": "2018-01-24T00:30:06.518Z",
    "modified": "2018-01-24T00:30:06.518Z",
    "text": "Ok, let me pickle it as I'm sure what to use for the orient arguement for df.to_json",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:09:54Z",
    "origin_slack_event": 909
  }
},
{
  "model": "discussions.message",
  "pk": 895,
  "fields": {
    "created": "2018-01-24T00:30:06.521Z",
    "modified": "2018-01-24T00:30:06.521Z",
    "text": "Yeah pickle or dump to CSV/JSON",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:09:07Z",
    "origin_slack_event": 910
  }
},
{
  "model": "discussions.message",
  "pk": 896,
  "fields": {
    "created": "2018-01-24T00:30:06.525Z",
    "modified": "2018-01-24T00:30:06.525Z",
    "text": "Could I also pickle the DF for you?",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:08:53Z",
    "origin_slack_event": 911
  }
},
{
  "model": "discussions.message",
  "pk": 897,
  "fields": {
    "created": "2018-01-24T00:30:06.528Z",
    "modified": "2018-01-24T00:30:06.529Z",
    "text": "Sorry for the delayed reply in the previous session",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:08:33Z",
    "origin_slack_event": 912
  }
},
{
  "model": "discussions.message",
  "pk": 898,
  "fields": {
    "created": "2018-01-24T00:30:06.532Z",
    "modified": "2018-01-24T00:30:06.532Z",
    "text": "Hey fry",
    "session": 45,
    "author": 45,
    "time": "2018-01-19T22:08:27Z",
    "origin_slack_event": 913
  }
},
{
  "model": "discussions.message",
  "pk": 899,
  "fields": {
    "created": "2018-01-24T00:30:06.535Z",
    "modified": "2018-01-24T00:30:06.535Z",
    "text": "Hey",
    "session": 45,
    "author": 117,
    "time": "2018-01-19T22:07:21Z",
    "origin_slack_event": 914
  }
},
{
  "model": "discussions.message",
  "pk": 900,
  "fields": {
    "created": "2018-01-24T00:30:06.538Z",
    "modified": "2018-01-24T00:30:06.539Z",
    "text": "<@U8W60M0VD> uploaded a file: <https://codeclippy.slack.com/files/U8W60M0VD/F8WSVRP9V/image.png|image.png> and commented: *Title*: Flatten Index Hierarchy of a Pandas DF\n*tags*: pandas\n*Description*: How would I flatten this DF structure such that the columns 'calibration_type' and 'calibration_num' values would be shown in every row.",
    "session": 45,
    "author": 71,
    "time": "2018-01-19T22:05:49Z",
    "origin_slack_event": 915
  }
},
{
  "model": "discussions.message",
  "pk": 901,
  "fields": {
    "created": "2018-01-24T00:30:06.795Z",
    "modified": "2018-01-24T00:30:06.796Z",
    "text": "Going to close this as PROPAGATE_EXCEPTIONS works fine for now",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:37:27Z",
    "origin_slack_event": 916
  }
},
{
  "model": "discussions.message",
  "pk": 902,
  "fields": {
    "created": "2018-01-24T00:30:06.799Z",
    "modified": "2018-01-24T00:30:06.799Z",
    "text": "Claims the error is that the docs do not mention changing it, which is proved incorrect",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:34:40Z",
    "origin_slack_event": 917
  }
},
{
  "model": "discussions.message",
  "pk": 903,
  "fields": {
    "created": "2018-01-24T00:30:06.802Z",
    "modified": "2018-01-24T00:30:06.803Z",
    "text": "Issue on Github here: <https://github.com/pallets/flask/issues/2107>",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:34:25Z",
    "origin_slack_event": 918
  }
},
{
  "model": "discussions.message",
  "pk": 904,
  "fields": {
    "created": "2018-01-24T00:30:06.806Z",
    "modified": "2018-01-24T00:30:06.806Z",
    "text": "Actually something with `flask-restful` is complicating the error handling",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:34:19Z",
    "origin_slack_event": 919
  }
},
{
  "model": "discussions.message",
  "pk": 905,
  "fields": {
    "created": "2018-01-24T00:30:06.809Z",
    "modified": "2018-01-24T00:30:06.810Z",
    "text": "But that\u2019s the current fix while other aspects are higher priority",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:32:25Z",
    "origin_slack_event": 920
  }
},
{
  "model": "discussions.message",
  "pk": 906,
  "fields": {
    "created": "2018-01-24T00:30:06.813Z",
    "modified": "2018-01-24T00:30:06.813Z",
    "text": "My gut is that a different error approach may be needed for blueprints, etc. As it doesn\u2019t make sense to have to change that flag to handle custom errors.",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:32:12Z",
    "origin_slack_event": 921
  }
},
{
  "model": "discussions.message",
  "pk": 907,
  "fields": {
    "created": "2018-01-24T00:30:06.816Z",
    "modified": "2018-01-24T00:30:06.817Z",
    "text": "Otherwise they don\u2019t get propagated and will error out with 500",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:31:47Z",
    "origin_slack_event": 922
  }
},
{
  "model": "discussions.message",
  "pk": 908,
  "fields": {
    "created": "2018-01-24T00:30:06.821Z",
    "modified": "2018-01-24T00:30:06.821Z",
    "text": "By explicitly enabling it, the application errors will be caught by the handlers",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:31:37Z",
    "origin_slack_event": 923
  }
},
{
  "model": "discussions.message",
  "pk": 909,
  "fields": {
    "created": "2018-01-24T00:30:06.825Z",
    "modified": "2018-01-24T00:30:06.825Z",
    "text": "After looking into it, the key configuration setting was `PROPAGATE_EXCEPTIONS`",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:31:04Z",
    "origin_slack_event": 924
  }
},
{
  "model": "discussions.message",
  "pk": 910,
  "fields": {
    "created": "2018-01-24T00:30:06.829Z",
    "modified": "2018-01-24T00:30:06.830Z",
    "text": "Originally it was resolved by setting `TESTING=true`, which changes a number of builtin configuration values just as setting `DEBUG=true` does.",
    "session": 46,
    "author": 117,
    "time": "2018-01-23T19:30:52Z",
    "origin_slack_event": 925
  }
},
{
  "model": "discussions.message",
  "pk": 911,
  "fields": {
    "created": "2018-01-24T00:30:06.833Z",
    "modified": "2018-01-24T00:30:06.833Z",
    "text": "Or did you end up resolving this issue just via the `TESTING=True` flag?",
    "session": 46,
    "author": 112,
    "time": "2018-01-23T19:20:43Z",
    "origin_slack_event": 926
  }
},
{
  "model": "discussions.message",
  "pk": 912,
  "fields": {
    "created": "2018-01-24T00:30:06.836Z",
    "modified": "2018-01-24T00:30:06.837Z",
    "text": "I wonder if it had something to do with Flask's handling of contexts (application context &amp; request context) -- not sure exactly how registering application error handlers work under the hood, but wouldn't be surprised if they're bound to the application context, and then something like this bit\n```\n<http://flask.pocoo.org/docs/0.12/appcontext/>\n\nLocality of the Context\u00b6\nThe application context is *created and destroyed as necessary. It never moves between threads* and it will not be shared between requests. As such it is the perfect place to store database connection information and other things. The internal stack object is called flask._app_ctx_stack. Extensions are free to store additional information on the topmost level, assuming they pick a sufficiently unique name and should put their information there, instead of on the flask.g object which is reserved for user code.\n```\nresults in that handling not carrying over",
    "session": 46,
    "author": 112,
    "time": "2018-01-23T19:20:27Z",
    "origin_slack_event": 927
  }
},
{
  "model": "discussions.message",
  "pk": 913,
  "fields": {
    "created": "2018-01-24T00:30:06.842Z",
    "modified": "2018-01-24T00:30:06.842Z",
    "text": "*Title*: Pytest failing despite custom error handling in Flask\n*Tags*: flask, pytest, flask_restful\n*Description*: Working on a Flask app and have a custom error handler for an exception I raise in a route. This works perfectly when testing manually with HTTP responses. However, when running a functional test with pytest, the test fails when the exception is initially raised before the Flask app gets a chance to handle it.",
    "session": 46,
    "author": 71,
    "time": "2018-01-20T17:04:20Z",
    "origin_slack_event": 928
  }
},
{
  "model": "discussions.message",
  "pk": 914,
  "fields": {
    "created": "2018-01-24T00:30:07.081Z",
    "modified": "2018-01-24T00:30:07.081Z",
    "text": ":thumbsup:",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:40:06Z",
    "origin_slack_event": 929
  }
},
{
  "model": "discussions.message",
  "pk": 915,
  "fields": {
    "created": "2018-01-24T00:30:07.084Z",
    "modified": "2018-01-24T00:30:07.084Z",
    "text": "will make more sense when you learn about classes",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:40:02Z",
    "origin_slack_event": 930
  }
},
{
  "model": "discussions.message",
  "pk": 916,
  "fields": {
    "created": "2018-01-24T00:30:07.088Z",
    "modified": "2018-01-24T00:30:07.088Z",
    "text": "<https://jsfiddle.net/dwqqupkf/1/>",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:39:56Z",
    "origin_slack_event": 931
  }
},
{
  "model": "discussions.message",
  "pk": 917,
  "fields": {
    "created": "2018-01-24T00:30:07.091Z",
    "modified": "2018-01-24T00:30:07.092Z",
    "text": "like this",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:39:55Z",
    "origin_slack_event": 932
  }
},
{
  "model": "discussions.message",
  "pk": 918,
  "fields": {
    "created": "2018-01-24T00:30:07.095Z",
    "modified": "2018-01-24T00:30:07.095Z",
    "text": "yeah you just needed to move the function inside the class",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:39:54Z",
    "origin_slack_event": 933
  }
},
{
  "model": "discussions.message",
  "pk": 919,
  "fields": {
    "created": "2018-01-24T00:30:07.099Z",
    "modified": "2018-01-24T00:30:07.099Z",
    "text": "don't break your head around it, I am still not at this point so I just copy paste, it didn't work, gotta leave it when I learn other stuff and come to this point :slightly_smiling_face:",
    "session": 47,
    "author": 46,
    "time": "2018-01-22T02:38:46Z",
    "origin_slack_event": 934
  }
},
{
  "model": "discussions.message",
  "pk": 920,
  "fields": {
    "created": "2018-01-24T00:30:07.104Z",
    "modified": "2018-01-24T00:30:07.104Z",
    "text": "<https://jsfiddle.net/adkuca/dwqqupkf/>",
    "session": 47,
    "author": 46,
    "time": "2018-01-22T02:38:04Z",
    "origin_slack_event": 935
  }
},
{
  "model": "discussions.message",
  "pk": 921,
  "fields": {
    "created": "2018-01-24T00:30:07.108Z",
    "modified": "2018-01-24T00:30:07.108Z",
    "text": "can you paste code or a jsfiddle",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:37:00Z",
    "origin_slack_event": 936
  }
},
{
  "model": "discussions.message",
  "pk": 922,
  "fields": {
    "created": "2018-01-24T00:30:07.112Z",
    "modified": "2018-01-24T00:30:07.112Z",
    "text": "jqueryClone.addDelegateEventListener('mousedown', 'div', ...)",
    "session": 47,
    "author": 46,
    "time": "2018-01-22T02:34:11Z",
    "origin_slack_event": 937
  }
},
{
  "model": "discussions.message",
  "pk": 923,
  "fields": {
    "created": "2018-01-24T00:30:07.115Z",
    "modified": "2018-01-24T00:30:07.116Z",
    "text": "hm, kk ,tried this above tho, jQClone.addDelegateEventListener is not a functio",
    "session": 47,
    "author": 46,
    "time": "2018-01-22T02:34:00Z",
    "origin_slack_event": 938
  }
},
{
  "model": "discussions.message",
  "pk": 924,
  "fields": {
    "created": "2018-01-24T00:30:07.119Z",
    "modified": "2018-01-24T00:30:07.119Z",
    "text": "As far as I know that's not possible because `getElementById` returns an `Element` object. So you can only call `Element`'s class methods with the dot operator. And since Element isn't something you can alter, you won't be able to do that directly",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:31:56Z",
    "origin_slack_event": 939
  }
},
{
  "model": "discussions.message",
  "pk": 925,
  "fields": {
    "created": "2018-01-24T00:30:07.124Z",
    "modified": "2018-01-24T00:30:07.124Z",
    "text": "I am asking for stuff that I didn't learn yet, that's kinda dumb from my part but, I didn't test this, will do when I reach the part. But that's still off the syntax, there's no way to do it like `document.getElementById('outer').addDelegateEventList...`?",
    "session": 47,
    "author": 46,
    "time": "2018-01-22T02:28:19Z",
    "origin_slack_event": 940
  }
},
{
  "model": "discussions.message",
  "pk": 926,
  "fields": {
    "created": "2018-01-24T00:30:07.129Z",
    "modified": "2018-01-24T00:30:07.129Z",
    "text": "is that what you're asking?",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:09:53Z",
    "origin_slack_event": 941
  }
},
{
  "model": "discussions.message",
  "pk": 927,
  "fields": {
    "created": "2018-01-24T00:30:07.133Z",
    "modified": "2018-01-24T00:30:07.134Z",
    "text": "Then you use it by doing something like:\n```\nconst jqueryClone = new JqueryClone(document.getElementById('outer'))\njqueryClone.addDelegateEventListener('mousedown', 'div', ...)\n```",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:09:48Z",
    "origin_slack_event": 942
  }
},
{
  "model": "discussions.message",
  "pk": 928,
  "fields": {
    "created": "2018-01-24T00:30:07.137Z",
    "modified": "2018-01-24T00:30:07.137Z",
    "text": "```\nclass JqueryClone {\n\tconstructor(el) {\n  \tthis.el = el\n  }\n  \n  addDelegateEventListener(event, selected, callback) {\n    this.el.addEventListener(...)\n  }\n}\n```",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:08:28Z",
    "origin_slack_event": 943
  }
},
{
  "model": "discussions.message",
  "pk": 929,
  "fields": {
    "created": "2018-01-24T00:30:07.142Z",
    "modified": "2018-01-24T00:30:07.142Z",
    "text": "Something like:",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:08:23Z",
    "origin_slack_event": 944
  }
},
{
  "model": "discussions.message",
  "pk": 930,
  "fields": {
    "created": "2018-01-24T00:30:07.146Z",
    "modified": "2018-01-24T00:30:07.146Z",
    "text": "One way to do that would be to make a class, initialize your `outer` as an attribute of the class, and then have your `addDelegateEventListener` as a method on the class",
    "session": 47,
    "author": 112,
    "time": "2018-01-22T02:06:37Z",
    "origin_slack_event": 945
  }
},
{
  "model": "discussions.message",
  "pk": 931,
  "fields": {
    "created": "2018-01-24T00:30:07.149Z",
    "modified": "2018-01-24T00:30:07.149Z",
    "text": "Title: Mimic jQuery's Delegated Event Listener\nTags: js, vanilla, delegate, event listener\nDescription: So here I have a piece of code that basically does what jQuery's delegated event listener would do. This was purely just to learn.\n<https://jsfiddle.net/adkuca/rdrekqk2/2/>\nHow to make it that it would have the same syntax, like `outer.addDelegateEventListener('mousedown', 'div', function(evt){})`",
    "session": 47,
    "author": 71,
    "time": "2018-01-21T21:36:16Z",
    "origin_slack_event": 946
  }
},
{
  "model": "discussions.message",
  "pk": 932,
  "fields": {
    "created": "2018-01-24T00:30:07.381Z",
    "modified": "2018-01-24T00:30:07.382Z",
    "text": "I\u2019ll close it :slightly_smiling_face:",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T21:47:42Z",
    "origin_slack_event": 948
  }
},
{
  "model": "discussions.message",
  "pk": 933,
  "fields": {
    "created": "2018-01-24T00:30:07.385Z",
    "modified": "2018-01-24T00:30:07.385Z",
    "text": "Thank you, how to close session?",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T21:47:30Z",
    "origin_slack_event": 949
  }
},
{
  "model": "discussions.message",
  "pk": 934,
  "fields": {
    "created": "2018-01-24T00:30:07.388Z",
    "modified": "2018-01-24T00:30:07.389Z",
    "text": "cool",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:31:50Z",
    "origin_slack_event": 950
  }
},
{
  "model": "discussions.message",
  "pk": 935,
  "fields": {
    "created": "2018-01-24T00:30:07.392Z",
    "modified": "2018-01-24T00:30:07.392Z",
    "text": "thinking",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:31:47Z",
    "origin_slack_event": 951
  }
},
{
  "model": "discussions.message",
  "pk": 936,
  "fields": {
    "created": "2018-01-24T00:30:07.396Z",
    "modified": "2018-01-24T00:30:07.396Z",
    "text": "Yeah, thinkit how to gather everything into code",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:31:44Z",
    "origin_slack_event": 952
  }
},
{
  "model": "discussions.message",
  "pk": 937,
  "fields": {
    "created": "2018-01-24T00:30:07.399Z",
    "modified": "2018-01-24T00:30:07.399Z",
    "text": "does that make sense?",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:31:33Z",
    "origin_slack_event": 953
  }
},
{
  "model": "discussions.message",
  "pk": 938,
  "fields": {
    "created": "2018-01-24T00:30:07.403Z",
    "modified": "2018-01-24T00:30:07.403Z",
    "text": "```\n....\nline_one = Line(point_one, point_two)\nline_two = Line(point_three, point_four)\n\nline_one_slope = line_one.slope()\nline_two_slope = line_two.slope()\n```",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:28:42Z",
    "origin_slack_event": 954
  }
},
{
  "model": "discussions.message",
  "pk": 939,
  "fields": {
    "created": "2018-01-24T00:30:07.406Z",
    "modified": "2018-01-24T00:30:07.407Z",
    "text": "e.g.",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:28:04Z",
    "origin_slack_event": 955
  }
},
{
  "model": "discussions.message",
  "pk": 940,
  "fields": {
    "created": "2018-01-24T00:30:07.411Z",
    "modified": "2018-01-24T00:30:07.412Z",
    "text": "you could do it without a class",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:28:03Z",
    "origin_slack_event": 956
  }
},
{
  "model": "discussions.message",
  "pk": 941,
  "fields": {
    "created": "2018-01-24T00:30:07.415Z",
    "modified": "2018-01-24T00:30:07.415Z",
    "text": "Ah ok, you can\u2019t do it in Line class because you only have access to one Line object at a time",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:27:49Z",
    "origin_slack_event": 957
  }
},
{
  "model": "discussions.message",
  "pk": 942,
  "fields": {
    "created": "2018-01-24T00:30:07.420Z",
    "modified": "2018-01-24T00:30:07.421Z",
    "text": "in python its just Line",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:27:21Z",
    "origin_slack_event": 958
  }
},
{
  "model": "discussions.message",
  "pk": 943,
  "fields": {
    "created": "2018-01-24T00:30:07.426Z",
    "modified": "2018-01-24T00:30:07.426Z",
    "text": "in c# that class sis LineCalculator",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:27:16Z",
    "origin_slack_event": 959
  }
},
{
  "model": "discussions.message",
  "pk": 944,
  "fields": {
    "created": "2018-01-24T00:30:07.429Z",
    "modified": "2018-01-24T00:30:07.429Z",
    "text": "Because I was trying to do that within same class",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:27:05Z",
    "origin_slack_event": 960
  }
},
{
  "model": "discussions.message",
  "pk": 945,
  "fields": {
    "created": "2018-01-24T00:30:07.433Z",
    "modified": "2018-01-24T00:30:07.433Z",
    "text": "What do you mean by that?",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:27:04Z",
    "origin_slack_event": 961
  }
},
{
  "model": "discussions.message",
  "pk": 946,
  "fields": {
    "created": "2018-01-24T00:30:07.436Z",
    "modified": "2018-01-24T00:30:07.436Z",
    "text": "But as I understand I have to create new class ?",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:26:51Z",
    "origin_slack_event": 962
  }
},
{
  "model": "discussions.message",
  "pk": 947,
  "fields": {
    "created": "2018-01-24T00:30:07.439Z",
    "modified": "2018-01-24T00:30:07.440Z",
    "text": "so you\u2019d do something like\u2026\n```\nclass LineCalculator:\n    def __init__(self, line_one, line_two):\n        self.line_one = line_one\n        self.line_two = line_two\n\n    def parallel(self):\n        equal_slope = False\n        line_one_slope = self.line_one.slope()\n        line_two_slope = self.line_two.slope()\n        ....\n\n# here's where you would pass the lines you create...\npoint_one = Point(1, 2)\npoint_two = Point(13, 8)\nline_one = Line(point_one, point_two)\n\n# same thing for line_two...\n....\n\nline_calculator = LineCalculator(line_one, line_two)\n.... \n```",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:18:37Z",
    "origin_slack_event": 963
  }
},
{
  "model": "discussions.message",
  "pk": 948,
  "fields": {
    "created": "2018-01-24T00:30:07.444Z",
    "modified": "2018-01-24T00:30:07.444Z",
    "text": "does that make sense?",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:15:49Z",
    "origin_slack_event": 964
  }
},
{
  "model": "discussions.message",
  "pk": 949,
  "fields": {
    "created": "2018-01-24T00:30:07.448Z",
    "modified": "2018-01-24T00:30:07.448Z",
    "text": "then you can do `self.line_one.slope()` and `self.line_two.slope()`",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:15:32Z",
    "origin_slack_event": 965
  }
},
{
  "model": "discussions.message",
  "pk": 950,
  "fields": {
    "created": "2018-01-24T00:30:07.451Z",
    "modified": "2018-01-24T00:30:07.451Z",
    "text": "Similar to how you had an argument for p1 and p2 in your Line\u2019s `__init__` function",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:15:18Z",
    "origin_slack_event": 966
  }
},
{
  "model": "discussions.message",
  "pk": 951,
  "fields": {
    "created": "2018-01-24T00:30:07.454Z",
    "modified": "2018-01-24T00:30:07.454Z",
    "text": "nope, so in your LineCalculator\u2019s `__init__` function, you\u2019ll want an argument for `line_one` and `line_two`",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:15:04Z",
    "origin_slack_event": 967
  }
},
{
  "model": "discussions.message",
  "pk": 952,
  "fields": {
    "created": "2018-01-24T00:30:07.458Z",
    "modified": "2018-01-24T00:30:07.458Z",
    "text": "like that ?",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:14:30Z",
    "origin_slack_event": 968
  }
},
{
  "model": "discussions.message",
  "pk": 953,
  "fields": {
    "created": "2018-01-24T00:30:07.462Z",
    "modified": "2018-01-24T00:30:07.463Z",
    "text": "<@U8XGHR79T> uploaded a file: <https://codeclippy.slack.com/files/U8XGHR79T/F8XAY2Z2P/-.py|Untitled>",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:14:26Z",
    "origin_slack_event": 969
  }
},
{
  "model": "discussions.message",
  "pk": 954,
  "fields": {
    "created": "2018-01-24T00:30:07.466Z",
    "modified": "2018-01-24T00:30:07.467Z",
    "text": "as that\u2019s a method on your `Line` class",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:13:59Z",
    "origin_slack_event": 970
  }
},
{
  "model": "discussions.message",
  "pk": 955,
  "fields": {
    "created": "2018-01-24T00:30:07.470Z",
    "modified": "2018-01-24T00:30:07.471Z",
    "text": "and then for each line, you can call `line.slope()`",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:13:52Z",
    "origin_slack_event": 971
  }
},
{
  "model": "discussions.message",
  "pk": 956,
  "fields": {
    "created": "2018-01-24T00:30:07.476Z",
    "modified": "2018-01-24T00:30:07.476Z",
    "text": "so for there you would instantiate your LineCalculator with two lines in python",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:13:38Z",
    "origin_slack_event": 972
  }
},
{
  "model": "discussions.message",
  "pk": 957,
  "fields": {
    "created": "2018-01-24T00:30:07.480Z",
    "modified": "2018-01-24T00:30:07.480Z",
    "text": "decimal line1Slope = line1.GetSlope();\n            decimal line2Slope = line2.GetSlope();",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:13:04Z",
    "origin_slack_event": 973
  }
},
{
  "model": "discussions.message",
  "pk": 958,
  "fields": {
    "created": "2018-01-24T00:30:07.484Z",
    "modified": "2018-01-24T00:30:07.484Z",
    "text": "I dont get how to replicate this part",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:13:04Z",
    "origin_slack_event": 974
  }
},
{
  "model": "discussions.message",
  "pk": 959,
  "fields": {
    "created": "2018-01-24T00:30:07.487Z",
    "modified": "2018-01-24T00:30:07.488Z",
    "text": "I'm trying to replicate IsParallel function",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:12:44Z",
    "origin_slack_event": 975
  }
},
{
  "model": "discussions.message",
  "pk": 960,
  "fields": {
    "created": "2018-01-24T00:30:07.491Z",
    "modified": "2018-01-24T00:30:07.492Z",
    "text": "what\u2019s not working well right now?",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:12:31Z",
    "origin_slack_event": 976
  }
},
{
  "model": "discussions.message",
  "pk": 961,
  "fields": {
    "created": "2018-01-24T00:30:07.495Z",
    "modified": "2018-01-24T00:30:07.495Z",
    "text": "<@U8XGHR79T> uploaded a file: <https://codeclippy.slack.com/files/U8XGHR79T/F8WT3E9MF/c_.cs|c#>",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:12:29Z",
    "origin_slack_event": 977
  }
},
{
  "model": "discussions.message",
  "pk": 962,
  "fields": {
    "created": "2018-01-24T00:30:07.501Z",
    "modified": "2018-01-24T00:30:07.501Z",
    "text": "<@U8XGHR79T> uploaded a file: <https://codeclippy.slack.com/files/U8XGHR79T/F8Y9HQWKY/py.py|Py>",
    "session": 48,
    "author": 104,
    "time": "2018-01-23T20:12:12Z",
    "origin_slack_event": 978
  }
},
{
  "model": "discussions.message",
  "pk": 963,
  "fields": {
    "created": "2018-01-24T00:30:07.504Z",
    "modified": "2018-01-24T00:30:07.505Z",
    "text": "Hey <@U8XGHR79T> can you post the relevant C# and python code here?",
    "session": 48,
    "author": 117,
    "time": "2018-01-23T20:11:54Z",
    "origin_slack_event": 979
  }
},
{
  "model": "discussions.message",
  "pk": 964,
  "fields": {
    "created": "2018-01-24T00:30:07.508Z",
    "modified": "2018-01-24T00:30:07.508Z",
    "text": "Title: Trying to replicate c# function in python\nTags: c#, python\nDescription: So I'm trying to replicate function which is written in c#. In c# it passes two objects to the function, which is pretty clear how everything works, but I can't replicate same functionality in python",
    "session": 48,
    "author": 71,
    "time": "2018-01-23T20:11:34Z",
    "origin_slack_event": 980
  }
},
{
  "model": "discussions.message",
  "pk": 965,
  "fields": {
    "created": "2018-01-24T00:30:07.918Z",
    "modified": "2018-01-24T00:30:07.918Z",
    "text": "<https://pexpect.readthedocs.io/en/stable/>",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T22:00:52Z",
    "origin_slack_event": 982
  }
},
{
  "model": "discussions.message",
  "pk": 966,
  "fields": {
    "created": "2018-01-24T00:30:07.922Z",
    "modified": "2018-01-24T00:30:07.922Z",
    "text": "and, if you are using Linux, you might like to use PExpect",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T22:00:50Z",
    "origin_slack_event": 983
  }
},
{
  "model": "discussions.message",
  "pk": 967,
  "fields": {
    "created": "2018-01-24T00:30:07.926Z",
    "modified": "2018-01-24T00:30:07.926Z",
    "text": "```push.stdin.write(username)\n# ...figure out how long or why you need to wait...\npush.stdin.write(password)```",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T21:59:51Z",
    "origin_slack_event": 984
  }
},
{
  "model": "discussions.message",
  "pk": 968,
  "fields": {
    "created": "2018-01-24T00:30:07.929Z",
    "modified": "2018-01-24T00:30:07.930Z",
    "text": "so you will need to do the following instead:",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T21:59:16Z",
    "origin_slack_event": 985
  }
},
{
  "model": "discussions.message",
  "pk": 969,
  "fields": {
    "created": "2018-01-24T00:30:07.933Z",
    "modified": "2018-01-24T00:30:07.933Z",
    "text": "<@U8DTA00SZ> you will face another issue, `communicate` could send the input to the subprocess only once and then it closes the stdin pipe",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T21:59:07Z",
    "origin_slack_event": 986
  }
},
{
  "model": "discussions.message",
  "pk": 970,
  "fields": {
    "created": "2018-01-24T00:30:07.936Z",
    "modified": "2018-01-24T00:30:07.936Z",
    "text": "what output does the following produce?\n`b= push.communicate('davidgaymar')`",
    "session": 49,
    "author": 96,
    "time": "2017-12-13T20:51:45Z",
    "origin_slack_event": 987
  }
},
{
  "model": "discussions.message",
  "pk": 971,
  "fields": {
    "created": "2018-01-24T00:30:07.941Z",
    "modified": "2018-01-24T00:30:07.941Z",
    "text": "Vikas Neha Ojha [10 hours ago] \nYou would need to use `subprocess.Popen`\n\n\nVikas Neha Ojha [10 hours ago] \n<https://docs.python.org/2/library/subprocess.html#popen-constructor>\n\n\nVikas Neha Ojha [10 hours ago] \nfor ex:\n```from subprocess import Popen\np = Popen(['ngrok', 'http', '5000'])\n# ... do other stuff while subprocess is running\np.terminate()```\n\n\nVikas Neha Ojha [10 hours ago] \nThe Popen instance can do various other things like you can `poll()` it to see if it is still running, and you can `communicate()` with it to send it data on stdin, and wait for it to terminate.\n\n\ndageismar [9 hours ago] \nso I dont need to create background processes ? Popen will automatically run my processes in parallel without blocking the script ?\n\n\nVikas Neha Ojha [9 hours ago] \nyes\n\ndageismar [2 hours ago] \nhey there I have managed to do all that\n\ndageismar [2 hours ago] \nbut I m stuck on one thing now : I m trying to automate a push to github so I need to communicate with stdin.\nI manage to send the gitpush command line :\n```    push = subprocess.Popen([\"git\", \"push\", \"origin\", \"master\"], cwd='/Users/davidgeismar/code/davidgeismar/python/repo_test', stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n```\nbut I cant find the way to send data to the process (it asks me first for my username and then my password.\nI tried this :\n```b= push.communicate(b'davidgaymar')```\nbut it doesnt seem to work. Any ideas ? thanks again for your help\n\n\nVikas Neha Ojha [2 minutes ago] \nwhat issue are you facing with this?\n\n\nVikas Neha Ojha [2 minutes ago] \n<@U8C2LGL7N>, <@U8C281TT6> <@U8CSK1KBQ> I didnt create a channel while replying to this for the first time, please take a look as to what could be done now?\n\n\nVikas Neha Ojha [&lt; 1 minute ago] \n<@U8DTA00SZ>, try to send the input as string and not bytes, i.e.,\n`b= push.communicate('davidgaymar')`",
    "session": 49,
    "author": 112,
    "time": "2017-12-13T20:20:24Z",
    "origin_slack_event": 988
  }
},
{
  "model": "discussions.message",
  "pk": 972,
  "fields": {
    "created": "2018-01-24T00:30:07.945Z",
    "modified": "2018-01-24T00:30:07.945Z",
    "text": "*Title*: Launching subprocesses in parallel in python script without blocking execution of the script\n*Tags*: Python, Subprocess\n*Description* : I am writting a test method for my flask app in which I need to 1) launch my flask app 2) expose it publicly with ngrok.\nThus I need to launch two processes from my test script :\n```python app.py```\n==&gt; launching my flask app\n```ngrok http 5000```\n==&gt; listening to port 5000 (on which the Flask app is running and exposing public Url\nin the case of the ngrok process I also need to get the output of the ngrok command in order to get the url on which I am publicly exposing the flask app.\nI need this to process to run in parallel and not to block the execution of my script.\nI am really unsure about how to do this. I was thinking about running background processes ? I went through <https://docs.python.org/2/library/subprocess.html>, but I cant figure much out of the docs. So far I have only be able to launch a process from my script but it\u2019s blocking the rest of my script.\nI will also need to kill the processes at the end of my script.\nCould someone please help and maybe give me an exampel as how they would achieve this ?",
    "session": 49,
    "author": 71,
    "time": "2017-12-13T20:19:52Z",
    "origin_slack_event": 989
  }
},
{
  "model": "discussions.message",
  "pk": 973,
  "fields": {
    "created": "2018-01-24T00:30:08.412Z",
    "modified": "2018-01-24T00:30:08.412Z",
    "text": "all in all, the ability to chat made this a much better experience than stack oveflow",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:43:27Z",
    "origin_slack_event": 990
  }
},
{
  "model": "discussions.message",
  "pk": 974,
  "fields": {
    "created": "2018-01-24T00:30:08.415Z",
    "modified": "2018-01-24T00:30:08.415Z",
    "text": "Yeah feel free to share with friends, either to post topics or to help out on posts that other people share",
    "session": 50,
    "author": 76,
    "time": "2017-12-15T22:42:53Z",
    "origin_slack_event": 991
  }
},
{
  "model": "discussions.message",
  "pk": 975,
  "fields": {
    "created": "2018-01-24T00:30:08.418Z",
    "modified": "2018-01-24T00:30:08.419Z",
    "text": "you got it!",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:42:39Z",
    "origin_slack_event": 992
  }
},
{
  "model": "discussions.message",
  "pk": 976,
  "fields": {
    "created": "2018-01-24T00:30:08.422Z",
    "modified": "2018-01-24T00:30:08.423Z",
    "text": "yup! we\u2019re piloting to see what kind of usage we get, what people find valuable, etc. would be awesome if you got some more people to join in! appreciate it",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:42:14Z",
    "origin_slack_event": 993
  }
},
{
  "model": "discussions.message",
  "pk": 977,
  "fields": {
    "created": "2018-01-24T00:30:08.426Z",
    "modified": "2018-01-24T00:30:08.427Z",
    "text": "You work on this codeclippy project, correct? I definitely will be using this again and recommending it to friends.",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:41:23Z",
    "origin_slack_event": 994
  }
},
{
  "model": "discussions.message",
  "pk": 978,
  "fields": {
    "created": "2018-01-24T00:30:08.430Z",
    "modified": "2018-01-24T00:30:08.430Z",
    "text": "This is working by the way, so thank you so much. My code is not `console.log()`ing what I thought it would, but my issue with the servers has been solved.",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:40:58Z",
    "origin_slack_event": 995
  }
},
{
  "model": "discussions.message",
  "pk": 979,
  "fields": {
    "created": "2018-01-24T00:30:08.433Z",
    "modified": "2018-01-24T00:30:08.433Z",
    "text": "yeah i've looked into using the SetUp functionality. It's `beforeEach()`, very similar to Jasmie I think.",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:40:14Z",
    "origin_slack_event": 996
  }
},
{
  "model": "discussions.message",
  "pk": 980,
  "fields": {
    "created": "2018-01-24T00:30:08.437Z",
    "modified": "2018-01-24T00:30:08.437Z",
    "text": "that\u2019s not exactly what you want^ i got rid of the critical done(), but something like that where you only start the server once (maybe in jest\u2019s SetUp functionality, i\u2019m not sure what the syntax is for it), and then use it over and over again in tests",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:39:06Z",
    "origin_slack_event": 997
  }
},
{
  "model": "discussions.message",
  "pk": 981,
  "fields": {
    "created": "2018-01-24T00:30:08.441Z",
    "modified": "2018-01-24T00:30:08.442Z",
    "text": "a better optimization here: do something like\n```\napp.use(...);\napp.listen(4000, function () {\n  it('returns json data', (done) =&gt; {\n    expect.assertions(2);\n    getFeedData('L').then((data) =&gt; {\n      expect(data).toBeDefined();\n      expect(data.header.gtfs_realtime_version).toBe('1.0');\n    });\n  }\n  ...\n}\n```",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:38:20Z",
    "origin_slack_event": 998
  }
},
{
  "model": "discussions.message",
  "pk": 982,
  "fields": {
    "created": "2018-01-24T00:30:08.445Z",
    "modified": "2018-01-24T00:30:08.446Z",
    "text": "so i think the snippet i sent would work",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:35:56Z",
    "origin_slack_event": 999
  }
},
{
  "model": "discussions.message",
  "pk": 983,
  "fields": {
    "created": "2018-01-24T00:30:08.449Z",
    "modified": "2018-01-24T00:30:08.449Z",
    "text": "`Starts a UNIX socket and listens for connections on the given path. This method is identical to Node's http.Server.listen().`",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:35:32Z",
    "origin_slack_event": 1000
  }
},
{
  "model": "discussions.message",
  "pk": 984,
  "fields": {
    "created": "2018-01-24T00:30:08.452Z",
    "modified": "2018-01-24T00:30:08.453Z",
    "text": "fair topic - per the docs, app.listen() calls server.listen() before it executes that callback",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:35:30Z",
    "origin_slack_event": 1001
  }
},
{
  "model": "discussions.message",
  "pk": 985,
  "fields": {
    "created": "2018-01-24T00:30:08.457Z",
    "modified": "2018-01-24T00:30:08.457Z",
    "text": "because otherwise, i don't understand where in the test the server starts listening",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:34:35Z",
    "origin_slack_event": 1002
  }
},
{
  "model": "discussions.message",
  "pk": 986,
  "fields": {
    "created": "2018-01-24T00:30:08.461Z",
    "modified": "2018-01-24T00:30:08.462Z",
    "text": "when you call `server.close()` is that server being started, the tests run, and then the server closed?",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:33:56Z",
    "origin_slack_event": 1003
  }
},
{
  "model": "discussions.message",
  "pk": 987,
  "fields": {
    "created": "2018-01-24T00:30:08.465Z",
    "modified": "2018-01-24T00:30:08.465Z",
    "text": "haha sorry",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:33:30Z",
    "origin_slack_event": 1004
  }
},
{
  "model": "discussions.message",
  "pk": 988,
  "fields": {
    "created": "2018-01-24T00:30:08.469Z",
    "modified": "2018-01-24T00:30:08.469Z",
    "text": "could you elaborate what you are referring to with \u201cwhole thing\u201d?",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:33:20Z",
    "origin_slack_event": 1005
  }
},
{
  "model": "discussions.message",
  "pk": 989,
  "fields": {
    "created": "2018-01-24T00:30:08.472Z",
    "modified": "2018-01-24T00:30:08.472Z",
    "text": "so i think your second solution is what i'm looking for. i saw references online to doing something similar, but i wasn't sure how that `server = app.....` would work or if it would actually be run since it's just a variable. is the whole thing being run when you call `server.close()`?",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:32:37Z",
    "origin_slack_event": 1006
  }
},
{
  "model": "discussions.message",
  "pk": 990,
  "fields": {
    "created": "2018-01-24T00:30:08.477Z",
    "modified": "2018-01-24T00:30:08.477Z",
    "text": "reading through them right now",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:30:40Z",
    "origin_slack_event": 1007
  }
},
{
  "model": "discussions.message",
  "pk": 991,
  "fields": {
    "created": "2018-01-24T00:30:08.480Z",
    "modified": "2018-01-24T00:30:08.481Z",
    "text": "what do you think of the first two (mostly the second) suggestions",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:30:32Z",
    "origin_slack_event": 1008
  }
},
{
  "model": "discussions.message",
  "pk": 992,
  "fields": {
    "created": "2018-01-24T00:30:08.484Z",
    "modified": "2018-01-24T00:30:08.484Z",
    "text": "ah ok, that seems reasonable then",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:30:15Z",
    "origin_slack_event": 1009
  }
},
{
  "model": "discussions.message",
  "pk": 993,
  "fields": {
    "created": "2018-01-24T00:30:08.487Z",
    "modified": "2018-01-24T00:30:08.487Z",
    "text": "the app i'm building is using a fairly complicated promise-based architecture in this script. i'm working through that and making sure i understand what's being returned with each promise. to do that, i'm serving mock data that is pulled from the real api i'll be eventually querying. i realize that i'm making the testing more complicated than it needs to be, but that's for the purpose of my being able to properly learn and understand the rest of the code i'm writing.",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:29:53Z",
    "origin_slack_event": 1010
  }
},
{
  "model": "discussions.message",
  "pk": 994,
  "fields": {
    "created": "2018-01-24T00:30:08.491Z",
    "modified": "2018-01-24T00:30:08.491Z",
    "text": "now if you get into the world of functional testing (as opposed to this unit testing), different story, but probably not what you\u2019re going for at this stage",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:28:44Z",
    "origin_slack_event": 1011
  }
},
{
  "model": "discussions.message",
  "pk": 995,
  "fields": {
    "created": "2018-01-24T00:30:08.495Z",
    "modified": "2018-01-24T00:30:08.495Z",
    "text": "and it is usually unnecessary. axios is a well-tested library that makes sure that the over-the-wire http handling is done correctly. the only thing that should be of concern to you is your application logic. along that line of thinking, if you decouple your functions so that there is one, super simple, untested function that does the axios call (which you don\u2019t need to test), and then separate functions with your more complicated application logic that you can unit test separately",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:28:10Z",
    "origin_slack_event": 1012
  }
},
{
  "model": "discussions.message",
  "pk": 996,
  "fields": {
    "created": "2018-01-24T00:30:08.500Z",
    "modified": "2018-01-24T00:30:08.500Z",
    "text": "yeah exactly. the reason my tests are the way they are is this:",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:27:20Z",
    "origin_slack_event": 1013
  }
},
{
  "model": "discussions.message",
  "pk": 997,
  "fields": {
    "created": "2018-01-24T00:30:08.504Z",
    "modified": "2018-01-24T00:30:08.504Z",
    "text": "because dealing with http requests in tests tends to get really messy",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:26:06Z",
    "origin_slack_event": 1014
  }
},
{
  "model": "discussions.message",
  "pk": 998,
  "fields": {
    "created": "2018-01-24T00:30:08.508Z",
    "modified": "2018-01-24T00:30:08.508Z",
    "text": "generally, at a higher level, if i were you i would think about what you\u2019re trying to accomplish with these tests",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:25:49Z",
    "origin_slack_event": 1015
  }
},
{
  "model": "discussions.message",
  "pk": 999,
  "fields": {
    "created": "2018-01-24T00:30:08.513Z",
    "modified": "2018-01-24T00:30:08.513Z",
    "text": "fyi i\u2019m looking at <http://expressjs.com/en/api.html#app.disable> and <https://nodejs.org/api/http.html#http_class_http_server>",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:24:30Z",
    "origin_slack_event": 1016
  }
},
{
  "model": "discussions.message",
  "pk": 1000,
  "fields": {
    "created": "2018-01-24T00:30:08.516Z",
    "modified": "2018-01-24T00:30:08.517Z",
    "text": "then you could use the same port, no new param needed (didn\u2019t test it but that should solve your clashing ports)",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:24:07Z",
    "origin_slack_event": 1017
  }
},
{
  "model": "discussions.message",
  "pk": 1001,
  "fields": {
    "created": "2018-01-24T00:30:08.520Z",
    "modified": "2018-01-24T00:30:08.520Z",
    "text": "slightly cleaner than above would be:\n```\nit('returns json data', (done) =&gt; {\n    server = app.listen(4000, function () {\n        expect.assertions(2);\n        return getFeedData('L').then((data) =&gt; {\n            expect(data).toBeDefined();\n            expect(data.header.gtfs_realtime_version).toBe('1.0');\n        });\n    });\n    server.close();\n    done();\n});\n```",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:23:48Z",
    "origin_slack_event": 1018
  }
},
{
  "model": "discussions.message",
  "pk": 1002,
  "fields": {
    "created": "2018-01-24T00:30:08.524Z",
    "modified": "2018-01-24T00:30:08.524Z",
    "text": "thinking of the best way to approach this problem from a higher level though",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:21:18Z",
    "origin_slack_event": 1019
  }
},
{
  "model": "discussions.message",
  "pk": 1003,
  "fields": {
    "created": "2018-01-24T00:30:08.527Z",
    "modified": "2018-01-24T00:30:08.527Z",
    "text": "a working but probably unideal solution to your direct topic would probably be: add a parameter to getFeedData and isDelay called port, then do what you said: start app.listen() on different ports, and when making the requests in the tests, pass in the correct port number",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:21:08Z",
    "origin_slack_event": 1020
  }
},
{
  "model": "discussions.message",
  "pk": 1004,
  "fields": {
    "created": "2018-01-24T00:30:08.531Z",
    "modified": "2018-01-24T00:30:08.531Z",
    "text": "Yup thanks, looking/reading",
    "session": 50,
    "author": 112,
    "time": "2017-12-15T22:12:07Z",
    "origin_slack_event": 1021
  }
},
{
  "model": "discussions.message",
  "pk": 1005,
  "fields": {
    "created": "2018-01-24T00:30:08.534Z",
    "modified": "2018-01-24T00:30:08.534Z",
    "text": "Hi all. Not exactly sure how this works. Did I offer sufficient information on my problem?",
    "session": 50,
    "author": 54,
    "time": "2017-12-15T22:11:26Z",
    "origin_slack_event": 1022
  }
},
{
  "model": "discussions.message",
  "pk": 1006,
  "fields": {
    "created": "2018-01-24T00:30:08.538Z",
    "modified": "2018-01-24T00:30:08.538Z",
    "text": "*Title:* JavaScript single request to two different ports\n*Tags:* JavaScript, Express.js, Jest\n*Github link:* <http://github.com/benuchadnezzar/subway-checker>\n*Description:* I'm testing a script where one function makes an http request and is then called in another function.\nThe first function is:\n```export function getFeedData (sub) {\n    if (getFeedId(sub) === 2) {\n        return axios.get('<http://localhost:4000>').then((data) =&gt; \nJSON.parse(data));\n    }\n}```\nAnd the second is:\n```export function isDelay (sub, stop) {\n    return getFeedData(sub).then((data) =&gt; {\n        return data.entity.filter((entityObj) =&gt; {\n            return entityObj.stop_time_update !== undefined;\n        });\n    }).then((newData) =&gt;  {\n        console.log(newData);\n    }).catch((err) =&gt; {\n        console.log(err);\n    });\n}```\nThe reason they're two different functions is that the second will eventually be longer, and I wanted to separate everything out for the sake of simplicity and making my code a bit more declarative.\nThe tests for these functions currently look like this:\n```import express from 'express';\nimport { getFeedId, getFeedData, reverseStop, isDelay } from \n'../mocks/apiMock';\n\nconst app = express();\napp.use(express.static('../mocks/MockData.json'));\n\nit('returns json data', (done) =&gt; {\n    app.listen(4000, function () {\n        expect.assertions(2);\n        return getFeedData('L').then((data) =&gt; {\n            expect(data).toBeDefined();\n            expect(data.header.gtfs_realtime_version).toBe('1.0');\n        });\n    });\n    done();\n});\n\nit('returns either the delay or time until the next train' , (done) \n=&gt; {\n    app.listen(4000, function () {\n        isDelay('L', 'Lorimer St');\n    });\n    done();\n});```\nThat second test doesn't run because it's trying to listen on a port that's already occupied.\nThe solution I had in mind would be to pass `app.listen()` `0` as its first parameter so it listens on a random port. However, I don't know how I could get my axios request to request that specific port. Is there a way to do this? Or perhaps a better solution to my problem?",
    "session": 50,
    "author": 71,
    "time": "2017-12-15T22:06:16Z",
    "origin_slack_event": 1023
  }
},
{
  "model": "discussions.reply",
  "pk": 6,
  "fields": {
    "created": "2018-01-24T00:30:00.797Z",
    "modified": "2018-01-24T00:30:00.798Z",
    "text": "`.onchange` is not a valid jQuery function, is it?",
    "message": 578,
    "author": 112,
    "time": "2018-01-05T22:23:10Z",
    "origin_slack_event": 586
  }
},
{
  "model": "discussions.reply",
  "pk": 7,
  "fields": {
    "created": "2018-01-24T00:30:00.804Z",
    "modified": "2018-01-24T00:30:00.804Z",
    "text": "Not sure why `.change()` doesn't work, that's bizarre, seems like people all over StackOverflow have the same issue. Best guess is that it's actually broken in jQuery but nobody's bothered to fix it because `.on(\"change\")` works fine + modern webdev doesn't tend to use much if any jQuery anymore",
    "message": 578,
    "author": 112,
    "time": "2018-01-05T22:22:56Z",
    "origin_slack_event": 587
  }
},
{
  "model": "discussions.reply",
  "pk": 8,
  "fields": {
    "created": "2018-01-24T00:30:00.810Z",
    "modified": "2018-01-24T00:30:00.810Z",
    "text": "Example: <https://jsfiddle.net/s7kpk1zj/>",
    "message": 577,
    "author": 112,
    "time": "2018-01-05T22:06:33Z",
    "origin_slack_event": 588
  }
},
{
  "model": "discussions.reply",
  "pk": 9,
  "fields": {
    "created": "2018-01-24T00:30:00.816Z",
    "modified": "2018-01-24T00:30:00.816Z",
    "text": "<https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver>",
    "message": 577,
    "author": 112,
    "time": "2018-01-05T22:06:27Z",
    "origin_slack_event": 589
  }
},
{
  "model": "discussions.reply",
  "pk": 10,
  "fields": {
    "created": "2018-01-24T00:30:00.822Z",
    "modified": "2018-01-24T00:30:00.823Z",
    "text": "You could probably use a MutationObserver",
    "message": 577,
    "author": 112,
    "time": "2018-01-05T22:06:22Z",
    "origin_slack_event": 590
  }
},
{
  "model": "discussions.reply",
  "pk": 11,
  "fields": {
    "created": "2018-01-24T00:30:02.878Z",
    "modified": "2018-01-24T00:30:02.878Z",
    "text": "just to be clear where Ignoring event comes from; you're right it looks like it should be caught by the first `if`",
    "message": 720,
    "author": 112,
    "time": "2018-01-09T16:21:05Z",
    "origin_slack_event": 736
  }
},
{
  "model": "discussions.reply",
  "pk": 12,
  "fields": {
    "created": "2018-01-24T00:30:03.618Z",
    "modified": "2018-01-24T00:30:03.618Z",
    "text": "After further discussion, seems like there's a wider array of possible settings than we initially brainstormed, and so a `setting` table is entirely appropriate and there's plenty to read about it. Here's a few links <https://stackoverflow.com/topics/10204902/database-design-for-user-settings> (scroll down to most upvoted answer), <http://culttt.com/2015/02/02/storing-user-settings-relational-database/> -- we're going to go with the \"property bag\" approach",
    "message": 728,
    "author": 112,
    "time": "2018-01-16T14:25:17Z",
    "origin_slack_event": 742
  }
},
{
  "model": "discussions.reply",
  "pk": 13,
  "fields": {
    "created": "2018-01-24T00:30:03.941Z",
    "modified": "2018-01-24T00:30:03.941Z",
    "text": "ah nevermind, seems like option_widget is for each selection whereas widget is basically a wrapping widget for all the selections",
    "message": 743,
    "author": 112,
    "time": "2018-01-15T17:50:48Z",
    "origin_slack_event": 764
  }
},
{
  "model": "discussions.reply",
  "pk": 14,
  "fields": {
    "created": "2018-01-24T00:30:03.947Z",
    "modified": "2018-01-24T00:30:03.947Z",
    "text": "does the `widget=` arg in the SelectMultipleField initialization do anything? looks like wtforms uses `option_widget` as the widget",
    "message": 743,
    "author": 112,
    "time": "2018-01-15T17:44:15Z",
    "origin_slack_event": 765
  }
},
{
  "model": "discussions.reply",
  "pk": 15,
  "fields": {
    "created": "2018-01-24T00:30:07.154Z",
    "modified": "2018-01-24T00:30:07.155Z",
    "text": "Missed replacing `context` with `this.el` in a few spots, maybe there's other small bugs, but that's the idea for the original topic",
    "message": 916,
    "author": 112,
    "time": "2018-01-22T02:46:28Z",
    "origin_slack_event": 947
  }
},
{
  "model": "discussions.reply",
  "pk": 16,
  "fields": {
    "created": "2018-01-24T00:30:07.514Z",
    "modified": "2018-01-24T00:30:07.515Z",
    "text": "features coming soon to allow posters to do it themselves :slightly_smiling_face:",
    "message": 933,
    "author": 76,
    "time": "2018-01-23T21:48:13Z",
    "origin_slack_event": 981
  }
},
{
  "model": "discussions.reply",
  "pk": 17,
  "fields": {
    "created": "2018-01-24T00:30:08.545Z",
    "modified": "2018-01-24T00:30:08.545Z",
    "text": "Anytime. Still working on the onboarding, so topics like this are helpful!",
    "message": 1005,
    "author": 76,
    "time": "2017-12-15T22:15:23Z",
    "origin_slack_event": 1024
  }
},
{
  "model": "discussions.reply",
  "pk": 18,
  "fields": {
    "created": "2018-01-24T00:30:08.551Z",
    "modified": "2018-01-24T00:30:08.551Z",
    "text": "Oh cool! Thanks for the info.",
    "message": 1005,
    "author": 54,
    "time": "2017-12-15T22:14:50Z",
    "origin_slack_event": 1025
  }
},
{
  "model": "discussions.reply",
  "pk": 19,
  "fields": {
    "created": "2018-01-24T00:30:08.558Z",
    "modified": "2018-01-24T00:30:08.558Z",
    "text": "The way it works is that posts in <#C8BHN5A81|help> are flagged as :sos: until someone offers to help answer the topic. In this case <@U8C281TT6> offered to help, so he switched the tag over to :ok: , but we forgot to mention it in this thread. In the future, if no one is helping you, you should tag the post in <#C8BHN5A81|help> as :sos:  until someone helps, and as :white_check_mark: once you\u2019ve been helped",
    "message": 1005,
    "author": 76,
    "time": "2017-12-15T22:13:46Z",
    "origin_slack_event": 1026
  }
}
]

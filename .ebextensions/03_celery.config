files:
  "/etc/awslogs/config/celery.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      [/opt/python/log/celerybeat.log]
      log_group_name = `{"Fn::Join":["/", ["/aws/elasticbeanstalk", { "Ref":"AWSEBEnvironmentName" }, "opt/python/log/celerybeat.log"]]}`
      log_stream_name = {instance_id}
      file=/opt/python/log/celerybeat.log

      [/opt/python/log/celeryworker.log]
      log_group_name = `{"Fn::Join":["/", ["/aws/elasticbeanstalk", { "Ref":"AWSEBEnvironmentName" }, "opt/python/log/celeryworker.log"]]}`
      log_stream_name = {instance_id}
      file=/opt/python/log/celeryworker.log

  "/opt/python/etc/celery.conf":
    mode: "000755"
    owner: root
    group: root
    content: |
      ; ========================
      ;  celery beat supervisor
      ; ========================

      [program:celerybeat]
      ; Load environmental variables and start beat
      command=/bin/bash -c "source /opt/python/current/env && /opt/python/run/venv/bin/celery beat -A app --pidfile=/tmp/celerybeat.pid"

      ; Full path to Django app
      directory=/opt/python/current/app
      user=nobody
      numprocs=1
      stdout_logfile=/opt/python/log/celerybeat.log
      stderr_logfile=/opt/python/log/celerybeat.log
      autostart=true
      autorestart=true
      startsecs=10

      ; Set its priority higher so it starts first
      priority=999

      ; ==========================
      ;  celery worker supervisor
      ; ==========================

      [program:celeryworker]
      ; Load environmental variables and start worker
      command=/bin/bash -c "source /opt/python/current/env && /opt/python/run/venv/bin/celery -A app worker -l info --pidfile=/tmp/celeryworker.pid"

      ; Full path to Django app
      directory=/opt/python/current/app
      user=nobody
      numprocs=1
      stdout_logfile=/opt/python/log/celeryworker.log
      stderr_logfile=/opt/python/log/celeryworker.log
      autostart=true
      autorestart=true
      startsecs=10

      ; Set its priority higher so it starts first
      priority=999

  "/opt/elasticbeanstalk/hooks/appdeploy/post/99_celery.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      touch /opt/python/log/celerybeat.log
      touch /opt/python/log/celeryworker.log

      if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf; then
          echo "" | tee -a /opt/python/etc/supervisord.conf
          echo "[include]" | tee -a /opt/python/etc/supervisord.conf
          echo "files: celery.conf" | tee -a /opt/python/etc/supervisord.conf
      fi

      # Reread the supervisord config
      supervisorctl -c /opt/python/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      supervisorctl -c /opt/python/etc/supervisord.conf update

      # Restart celery processes
      rm -f /tmp/*.pid
      supervisorctl -c /opt/python/etc/supervisord.conf restart celerybeat || true
      supervisorctl -c /opt/python/etc/supervisord.conf restart celeryworker || true

  "/opt/elasticbeanstalk/hooks/configdeploy/post/99_celery.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      touch /opt/python/log/celerybeat.log
      touch /opt/python/log/celeryworker.log

      if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf; then
          echo "" | tee -a /opt/python/etc/supervisord.conf
          echo "[include]" | tee -a /opt/python/etc/supervisord.conf
          echo "files: celery.conf" | tee -a /opt/python/etc/supervisord.conf
      fi

      # Reread the supervisord config
      supervisorctl -c /opt/python/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      supervisorctl -c /opt/python/etc/supervisord.conf update

      # Restart celery processes
      rm -f /tmp/*.pid
      supervisorctl -c /opt/python/etc/supervisord.conf restart celerybeat || true
      supervisorctl -c /opt/python/etc/supervisord.conf restart celeryworker || true
